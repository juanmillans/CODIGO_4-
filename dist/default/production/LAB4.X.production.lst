

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jul 06 19:55:19 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 17/10/2023 GMT
    67                           ; 
    68                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4550 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataCOMRAM
   102   0026FC                     __pidataCOMRAM:
   103                           	callstack 0
   104                           
   105                           ;initializer for _rojo
   106   0026FC  06                 	db	6
   107                           
   108                           	psect	idataBANK0
   109   0026F2                     __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for _amarillo
   113   0026F2  04                 	db	4
   114                           
   115                           ;initializer for _verde
   116   0026F3  05                 	db	5
   117                           
   118                           ;initializer for _cyan
   119   0026F4  01                 	db	1
   120                           
   121                           ;initializer for _azul
   122   0026F5  03                 	db	3
   123                           
   124                           ;initializer for _magenta
   125   0026F6  02                 	db	2
   126                           
   127                           ;initializer for _Negro
   128   0026F7  07                 	db	7
   129                           
   130                           	psect	mediumconst
   131   007ED4                     __pmediumconst:
   132                           	callstack 0
   133   007ED4  00                 	db	0
   134   007ED5                     _figura_9:
   135                           	callstack 0
   136   007ED5  00                 	db	0
   137   007ED6  00                 	db	0
   138   007ED7  00                 	db	0
   139   007ED8  1E                 	db	30
   140   007ED9  18                 	db	24
   141   007EDA  10                 	db	16
   142   007EDB  00                 	db	0
   143   007EDC  00                 	db	0
   144   007EDD                     __end_of_figura_9:
   145                           	callstack 0
   146   007EDD                     _figura_8:
   147                           	callstack 0
   148   007EDD  04                 	db	4
   149   007EDE  0E                 	db	14
   150   007EDF  1F                 	db	31
   151   007EE0  15                 	db	21
   152   007EE1  1F                 	db	31
   153   007EE2  1F                 	db	31
   154   007EE3  15                 	db	21
   155   007EE4  00                 	db	0
   156   007EE5                     __end_of_figura_8:
   157                           	callstack 0
   158   007EE5                     _figura_7:
   159                           	callstack 0
   160   007EE5  00                 	db	0
   161   007EE6  1C                 	db	28
   162   007EE7  06                 	db	6
   163   007EE8  03                 	db	3
   164   007EE9  06                 	db	6
   165   007EEA  1C                 	db	28
   166   007EEB  00                 	db	0
   167   007EEC  00                 	db	0
   168   007EED                     __end_of_figura_7:
   169                           	callstack 0
   170   007EED                     _figura_6:
   171                           	callstack 0
   172   007EED  00                 	db	0
   173   007EEE  0C                 	db	12
   174   007EEF  1E                 	db	30
   175   007EF0  07                 	db	7
   176   007EF1  1E                 	db	30
   177   007EF2  0C                 	db	12
   178   007EF3  00                 	db	0
   179   007EF4  00                 	db	0
   180   007EF5                     __end_of_figura_6:
   181                           	callstack 0
   182   007EF5                     _figura_5:
   183                           	callstack 0
   184   007EF5  18                 	db	24
   185   007EF6  0E                 	db	14
   186   007EF7  06                 	db	6
   187   007EF8  01                 	db	1
   188   007EF9  06                 	db	6
   189   007EFA  0E                 	db	14
   190   007EFB  18                 	db	24
   191   007EFC  00                 	db	0
   192   007EFD                     __end_of_figura_5:
   193                           	callstack 0
   194   007EFD                     _figura_4:
   195                           	callstack 0
   196   007EFD  00                 	db	0
   197   007EFE  04                 	db	4
   198   007EFF  0E                 	db	14
   199   007F00  1F                 	db	31
   200   007F01  0E                 	db	14
   201   007F02  04                 	db	4
   202   007F03  00                 	db	0
   203   007F04  00                 	db	0
   204   007F05                     __end_of_figura_4:
   205                           	callstack 0
   206   007F05                     _figura_3:
   207                           	callstack 0
   208   007F05  00                 	db	0
   209   007F06  06                 	db	6
   210   007F07  0F                 	db	15
   211   007F08  1C                 	db	28
   212   007F09  0F                 	db	15
   213   007F0A  06                 	db	6
   214   007F0B  00                 	db	0
   215   007F0C  00                 	db	0
   216   007F0D                     __end_of_figura_3:
   217                           	callstack 0
   218   007F0D                     _figura_2:
   219                           	callstack 0
   220   007F0D  00                 	db	0
   221   007F0E  07                 	db	7
   222   007F0F  0C                 	db	12
   223   007F10  18                 	db	24
   224   007F11  0C                 	db	12
   225   007F12  07                 	db	7
   226   007F13  00                 	db	0
   227   007F14  00                 	db	0
   228   007F15                     __end_of_figura_2:
   229                           	callstack 0
   230   007F15                     _figura_1:
   231                           	callstack 0
   232   007F15  03                 	db	3
   233   007F16  0E                 	db	14
   234   007F17  0C                 	db	12
   235   007F18  18                 	db	24
   236   007F19  0C                 	db	12
   237   007F1A  0E                 	db	14
   238   007F1B  03                 	db	3
   239   007F1C  00                 	db	0
   240   007F1D                     __end_of_figura_1:
   241                           	callstack 0
   242   000000                     _TMR0L	set	4054
   243   000000                     _TMR0H	set	4055
   244   000000                     _TRISCbits	set	3988
   245   000000                     _TRISD	set	3989
   246   000000                     _LATD	set	3980
   247   000000                     _TRISDbits	set	3989
   248   000000                     _TRISAbits	set	3986
   249   000000                     _PORTBbits	set	3969
   250   000000                     _PORTB	set	3969
   251   000000                     _LATAbits	set	3977
   252   000000                     _LATB	set	3978
   253   000000                     _TRISB	set	3987
   254   000000                     _LATDbits	set	3980
   255   000000                     _LATE	set	3981
   256   000000                     _TRISA	set	3986
   257   000000                     _ADCON1bits	set	4033
   258   000000                     _TRISE	set	3990
   259   000000                     _RCONbits	set	4048
   260   000000                     _INTCONbits	set	4082
   261   000000                     _OSCCONbits	set	4051
   262   000000                     _T0CONbits	set	4053
   263   000000                     _INTCON2bits	set	4081
   264   000000                     _PORTCbits	set	3970
   265   007F1D                     STR_20:
   266   007F1D  20                 	db	32
   267   007F1E  20                 	db	32
   268   007F1F  20                 	db	32
   269   007F20  20                 	db	32
   270   007F21  43                 	db	67	;'C'
   271   007F22  6F                 	db	111	;'o'
   272   007F23  6E                 	db	110	;'n'
   273   007F24  74                 	db	116	;'t'
   274   007F25  61                 	db	97	;'a'
   275   007F26  64                 	db	100	;'d'
   276   007F27  6F                 	db	111	;'o'
   277   007F28  72                 	db	114	;'r'
   278   007F29  20                 	db	32
   279   007F2A  20                 	db	32
   280   007F2B  20                 	db	32
   281   007F2C  20                 	db	32
   282   007F2D  00                 	db	0
   283   007F2E                     STR_21:
   284   007F2E  20                 	db	32
   285   007F2F  20                 	db	32
   286   007F30  20                 	db	32
   287   007F31  20                 	db	32
   288   007F32  44                 	db	68	;'D'
   289   007F33  65                 	db	101	;'e'
   290   007F34  20                 	db	32
   291   007F35  50                 	db	80	;'P'
   292   007F36  69                 	db	105	;'i'
   293   007F37  65                 	db	101	;'e'
   294   007F38  7A                 	db	122	;'z'
   295   007F39  61                 	db	97	;'a'
   296   007F3A  73                 	db	115	;'s'
   297   007F3B  20                 	db	32
   298   007F3C  20                 	db	32
   299   007F3D  20                 	db	32
   300   007F3E  00                 	db	0
   301   007F3F                     STR_19:
   302   007F3F  20                 	db	32
   303   007F40  20                 	db	32
   304   007F41  20                 	db	32
   305   007F42  42                 	db	66	;'B'
   306   007F43  69                 	db	105	;'i'
   307   007F44  65                 	db	101	;'e'
   308   007F45  6E                 	db	110	;'n'
   309   007F46  76                 	db	118	;'v'
   310   007F47  65                 	db	101	;'e'
   311   007F48  6E                 	db	110	;'n'
   312   007F49  69                 	db	105	;'i'
   313   007F4A  64                 	db	100	;'d'
   314   007F4B  6F                 	db	111	;'o'
   315   007F4C  73                 	db	115	;'s'
   316   007F4D  20                 	db	32
   317   007F4E  20                 	db	32
   318   007F4F  00                 	db	0
   319   007F50                     STR_2:
   320   007F50  64                 	db	100	;'d'
   321   007F51  65                 	db	101	;'e'
   322   007F52  73                 	db	115	;'s'
   323   007F53  65                 	db	101	;'e'
   324   007F54  61                 	db	97	;'a'
   325   007F55  20                 	db	32
   326   007F56  63                 	db	99	;'c'
   327   007F57  6F                 	db	111	;'o'
   328   007F58  6E                 	db	110	;'n'
   329   007F59  74                 	db	116	;'t'
   330   007F5A  61                 	db	97	;'a'
   331   007F5B  72                 	db	114	;'r'
   332   007F5C  3F                 	db	63	;'?'
   333   007F5D  20                 	db	32
   334   007F5E  20                 	db	32
   335   007F5F  00                 	db	0
   336   007F60                     STR_5:
   337   007F60  65                 	db	101	;'e'
   338   007F61  6D                 	db	109	;'m'
   339   007F62  70                 	db	112	;'p'
   340   007F63  65                 	db	101	;'e'
   341   007F64  7A                 	db	122	;'z'
   342   007F65  61                 	db	97	;'a'
   343   007F66  6D                 	db	109	;'m'
   344   007F67  6F                 	db	111	;'o'
   345   007F68  73                 	db	115	;'s'
   346   007F69  20                 	db	32
   347   007F6A  65                 	db	101	;'e'
   348   007F6B  6E                 	db	110	;'n'
   349   007F6C  20                 	db	32
   350   007F6D  25                 	db	37
   351   007F6E  64                 	db	100	;'d'
   352   007F6F  00                 	db	0
   353   007F70                     STR_3:
   354   007F70  69                 	db	105	;'i'
   355   007F71  6E                 	db	110	;'n'
   356   007F72  67                 	db	103	;'g'
   357   007F73  72                 	db	114	;'r'
   358   007F74  65                 	db	101	;'e'
   359   007F75  73                 	db	115	;'s'
   360   007F76  65                 	db	101	;'e'
   361   007F77  20                 	db	32
   362   007F78  6E                 	db	110	;'n'
   363   007F79  75                 	db	117	;'u'
   364   007F7A  6D                 	db	109	;'m'
   365   007F7B  65                 	db	101	;'e'
   366   007F7C  72                 	db	114	;'r'
   367   007F7D  6F                 	db	111	;'o'
   368   007F7E  00                 	db	0
   369   007F7F                     STR_1:
   370   007F7F  63                 	db	99	;'c'
   371   007F80  75                 	db	117	;'u'
   372   007F81  61                 	db	97	;'a'
   373   007F82  6E                 	db	110	;'n'
   374   007F83  74                 	db	116	;'t'
   375   007F84  61                 	db	97	;'a'
   376   007F85  73                 	db	115	;'s'
   377   007F86  20                 	db	32
   378   007F87  70                 	db	112	;'p'
   379   007F88  69                 	db	105	;'i'
   380   007F89  65                 	db	101	;'e'
   381   007F8A  7A                 	db	122	;'z'
   382   007F8B  61                 	db	97	;'a'
   383   007F8C  73                 	db	115	;'s'
   384   007F8D  00                 	db	0
   385   007F8E                     STR_11:
   386   007F8E  56                 	db	86	;'V'
   387   007F8F  6F                 	db	111	;'o'
   388   007F90  6C                 	db	108	;'l'
   389   007F91  76                 	db	118	;'v'
   390   007F92  65                 	db	101	;'e'
   391   007F93  72                 	db	114	;'r'
   392   007F94  20                 	db	32
   393   007F95  61                 	db	97	;'a'
   394   007F96  6C                 	db	108	;'l'
   395   007F97  20                 	db	32
   396   007F98  6D                 	db	109	;'m'
   397   007F99  65                 	db	101	;'e'
   398   007F9A  6E                 	db	110	;'n'
   399   007F9B  75                 	db	117	;'u'
   400   007F9C  00                 	db	0
   401   007F9D                     STR_10:
   402   007F9D  70                 	db	112	;'p'
   403   007F9E  75                 	db	117	;'u'
   404   007F9F  6C                 	db	108	;'l'
   405   007FA0  73                 	db	115	;'s'
   406   007FA1  61                 	db	97	;'a'
   407   007FA2  20                 	db	32
   408   007FA3  6F                 	db	111	;'o'
   409   007FA4  6B                 	db	107	;'k'
   410   007FA5  20                 	db	32
   411   007FA6  70                 	db	112	;'p'
   412   007FA7  61                 	db	97	;'a'
   413   007FA8  72                 	db	114	;'r'
   414   007FA9  61                 	db	97	;'a'
   415   007FAA  00                 	db	0
   416   007FAB                     STR_7:
   417   007FAB  66                 	db	102	;'f'
   418   007FAC  61                 	db	97	;'a'
   419   007FAD  6C                 	db	108	;'l'
   420   007FAE  74                 	db	116	;'t'
   421   007FAF  61                 	db	97	;'a'
   422   007FB0  6E                 	db	110	;'n'
   423   007FB1  74                 	db	116	;'t'
   424   007FB2  65                 	db	101	;'e'
   425   007FB3  73                 	db	115	;'s'
   426   007FB4  20                 	db	32
   427   007FB5  25                 	db	37
   428   007FB6  64                 	db	100	;'d'
   429   007FB7  00                 	db	0
   430   007FB8                     STR_4:
   431   007FB8  64                 	db	100	;'d'
   432   007FB9  65                 	db	101	;'e'
   433   007FBA  20                 	db	32
   434   007FBB  30                 	db	48	;'0'
   435   007FBC  20                 	db	32
   436   007FBD  61                 	db	97	;'a'
   437   007FBE  20                 	db	32
   438   007FBF  35                 	db	53	;'5'
   439   007FC0  39                 	db	57	;'9'
   440   007FC1  20                 	db	32
   441   007FC2  20                 	db	32
   442   007FC3  00                 	db	0
   443   007FC4                     STR_6:
   444   007FC4  63                 	db	99	;'c'
   445   007FC5  6F                 	db	111	;'o'
   446   007FC6  6E                 	db	110	;'n'
   447   007FC7  74                 	db	116	;'t'
   448   007FC8  61                 	db	97	;'a'
   449   007FC9  64                 	db	100	;'d'
   450   007FCA  61                 	db	97	;'a'
   451   007FCB  73                 	db	115	;'s'
   452   007FCC  20                 	db	32
   453   007FCD  25                 	db	37
   454   007FCE  64                 	db	100	;'d'
   455   007FCF  00                 	db	0
   456   007FD0                     STR_17:
   457   007FD0  45                 	db	69	;'E'
   458   007FD1  6D                 	db	109	;'m'
   459   007FD2  72                 	db	114	;'r'
   460   007FD3  67                 	db	103	;'g'
   461   007FD4  65                 	db	101	;'e'
   462   007FD5  6E                 	db	110	;'n'
   463   007FD6  63                 	db	99	;'c'
   464   007FD7  69                 	db	105	;'i'
   465   007FD8  61                 	db	97	;'a'
   466   007FD9  00                 	db	0
   467   007FDA                     STR_16:
   468   007FDA  50                 	db	80	;'P'
   469   007FDB  61                 	db	97	;'a'
   470   007FDC  72                 	db	114	;'r'
   471   007FDD  61                 	db	97	;'a'
   472   007FDE  64                 	db	100	;'d'
   473   007FDF  61                 	db	97	;'a'
   474   007FE0  20                 	db	32
   475   007FE1  44                 	db	68	;'D'
   476   007FE2  65                 	db	101	;'e'
   477   007FE3  00                 	db	0
   478   007FE4                     STR_9:
   479   007FE4  74                 	db	116	;'t'
   480   007FE5  65                 	db	101	;'e'
   481   007FE6  72                 	db	114	;'r'
   482   007FE7  6D                 	db	109	;'m'
   483   007FE8  69                 	db	105	;'i'
   484   007FE9  6E                 	db	110	;'n'
   485   007FEA  61                 	db	97	;'a'
   486   007FEB  64                 	db	100	;'d'
   487   007FEC  6F                 	db	111	;'o'
   488   007FED  00                 	db	0
   489   007FEE                     STR_15:
   490   007FEE  69                 	db	105	;'i'
   491   007FEF  6E                 	db	110	;'n'
   492   007FF0  76                 	db	118	;'v'
   493   007FF1  61                 	db	97	;'a'
   494   007FF2  6C                 	db	108	;'l'
   495   007FF3  69                 	db	105	;'i'
   496   007FF4  64                 	db	100	;'d'
   497   007FF5  6F                 	db	111	;'o'
   498   007FF6  00                 	db	0
   499   007FF7                     STR_8:
   500   007FF7  63                 	db	99	;'c'
   501   007FF8  6F                 	db	111	;'o'
   502   007FF9  6E                 	db	110	;'n'
   503   007FFA  74                 	db	116	;'t'
   504   007FFB  65                 	db	101	;'e'
   505   007FFC  6F                 	db	111	;'o'
   506   007FFD  00                 	db	0
   507   007FFE  00                 	db	0	; dummy byte at the end
   508   000000                     
   509                           ; #config settings
   510                           
   511                           	psect	cinit
   512   00229A                     __pcinit:
   513                           	callstack 0
   514   00229A                     start_initialization:
   515                           	callstack 0
   516   00229A                     __initialization:
   517                           	callstack 0
   518                           
   519                           ; Initialize objects allocated to BANK0 (6 bytes)
   520                           ; load TBLPTR registers with __pidataBANK0
   521   00229A  0EF2               	movlw	low __pidataBANK0
   522   00229C  6EF6               	movwf	tblptrl,c
   523   00229E  0E26               	movlw	high __pidataBANK0
   524   0022A0  6EF7               	movwf	tblptrh,c
   525   0022A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   526   0022A4  6EF8               	movwf	tblptru,c
   527   0022A6  EE00  F0E8         	lfsr	0,__pdataBANK0
   528   0022AA  EE10 F006          	lfsr	1,6
   529   0022AE                     copy_data0:
   530   0022AE  0009               	tblrd		*+
   531   0022B0  CFF5 FFEE          	movff	tablat,postinc0
   532   0022B4  50E5               	movf	postdec1,w,c
   533   0022B6  50E1               	movf	fsr1l,w,c
   534   0022B8  E1FA               	bnz	copy_data0
   535                           
   536                           ; Initialize objects allocated to COMRAM (1 bytes)
   537                           ; load TBLPTR registers with __pidataCOMRAM
   538   0022BA  0EFC               	movlw	low __pidataCOMRAM
   539   0022BC  6EF6               	movwf	tblptrl,c
   540   0022BE  0E26               	movlw	high __pidataCOMRAM
   541   0022C0  6EF7               	movwf	tblptrh,c
   542   0022C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   543   0022C4  6EF8               	movwf	tblptru,c
   544   0022C6  0009               	tblrd		*+	;fetch initializer
   545   0022C8  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   546                           
   547                           ; Clear objects allocated to BANK1 (52 bytes)
   548   0022CC  EE01  F000         	lfsr	0,__pbssBANK1
   549   0022D0  0E34               	movlw	52
   550   0022D2                     clear_0:
   551   0022D2  6AEE               	clrf	postinc0,c
   552   0022D4  06E8               	decf	wreg,f,c
   553   0022D6  E1FD               	bnz	clear_0
   554                           
   555                           ; Clear objects allocated to BANK0 (64 bytes)
   556   0022D8  EE00  F0A8         	lfsr	0,__pbssBANK0
   557   0022DC  0E40               	movlw	64
   558   0022DE                     clear_1:
   559   0022DE  6AEE               	clrf	postinc0,c
   560   0022E0  06E8               	decf	wreg,f,c
   561   0022E2  E1FD               	bnz	clear_1
   562                           
   563                           ; Clear objects allocated to COMRAM (15 bytes)
   564   0022E4  EE00  F03F         	lfsr	0,__pbssCOMRAM
   565   0022E8  0E0F               	movlw	15
   566   0022EA                     clear_2:
   567   0022EA  6AEE               	clrf	postinc0,c
   568   0022EC  06E8               	decf	wreg,f,c
   569   0022EE  E1FD               	bnz	clear_2
   570   0022F0                     end_of_initialization:
   571                           	callstack 0
   572   0022F0                     __end_of__initialization:
   573                           	callstack 0
   574   0022F0  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   575   0022F2  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   576   0022F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   577   0022F6  6EF8               	movwf	tblptru,c
   578   0022F8  0100               	movlb	0
   579   0022FA  EFEC  F004         	goto	_main	;jump to C main() function
   580                           
   581                           	psect	bssCOMRAM
   582   00003F                     __pbssCOMRAM:
   583                           	callstack 0
   584   00003F                     _ok_en:
   585                           	callstack 0
   586   00003F                     	ds	2
   587   000041                     _ok_flag:
   588                           	callstack 0
   589   000041                     	ds	2
   590   000043                     _E_stop_En:
   591                           	callstack 0
   592   000043                     	ds	2
   593   000045                     _reset_En:
   594                           	callstack 0
   595   000045                     	ds	2
   596   000047                     _back_l_En:
   597                           	callstack 0
   598   000047                     	ds	2
   599   000049                     _Borrado_En:
   600                           	callstack 0
   601   000049                     	ds	2
   602   00004B                     _Keypad_en:
   603                           	callstack 0
   604   00004B                     	ds	2
   605   00004D                     _Tecla:
   606                           	callstack 0
   607   00004D                     	ds	1
   608                           
   609                           	psect	dataCOMRAM
   610   00004E                     __pdataCOMRAM:
   611                           	callstack 0
   612   00004E                     _rojo:
   613                           	callstack 0
   614   00004E                     	ds	1
   615                           
   616                           	psect	bssBANK0
   617   0000A8                     __pbssBANK0:
   618                           	callstack 0
   619   0000A8                     _width:
   620                           	callstack 0
   621   0000A8                     	ds	2
   622   0000AA                     _prec:
   623                           	callstack 0
   624   0000AA                     	ds	2
   625   0000AC                     _check:
   626                           	callstack 0
   627   0000AC                     	ds	2
   628   0000AE                     _times_1:
   629                           	callstack 0
   630   0000AE                     	ds	2
   631   0000B0                     _times:
   632                           	callstack 0
   633   0000B0                     	ds	2
   634   0000B2                     _digito:
   635                           	callstack 0
   636   0000B2                     	ds	2
   637   0000B4                     _result:
   638                           	callstack 0
   639   0000B4                     	ds	2
   640   0000B6                     _count_En:
   641                           	callstack 0
   642   0000B6                     	ds	2
   643   0000B8                     _Borrado:
   644                           	callstack 0
   645   0000B8                     	ds	2
   646   0000BA                     _Numpad_en:
   647                           	callstack 0
   648   0000BA                     	ds	2
   649   0000BC                     _Enter_en:
   650                           	callstack 0
   651   0000BC                     	ds	2
   652   0000BE                     _state:
   653                           	callstack 0
   654   0000BE                     	ds	2
   655   0000C0                     _flags:
   656                           	callstack 0
   657   0000C0                     	ds	1
   658   0000C1                     _blanco:
   659                           	callstack 0
   660   0000C1                     	ds	1
   661   0000C2                     _re_pcs_str:
   662                           	callstack 0
   663   0000C2                     	ds	20
   664   0000D6                     _num_str:
   665                           	callstack 0
   666   0000D6                     	ds	10
   667   0000E0                     _re_pcs:
   668                           	callstack 0
   669   0000E0                     	ds	2
   670   0000E2                     _num:
   671                           	callstack 0
   672   0000E2                     	ds	2
   673   0000E4                     _contador_dec:
   674                           	callstack 0
   675   0000E4                     	ds	2
   676   0000E6                     _contador:
   677                           	callstack 0
   678   0000E6                     	ds	2
   679                           
   680                           	psect	dataBANK0
   681   0000E8                     __pdataBANK0:
   682                           	callstack 0
   683   0000E8                     _amarillo:
   684                           	callstack 0
   685   0000E8                     	ds	1
   686   0000E9                     _verde:
   687                           	callstack 0
   688   0000E9                     	ds	1
   689   0000EA                     _cyan:
   690                           	callstack 0
   691   0000EA                     	ds	1
   692   0000EB                     _azul:
   693                           	callstack 0
   694   0000EB                     	ds	1
   695   0000EC                     _magenta:
   696                           	callstack 0
   697   0000EC                     	ds	1
   698   0000ED                     _Negro:
   699                           	callstack 0
   700   0000ED                     	ds	1
   701                           
   702                           	psect	bssBANK1
   703   000100                     __pbssBANK1:
   704                           	callstack 0
   705   000100                     _dbuf:
   706                           	callstack 0
   707   000100                     	ds	32
   708   000120                     _counted_pcs_str:
   709                           	callstack 0
   710   000120                     	ds	20
   711                           
   712                           	psect	cstackBANK0
   713   000060                     __pcstackBANK0:
   714                           	callstack 0
   715   000060                     ?___wmul:
   716                           	callstack 0
   717   000060                     ?___awdiv:
   718                           	callstack 0
   719   000060                     ?___awmod:
   720                           	callstack 0
   721   000060                     Lcd_Port@a:
   722                           	callstack 0
   723   000060                     RGB_BCD@count_En:
   724                           	callstack 0
   725   000060                     ___wmul@multiplier:
   726                           	callstack 0
   727   000060                     ___awdiv@dividend:
   728                           	callstack 0
   729   000060                     ___awmod@dividend:
   730                           	callstack 0
   731   000060                     fputc@c:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x0
   735   000060                     	ds	1
   736   000061                     ??_Lcd_Cmd:
   737   000061                     Lcd_Write_Char@temp:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x1
   741   000061                     	ds	1
   742   000062                     Lcd_Cmd@a:
   743                           	callstack 0
   744   000062                     Lcd_Write_Char@y:
   745                           	callstack 0
   746   000062                     RGB_BCD@contador:
   747                           	callstack 0
   748   000062                     fputc@fp:
   749                           	callstack 0
   750   000062                     ___wmul@multiplicand:
   751                           	callstack 0
   752   000062                     ___awdiv@divisor:
   753                           	callstack 0
   754   000062                     ___awmod@divisor:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x2
   758   000062                     	ds	1
   759   000063                     ??_Lcd_Init:
   760   000063                     ??_fputc:
   761   000063                     Lcd_Set_Cursor@b:
   762                           	callstack 0
   763   000063                     Lcd_Write_Char@a:
   764                           	callstack 0
   765   000063                     RGB_BCD@contador_dec:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x3
   769   000063                     	ds	1
   770   000064                     Lcd_Set_Cursor@a:
   771                           	callstack 0
   772   000064                     RGB_BCD@re_pcs:
   773                           	callstack 0
   774   000064                     ___awdiv@counter:
   775                           	callstack 0
   776   000064                     ___awmod@counter:
   777                           	callstack 0
   778   000064                     Lcd_Write_String@a:
   779                           	callstack 0
   780   000064                     Lcd_CGRAM_CreateChar@chardata:
   781                           	callstack 0
   782   000064                     ___wmul@product:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x4
   786   000064                     	ds	1
   787   000065                     ??_RGB_BCD:
   788   000065                     Lcd_Set_Cursor@z:
   789                           	callstack 0
   790   000065                     ___awdiv@sign:
   791                           	callstack 0
   792   000065                     ___awmod@sign:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x5
   796   000065                     	ds	1
   797   000066                     ??_Lcd_Write_String:
   798   000066                     ??_Lcd_CGRAM_CreateChar:
   799   000066                     ?_abs:
   800                           	callstack 0
   801   000066                     Lcd_Set_Cursor@y:
   802                           	callstack 0
   803   000066                     ___awdiv@quotient:
   804                           	callstack 0
   805   000066                     abs@a:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x6
   809   000066                     	ds	1
   810   000067                     Lcd_Set_Cursor@temp:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x7
   814   000067                     	ds	1
   815   000068                     ??_abs:
   816   000068                     Lcd_Write_String@i:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x8
   820   000068                     	ds	2
   821   00006A                     Lcd_CGRAM_CreateChar@add:
   822                           	callstack 0
   823   00006A                     vfpfcnvrt@fp:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0xA
   827   00006A                     	ds	1
   828   00006B                     Lcd_CGRAM_CreateChar@i:
   829                           	callstack 0
   830   00006B                     vfpfcnvrt@fmt:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0xB
   834   00006B                     	ds	1
   835   00006C                     Lcd_CGRAM_CreateChar@i_768:
   836                           	callstack 0
   837   00006C                     vfpfcnvrt@ap:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0xC
   841   00006C                     	ds	1
   842   00006D                     ??_vfpfcnvrt:
   843   00006D                     Lcd_CGRAM_CreateChar@i_769:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0xD
   847   00006D                     	ds	1
   848   00006E                     Lcd_CGRAM_CreateChar@i_770:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0xE
   852   00006E                     	ds	1
   853   00006F                     Lcd_CGRAM_CreateChar@i_771:
   854                           	callstack 0
   855   00006F                     vfpfcnvrt@done:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0xF
   859   00006F                     	ds	1
   860   000070                     Lcd_CGRAM_CreateChar@i_772:
   861                           	callstack 0
   862   000070                     vfpfcnvrt@cp:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x10
   866   000070                     	ds	1
   867   000071                     Lcd_CGRAM_CreateChar@i_773:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x11
   871   000071                     	ds	1
   872   000072                     Lcd_CGRAM_CreateChar@i_774:
   873                           	callstack 0
   874   000072                     vfpfcnvrt@convarg:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x12
   878   000072                     	ds	1
   879   000073                     ??_Welcome:
   880                           
   881                           ; 1 bytes @ 0x13
   882   000073                     	ds	2
   883   000075                     Welcome@i:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x15
   887   000075                     	ds	1
   888   000076                     Welcome@i_805:
   889                           	callstack 0
   890   000076                     vfpfcnvrt@c:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x16
   894   000076                     	ds	1
   895   000077                     ?_vfprintf:
   896                           	callstack 0
   897   000077                     Welcome@i_812:
   898                           	callstack 0
   899   000077                     vfprintf@fp:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x17
   903   000077                     	ds	1
   904   000078                     Welcome@i_809:
   905                           	callstack 0
   906   000078                     vfprintf@fmt:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x18
   910   000078                     	ds	1
   911   000079                     Welcome@i_814:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0x19
   915   000079                     	ds	1
   916   00007A                     vfprintf@ap:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x1A
   920   00007A                     	ds	1
   921   00007B                     vfprintf@cfmt:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x1B
   925   00007B                     	ds	2
   926   00007D                     ?_sprintf:
   927                           	callstack 0
   928   00007D                     sprintf@s:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x1D
   932   00007D                     	ds	2
   933   00007F                     sprintf@fmt:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x1F
   937   00007F                     	ds	4
   938   000083                     sprintf@ap:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x23
   942   000083                     	ds	1
   943   000084                     sprintf@f:
   944                           	callstack 0
   945                           
   946                           ; 12 bytes @ 0x24
   947   000084                     	ds	12
   948   000090                     ??_main:
   949                           
   950                           ; 1 bytes @ 0x30
   951   000090                     	ds	2
   952   000092                     main@countdown:
   953                           	callstack 0
   954                           
   955                           ; 20 bytes @ 0x32
   956   000092                     	ds	20
   957   0000A6                     main@i:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x46
   961   0000A6                     	ds	2
   962                           
   963                           	psect	cstackCOMRAM
   964   000001                     __pcstackCOMRAM:
   965                           	callstack 0
   966   000001                     ??_HIGH_PRIORITY_i:
   967   000001                     
   968                           ; 1 bytes @ 0x0
   969   000001                     	ds	1
   970   000002                     ?i1___awdiv:
   971                           	callstack 0
   972   000002                     ?i1___awmod:
   973                           	callstack 0
   974   000002                     i1Lcd_Port@a:
   975                           	callstack 0
   976   000002                     i1___awdiv@dividend:
   977                           	callstack 0
   978   000002                     i1___awmod@dividend:
   979                           	callstack 0
   980   000002                     i1fputc@c:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x1
   984   000002                     	ds	1
   985   000003                     ??i1_Lcd_Cmd:
   986   000003                     i1Lcd_Write_Char@temp:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x2
   990   000003                     	ds	1
   991   000004                     i1Lcd_Cmd@a:
   992                           	callstack 0
   993   000004                     i1Lcd_Write_Char@y:
   994                           	callstack 0
   995   000004                     i1fputc@fp:
   996                           	callstack 0
   997   000004                     i1___awdiv@divisor:
   998                           	callstack 0
   999   000004                     i1___awmod@divisor:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x3
  1003   000004                     	ds	1
  1004   000005                     ??i1_fputc:
  1005   000005                     i1Lcd_Set_Cursor@b:
  1006                           	callstack 0
  1007   000005                     i1Lcd_Write_Char@a:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x4
  1011   000005                     	ds	1
  1012   000006                     i1Lcd_Set_Cursor@a:
  1013                           	callstack 0
  1014   000006                     i1___awdiv@counter:
  1015                           	callstack 0
  1016   000006                     i1___awmod@counter:
  1017                           	callstack 0
  1018   000006                     i1Lcd_Write_String@a:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x5
  1022   000006                     	ds	1
  1023   000007                     i1Lcd_Set_Cursor@z:
  1024                           	callstack 0
  1025   000007                     i1___awdiv@sign:
  1026                           	callstack 0
  1027   000007                     i1___awmod@sign:
  1028                           	callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x6
  1031   000007                     	ds	1
  1032   000008                     ??i1_Lcd_Write_String:
  1033   000008                     ?i1_abs:
  1034                           	callstack 0
  1035   000008                     i1Lcd_Set_Cursor@y:
  1036                           	callstack 0
  1037   000008                     i1___awdiv@quotient:
  1038                           	callstack 0
  1039   000008                     i1abs@a:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x7
  1043   000008                     	ds	1
  1044   000009                     i1Lcd_Set_Cursor@temp:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x8
  1048   000009                     	ds	1
  1049   00000A                     ??i1_abs:
  1050   00000A                     i1Lcd_Write_String@i:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x9
  1054   00000A                     	ds	2
  1055   00000C                     i1vfpfcnvrt@fp:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0xB
  1059   00000C                     	ds	1
  1060   00000D                     i1vfpfcnvrt@fmt:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0xC
  1064   00000D                     	ds	1
  1065   00000E                     i1vfpfcnvrt@ap:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0xD
  1069   00000E                     	ds	1
  1070   00000F                     ??i1_vfpfcnvrt:
  1071                           
  1072                           ; 1 bytes @ 0xE
  1073   00000F                     	ds	2
  1074   000011                     i1vfpfcnvrt@done:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x10
  1078   000011                     	ds	1
  1079   000012                     i1vfpfcnvrt@cp:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x11
  1083   000012                     	ds	2
  1084   000014                     i1vfpfcnvrt@convarg:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x13
  1088   000014                     	ds	4
  1089   000018                     i1vfpfcnvrt@c:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x17
  1093   000018                     	ds	1
  1094   000019                     ?i1_vfprintf:
  1095                           	callstack 0
  1096   000019                     i1vfprintf@fp:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x18
  1100   000019                     	ds	1
  1101   00001A                     i1vfprintf@fmt:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x19
  1105   00001A                     	ds	2
  1106   00001C                     i1vfprintf@ap:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x1B
  1110   00001C                     	ds	1
  1111   00001D                     i1vfprintf@cfmt:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x1C
  1115   00001D                     	ds	2
  1116   00001F                     ?i1_sprintf:
  1117                           	callstack 0
  1118   00001F                     i1sprintf@s:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x1E
  1122   00001F                     	ds	2
  1123   000021                     i1sprintf@fmt:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x20
  1127   000021                     	ds	4
  1128   000025                     i1sprintf@ap:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x24
  1132   000025                     	ds	1
  1133   000026                     i1sprintf@f:
  1134                           	callstack 0
  1135                           
  1136                           ; 12 bytes @ 0x25
  1137   000026                     	ds	12
  1138   000032                     ??_LOW_PRIORITY:
  1139                           
  1140                           ; 1 bytes @ 0x31
  1141   000032                     	ds	13
  1142                           
  1143 ;;
  1144 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1145 ;;
  1146 ;; *************** function _main *****************
  1147 ;; Defined at:
  1148 ;;		line 57 in file "LAB4.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  i               2   70[BANK0 ] int 
  1153 ;;  countdown      20   50[BANK0 ] unsigned char [20]
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0
  1164 ;;      Locals:         0      22       0       0       0       0       0       0       0
  1165 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1166 ;;      Totals:         0      24       0       0       0       0       0       0       0
  1167 ;;Total ram usage:       24 bytes
  1168 ;; Hardware stack levels required when called: 12
  1169 ;; This function calls:
  1170 ;;		_Lcd_Blink
  1171 ;;		_Lcd_Clear
  1172 ;;		_Lcd_Init
  1173 ;;		_Lcd_NoBlink
  1174 ;;		_Lcd_Set_Cursor
  1175 ;;		_Lcd_Write_String
  1176 ;;		_RGB_BCD
  1177 ;;		_Welcome
  1178 ;;		___wmul
  1179 ;;		_blinky
  1180 ;;		_sprintf
  1181 ;; This function is called by:
  1182 ;;		Startup code after reset
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text0
  1187   0009D8                     __ptext0:
  1188                           	callstack 0
  1189   0009D8                     _main:
  1190                           	callstack 19
  1191   0009D8                     
  1192                           ;LAB4.c: 61:    INTCON2bits.RBIP=0;
  1193   0009D8  EC88  F010         	call	_Lcd_Init	;wreg free
  1194   0009DC                     
  1195                           ;LAB4.c: 62:    INTCONbits.RBIF=0;
  1196   0009DC  0EF0               	movlw	240
  1197   0009DE  6E93               	movwf	147,c	;volatile
  1198   0009E0                     
  1199                           ;LAB4.c: 63: 
  1200   0009E0  0EF0               	movlw	240
  1201   0009E2  6E8A               	movwf	138,c	;volatile
  1202   0009E4                     
  1203                           ;LAB4.c: 64: 
  1204   0009E4  0E00               	movlw	0
  1205   0009E6  6E95               	movwf	149,c	;volatile
  1206   0009E8                     
  1207                           ;LAB4.c: 65: 
  1208   0009E8  0E00               	movlw	0
  1209   0009EA  6E96               	movwf	150,c	;volatile
  1210   0009EC                     
  1211                           ;LAB4.c: 66: 
  1212   0009EC  8294               	bsf	148,1,c	;volatile
  1213   0009EE                     
  1214                           ;LAB4.c: 67:     LATE=0b111;
  1215   0009EE  0E00               	movlw	0
  1216   0009F0  6E92               	movwf	146,c	;volatile
  1217   0009F2                     
  1218                           ;LAB4.c: 68:     LATDbits.LATD0=0;
  1219   0009F2  0E0F               	movlw	15
  1220   0009F4  12C1               	iorwf	193,f,c	;volatile
  1221   0009F6                     
  1222                           ;LAB4.c: 70:     LATDbits.LATD2=0;
  1223   0009F6  8EF2               	bsf	242,7,c	;volatile
  1224   0009F8                     
  1225                           ;LAB4.c: 71:     LATDbits.LATD3=0;
  1226   0009F8  8CF2               	bsf	242,6,c	;volatile
  1227   0009FA                     
  1228                           ;LAB4.c: 72:     while(1)
  1229   0009FA  8ED0               	bsf	208,7,c	;volatile
  1230   0009FC                     
  1231                           ;LAB4.c: 74:     {
  1232   0009FC  0E70               	movlw	112
  1233   0009FE  12D3               	iorwf	211,f,c	;volatile
  1234   000A00                     
  1235                           ;LAB4.c: 75:       blinky ();
  1236   000A00  50D3               	movf	211,w,c	;volatile
  1237   000A02  0BFC               	andlw	-4
  1238   000A04  0902               	iorlw	2
  1239   000A06  6ED3               	movwf	211,c	;volatile
  1240   000A08                     
  1241                           ;LAB4.c: 77: 
  1242   000A08  86F2               	bsf	242,3,c	;volatile
  1243   000A0A                     
  1244                           ;LAB4.c: 78:         {
  1245   000A0A  90F1               	bcf	241,0,c	;volatile
  1246   000A0C                     
  1247                           ;LAB4.c: 79:           case 0:
  1248   000A0C  90F2               	bcf	242,0,c	;volatile
  1249   000A0E                     
  1250                           ;LAB4.c: 84:               break;
  1251   000A0E  0E07               	movlw	7
  1252   000A10  6E8D               	movwf	141,c	;volatile
  1253   000A12                     
  1254                           ;LAB4.c: 85:           case 1:
  1255   000A12  908C               	bcf	140,0,c	;volatile
  1256   000A14                     
  1257                           ;LAB4.c: 86: 
  1258   000A14  928C               	bcf	140,1,c	;volatile
  1259   000A16                     
  1260                           ;LAB4.c: 87:             if (times<1)
  1261   000A16  948C               	bcf	140,2,c	;volatile
  1262   000A18                     
  1263                           ;LAB4.c: 88:               {
  1264   000A18  968C               	bcf	140,3,c	;volatile
  1265   000A1A                     l3605:
  1266                           
  1267                           ;LAB4.c: 91:                 Lcd_Set_Cursor(2,1);;LAB4.c: 92:                 Lcd_Write_
      +                          String("desea contar?  ");
  1268   000A1A  EC1A  F013         	call	_blinky	;wreg free
  1269                           
  1270                           ;LAB4.c: 93:                 _delay((unsigned long)((2000)*(8000000UL/4000.0)));
  1271   000A1E  EF40  F007         	goto	l3769
  1272   000A22                     l111:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;LAB4.c: 97:                 Lcd_Set_Cursor(1,1);
  1276   000A22  8689               	bsf	137,3,c	;volatile
  1277   000A24                     
  1278                           ; BSR set to: 0
  1279                           ;LAB4.c: 98:                 Lcd_Write_String("ingrese numero");
  1280   000A24  EC61  F007         	call	_Welcome	;wreg free
  1281   000A28                     
  1282                           ;LAB4.c: 99:                 Lcd_Set_Cursor(2,1);
  1283   000A28  0100               	movlb	0	; () banked
  1284   000A2A  4BBE               	infsnz	_state& (0+255),f,b
  1285   000A2C  2BBF               	incf	(_state+1)& (0+255),f,b
  1286   000A2E                     
  1287                           ; BSR set to: 0
  1288                           ;LAB4.c: 100:                 Lcd_Write_String("de 0 a 59  ");
  1289   000A2E  0E00               	movlw	0
  1290   000A30  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  1291   000A32  0E00               	movlw	0
  1292   000A34  6FBA               	movwf	_Numpad_en& (0+255),b
  1293                           
  1294                           ;LAB4.c: 101:                 Lcd_Blink();
  1295   000A36  EF0D  F005         	goto	l3605
  1296   000A3A                     l3613:
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;LAB4.c: 104: 
  1300   000A3A  BFB1               	btfsc	(_times+1)& (0+255),7,b
  1301   000A3C  EF2A  F005         	goto	u2470
  1302   000A40  51B1               	movf	(_times+1)& (0+255),w,b
  1303   000A42  E106               	bnz	u2471
  1304   000A44  05B0               	decf	_times& (0+255),w,b
  1305   000A46  B0D8               	btfsc	status,0,c
  1306   000A48  EF28  F005         	goto	u2471
  1307   000A4C  EF2A  F005         	goto	u2470
  1308   000A50                     u2471:
  1309   000A50  EF8C  F005         	goto	l3645
  1310   000A54                     u2470:
  1311   000A54                     
  1312                           ; BSR set to: 0
  1313                           ;LAB4.c: 105: ;LAB4.c: 106:                 times++;
  1314   000A54  0E01               	movlw	1
  1315   000A56  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1316   000A58  0E01               	movlw	1
  1317   000A5A  EC7F  F00D         	call	_Lcd_Set_Cursor
  1318   000A5E                     
  1319                           ;LAB4.c: 107:               }
  1320   000A5E  0E7F               	movlw	low STR_1
  1321   000A60  0100               	movlb	0	; () banked
  1322   000A62  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1323   000A64  0E7F               	movlw	high STR_1
  1324   000A66  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1325   000A68  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1326   000A6C                     
  1327                           ;LAB4.c: 108: 
  1328   000A6C  0E01               	movlw	1
  1329   000A6E  0100               	movlb	0	; () banked
  1330   000A70  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1331   000A72  0E02               	movlw	2
  1332   000A74  EC7F  F00D         	call	_Lcd_Set_Cursor
  1333                           
  1334                           ;LAB4.c: 109:             if (Numpad_en && Enter_en &&(digito<2))
  1335   000A78  0E50               	movlw	low STR_2
  1336   000A7A  0100               	movlb	0	; () banked
  1337   000A7C  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1338   000A7E  0E7F               	movlw	high STR_2
  1339   000A80  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1340   000A82  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1341   000A86                     
  1342                           ;LAB4.c: 110:             {
  1343   000A86  0E15               	movlw	21
  1344   000A88  0100               	movlb	0	; () banked
  1345   000A8A  6F91               	movwf	(??_main+1)& (0+255),b
  1346   000A8C  0E4B               	movlw	75
  1347   000A8E  6F90               	movwf	??_main& (0+255),b
  1348   000A90  0EBE               	movlw	190
  1349   000A92                     u3017:
  1350   000A92  2EE8               	decfsz	wreg,f,c
  1351   000A94  D7FE               	bra	u3017
  1352   000A96  2F90               	decfsz	??_main& (0+255),f,b
  1353   000A98  D7FC               	bra	u3017
  1354   000A9A  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1355   000A9C  D7FA               	bra	u3017
  1356   000A9E  0000               	nop	
  1357   000AA0                     
  1358                           ;LAB4.c: 111:               switch(digito)
  1359   000AA0  EC48  F013         	call	_Lcd_Clear	;wreg free
  1360   000AA4                     
  1361                           ;LAB4.c: 112:                 {
  1362   000AA4  0E01               	movlw	1
  1363   000AA6  0100               	movlb	0	; () banked
  1364   000AA8  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1365   000AAA  0E01               	movlw	1
  1366   000AAC  EC7F  F00D         	call	_Lcd_Set_Cursor
  1367   000AB0                     
  1368                           ;LAB4.c: 113:                   case 0:
  1369   000AB0  0E02               	movlw	2
  1370   000AB2  0100               	movlb	0	; () banked
  1371   000AB4  6F91               	movwf	(??_main+1)& (0+255),b
  1372   000AB6  0E04               	movlw	4
  1373   000AB8  6F90               	movwf	??_main& (0+255),b
  1374   000ABA  0EBA               	movlw	186
  1375   000ABC                     u3027:
  1376   000ABC  2EE8               	decfsz	wreg,f,c
  1377   000ABE  D7FE               	bra	u3027
  1378   000AC0  2F90               	decfsz	??_main& (0+255),f,b
  1379   000AC2  D7FC               	bra	u3027
  1380   000AC4  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1381   000AC6  D7FA               	bra	u3027
  1382   000AC8  0000               	nop	
  1383   000ACA                     
  1384                           ;LAB4.c: 114:                     if(Borrado==0)
  1385   000ACA  0E01               	movlw	1
  1386   000ACC  0100               	movlb	0	; () banked
  1387   000ACE  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1388   000AD0  0E01               	movlw	1
  1389   000AD2  EC7F  F00D         	call	_Lcd_Set_Cursor
  1390   000AD6                     
  1391                           ;LAB4.c: 115:                     {
  1392   000AD6  0E70               	movlw	low STR_3
  1393   000AD8  0100               	movlb	0	; () banked
  1394   000ADA  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1395   000ADC  0E7F               	movlw	high STR_3
  1396   000ADE  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1397   000AE0  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1398   000AE4                     
  1399                           ;LAB4.c: 116:                   Lcd_Set_Cursor(2,12);
  1400   000AE4  0E01               	movlw	1
  1401   000AE6  0100               	movlb	0	; () banked
  1402   000AE8  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1403   000AEA  0E02               	movlw	2
  1404   000AEC  EC7F  F00D         	call	_Lcd_Set_Cursor
  1405   000AF0                     
  1406                           ;LAB4.c: 117:                   Lcd_Write_String(num_str);
  1407   000AF0  0EB8               	movlw	low STR_4
  1408   000AF2  0100               	movlb	0	; () banked
  1409   000AF4  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1410   000AF6  0E7F               	movlw	high STR_4
  1411   000AF8  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1412   000AFA  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1413   000AFE                     
  1414                           ;LAB4.c: 118:                   result=10*num;
  1415   000AFE  EC64  F013         	call	_Lcd_Blink	;wreg free
  1416   000B02                     
  1417                           ;LAB4.c: 119:                   digito++;
  1418   000B02  0E00               	movlw	0
  1419   000B04  0100               	movlb	0	; () banked
  1420   000B06  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  1421   000B08  0E01               	movlw	1
  1422   000B0A  6FBA               	movwf	_Numpad_en& (0+255),b
  1423   000B0C                     
  1424                           ; BSR set to: 0
  1425                           ;LAB4.c: 120: 
  1426   000B0C  0E00               	movlw	0
  1427   000B0E  6E4A               	movwf	(_Borrado_En+1)^0,c
  1428   000B10  0E01               	movlw	1
  1429   000B12  6E49               	movwf	_Borrado_En^0,c
  1430   000B14                     
  1431                           ; BSR set to: 0
  1432                           ;LAB4.c: 123:                   break;
  1433   000B14  4BB0               	infsnz	_times& (0+255),f,b
  1434   000B16  2BB1               	incf	(_times+1)& (0+255),f,b
  1435   000B18                     l3645:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;LAB4.c: 126:                   case 1:
  1439   000B18  51BA               	movf	_Numpad_en& (0+255),w,b
  1440   000B1A  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  1441   000B1C  B4D8               	btfsc	status,2,c
  1442   000B1E  EF93  F005         	goto	u2481
  1443   000B22  EF95  F005         	goto	u2480
  1444   000B26                     u2481:
  1445   000B26  EF0D  F005         	goto	l3605
  1446   000B2A                     u2480:
  1447   000B2A                     
  1448                           ; BSR set to: 0
  1449   000B2A  51BC               	movf	_Enter_en& (0+255),w,b
  1450   000B2C  11BD               	iorwf	(_Enter_en+1)& (0+255),w,b
  1451   000B2E  B4D8               	btfsc	status,2,c
  1452   000B30  EF9C  F005         	goto	u2491
  1453   000B34  EF9E  F005         	goto	u2490
  1454   000B38                     u2491:
  1455   000B38  EF0D  F005         	goto	l3605
  1456   000B3C                     u2490:
  1457   000B3C                     
  1458                           ; BSR set to: 0
  1459   000B3C  BFB3               	btfsc	(_digito+1)& (0+255),7,b
  1460   000B3E  EFAC  F005         	goto	u2500
  1461   000B42  51B3               	movf	(_digito+1)& (0+255),w,b
  1462   000B44  E107               	bnz	u2501
  1463   000B46  0E02               	movlw	2
  1464   000B48  5DB2               	subwf	_digito& (0+255),w,b
  1465   000B4A  B0D8               	btfsc	status,0,c
  1466   000B4C  EFAA  F005         	goto	u2501
  1467   000B50  EFAC  F005         	goto	u2500
  1468   000B54                     u2501:
  1469   000B54  EF0D  F005         	goto	l3605
  1470   000B58                     u2500:
  1471   000B58  EFF4  F005         	goto	l3679
  1472   000B5C                     l3653:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;LAB4.c: 131:                   Numpad_en=0;
  1476   000B5C  51B8               	movf	_Borrado& (0+255),w,b
  1477   000B5E  11B9               	iorwf	(_Borrado+1)& (0+255),w,b
  1478   000B60  A4D8               	btfss	status,2,c
  1479   000B62  EFB5  F005         	goto	u2511
  1480   000B66  EFB7  F005         	goto	u2510
  1481   000B6A                     u2511:
  1482   000B6A  EF0A  F006         	goto	l3681
  1483   000B6E                     u2510:
  1484   000B6E                     
  1485                           ; BSR set to: 0
  1486                           ;LAB4.c: 132:                   ok_en=1;;LAB4.c: 133:                   digito++;
  1487   000B6E  0E0C               	movlw	12
  1488   000B70  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1489   000B72  0E02               	movlw	2
  1490   000B74  EC7F  F00D         	call	_Lcd_Set_Cursor
  1491   000B78                     
  1492                           ;LAB4.c: 134: 
  1493   000B78  0ED6               	movlw	low _num_str
  1494   000B7A  0100               	movlb	0	; () banked
  1495   000B7C  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1496   000B7E  6B65               	clrf	(Lcd_Write_String@a+1)& (0+255),b
  1497   000B80  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1498   000B84                     
  1499                           ;LAB4.c: 135:                   break;
  1500   000B84  C0E2  F060         	movff	_num,___wmul@multiplier
  1501   000B88  C0E3  F061         	movff	_num+1,___wmul@multiplier+1
  1502   000B8C  0E00               	movlw	0
  1503   000B8E  0100               	movlb	0	; () banked
  1504   000B90  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1505   000B92  0E0A               	movlw	10
  1506   000B94  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1507   000B96  ECF3  F012         	call	___wmul	;wreg free
  1508   000B9A  C060  F0B4         	movff	?___wmul,_result
  1509   000B9E  C061  F0B5         	movff	?___wmul+1,_result+1
  1510   000BA2                     l3661:
  1511                           
  1512                           ;LAB4.c: 136:               }
  1513   000BA2  0100               	movlb	0	; () banked
  1514   000BA4  4BB2               	infsnz	_digito& (0+255),f,b
  1515   000BA6  2BB3               	incf	(_digito+1)& (0+255),f,b
  1516   000BA8  EF0A  F006         	goto	l3681
  1517   000BAC                     l3663:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;LAB4.c: 144:           case 2:
  1521   000BAC  0E0D               	movlw	13
  1522   000BAE  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1523   000BB0  0E02               	movlw	2
  1524   000BB2  EC7F  F00D         	call	_Lcd_Set_Cursor
  1525   000BB6                     
  1526                           ;LAB4.c: 145:             Borrado_En=0;
  1527   000BB6  0ED6               	movlw	low _num_str
  1528   000BB8  0100               	movlb	0	; () banked
  1529   000BBA  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1530   000BBC  6B65               	clrf	(Lcd_Write_String@a+1)& (0+255),b
  1531   000BBE  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1532   000BC2                     
  1533                           ;LAB4.c: 146:             ok_en=0;
  1534   000BC2  EC5D  F013         	call	_Lcd_NoBlink	;wreg free
  1535   000BC6                     
  1536                           ;LAB4.c: 147: 
  1537   000BC6  0100               	movlb	0	; () banked
  1538   000BC8  51E2               	movf	_num& (0+255),w,b
  1539   000BCA  25B4               	addwf	_result& (0+255),w,b
  1540   000BCC  6FB4               	movwf	_result& (0+255),b
  1541   000BCE  51E3               	movf	(_num+1)& (0+255),w,b
  1542   000BD0  21B5               	addwfc	(_result+1)& (0+255),w,b
  1543   000BD2  6FB5               	movwf	(_result+1)& (0+255),b
  1544   000BD4                     
  1545                           ; BSR set to: 0
  1546                           ;LAB4.c: 148:             if (times_1<1)
  1547   000BD4  0E00               	movlw	0
  1548   000BD6  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  1549   000BD8  0E00               	movlw	0
  1550   000BDA  6FBA               	movwf	_Numpad_en& (0+255),b
  1551   000BDC                     
  1552                           ; BSR set to: 0
  1553                           ;LAB4.c: 149:               {
  1554   000BDC  0E00               	movlw	0
  1555   000BDE  6E40               	movwf	(_ok_en+1)^0,c
  1556   000BE0  0E01               	movlw	1
  1557   000BE2  6E3F               	movwf	_ok_en^0,c
  1558   000BE4  EFD1  F005         	goto	l3661
  1559   000BE8                     l3679:
  1560                           
  1561                           ; BSR set to: 0
  1562   000BE8  C0B2  F090         	movff	_digito,??_main
  1563   000BEC  C0B3  F091         	movff	_digito+1,??_main+1
  1564                           
  1565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1566                           ; Switch size 1, requested type "simple"
  1567                           ; Number of cases is 1, Range of values is 0 to 0
  1568                           ; switch strategies available:
  1569                           ; Name         Instructions Cycles
  1570                           ; simple_byte            4     3 (average)
  1571                           ;	Chosen strategy is simple_byte
  1572   000BF0  5191               	movf	(??_main+1)& (0+255),w,b
  1573   000BF2  0A00               	xorlw	0	; case 0
  1574   000BF4  B4D8               	btfsc	status,2,c
  1575   000BF6  EFFF  F005         	goto	l4129
  1576   000BFA  EF0A  F006         	goto	l3681
  1577   000BFE                     l4129:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ; Switch size 1, requested type "simple"
  1581                           ; Number of cases is 2, Range of values is 0 to 1
  1582                           ; switch strategies available:
  1583                           ; Name         Instructions Cycles
  1584                           ; simple_byte            7     4 (average)
  1585                           ;	Chosen strategy is simple_byte
  1586   000BFE  5190               	movf	??_main& (0+255),w,b
  1587   000C00  0A00               	xorlw	0	; case 0
  1588   000C02  B4D8               	btfsc	status,2,c
  1589   000C04  EFAE  F005         	goto	l3653
  1590   000C08  0A01               	xorlw	1	; case 1
  1591   000C0A  B4D8               	btfsc	status,2,c
  1592   000C0C  EFD6  F005         	goto	l3663
  1593   000C10  EF0A  F006         	goto	l3681
  1594   000C14                     l3681:
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;LAB4.c: 155:                     Lcd_Clear();
  1598   000C14  0E00               	movlw	0
  1599   000C16  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  1600   000C18  0E00               	movlw	0
  1601   000C1A  6FBC               	movwf	_Enter_en& (0+255),b
  1602   000C1C  EF0D  F005         	goto	l3605
  1603   000C20                     l3683:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;LAB4.c: 162:               }
  1607   000C20  0E00               	movlw	0
  1608   000C22  6E4A               	movwf	(_Borrado_En+1)^0,c
  1609   000C24  0E00               	movlw	0
  1610   000C26  6E49               	movwf	_Borrado_En^0,c
  1611                           
  1612                           ;LAB4.c: 163: 
  1613   000C28  0E00               	movlw	0
  1614   000C2A  6E40               	movwf	(_ok_en+1)^0,c
  1615   000C2C  0E00               	movlw	0
  1616   000C2E  6E3F               	movwf	_ok_en^0,c
  1617   000C30                     
  1618                           ; BSR set to: 0
  1619                           ;LAB4.c: 165: 
  1620   000C30  BFAF               	btfsc	(_times_1+1)& (0+255),7,b
  1621   000C32  EF25  F006         	goto	u2520
  1622   000C36  51AF               	movf	(_times_1+1)& (0+255),w,b
  1623   000C38  E106               	bnz	u2521
  1624   000C3A  05AE               	decf	_times_1& (0+255),w,b
  1625   000C3C  B0D8               	btfsc	status,0,c
  1626   000C3E  EF23  F006         	goto	u2521
  1627   000C42  EF25  F006         	goto	u2520
  1628   000C46                     u2521:
  1629   000C46  EF64  F006         	goto	l3713
  1630   000C4A                     u2520:
  1631   000C4A                     
  1632                           ; BSR set to: 0
  1633                           ;LAB4.c: 166:               RGB_BCD(count_En,&contador, &contador_dec,&re_pcs ) ;;LAB4.c
      +                          : 167:               if (re_pcs !=check)
  1634   000C4A  EC48  F013         	call	_Lcd_Clear	;wreg free
  1635   000C4E                     
  1636                           ;LAB4.c: 168:               {;LAB4.c: 169: 
  1637   000C4E  0E00               	movlw	0
  1638   000C50  0100               	movlb	0	; () banked
  1639   000C52  6FA7               	movwf	(main@i+1)& (0+255),b
  1640   000C54  0E03               	movlw	3
  1641   000C56  6FA6               	movwf	main@i& (0+255),b
  1642   000C58                     l3695:
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;LAB4.c: 170: ;LAB4.c: 171:                 Lcd_Clear();
  1646   000C58  0E92               	movlw	low main@countdown
  1647   000C5A  6F7D               	movwf	sprintf@s& (0+255),b
  1648   000C5C  6B7E               	clrf	(sprintf@s+1)& (0+255),b
  1649   000C5E  0E60               	movlw	low STR_5
  1650   000C60  6F7F               	movwf	sprintf@fmt& (0+255),b
  1651   000C62  0E7F               	movlw	high STR_5
  1652   000C64  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  1653   000C66  C0A6  F081         	movff	main@i,?_sprintf+4
  1654   000C6A  C0A7  F082         	movff	main@i+1,?_sprintf+5
  1655   000C6E  EC00  F012         	call	_sprintf	;wreg free
  1656   000C72                     
  1657                           ;LAB4.c: 172:                 sprintf(counted_pcs_str,"contadas %d", 10*contador_dec+con
      +                          tador);
  1658   000C72  EC48  F013         	call	_Lcd_Clear	;wreg free
  1659   000C76                     
  1660                           ;LAB4.c: 173:                 sprintf(re_pcs_str,"faltantes %d",re_pcs);
  1661   000C76  0E01               	movlw	1
  1662   000C78  0100               	movlb	0	; () banked
  1663   000C7A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1664   000C7C  0E01               	movlw	1
  1665   000C7E  EC7F  F00D         	call	_Lcd_Set_Cursor
  1666   000C82                     
  1667                           ;LAB4.c: 174:                 Lcd_Set_Cursor(1,1);
  1668   000C82  0E92               	movlw	low main@countdown
  1669   000C84  0100               	movlb	0	; () banked
  1670   000C86  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1671   000C88  6B65               	clrf	(Lcd_Write_String@a+1)& (0+255),b
  1672   000C8A  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1673   000C8E                     
  1674                           ;LAB4.c: 175:                 Lcd_Write_String(counted_pcs_str);
  1675   000C8E  0E0B               	movlw	11
  1676   000C90  0100               	movlb	0	; () banked
  1677   000C92  6F91               	movwf	(??_main+1)& (0+255),b
  1678   000C94  0E26               	movlw	38
  1679   000C96  6F90               	movwf	??_main& (0+255),b
  1680   000C98  0E5D               	movlw	93
  1681   000C9A                     u3037:
  1682   000C9A  2EE8               	decfsz	wreg,f,c
  1683   000C9C  D7FE               	bra	u3037
  1684   000C9E  2F90               	decfsz	??_main& (0+255),f,b
  1685   000CA0  D7FC               	bra	u3037
  1686   000CA2  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1687   000CA4  D7FA               	bra	u3037
  1688   000CA6  D000               	nop2	
  1689   000CA8                     
  1690                           ;LAB4.c: 176:                 Lcd_Set_Cursor(2,1);
  1691   000CA8  0100               	movlb	0	; () banked
  1692   000CAA  07A6               	decf	main@i& (0+255),f,b
  1693   000CAC  A0D8               	btfss	status,0,c
  1694   000CAE  07A7               	decf	(main@i+1)& (0+255),f,b
  1695   000CB0                     
  1696                           ; BSR set to: 0
  1697   000CB0  BFA7               	btfsc	(main@i+1)& (0+255),7,b
  1698   000CB2  EF5F  F006         	goto	u2530
  1699   000CB6  EF5D  F006         	goto	u2531
  1700   000CBA                     u2531:
  1701   000CBA  EF2C  F006         	goto	l3695
  1702   000CBE                     u2530:
  1703   000CBE                     
  1704                           ; BSR set to: 0
  1705                           ;LAB4.c: 177:                 Lcd_Write_String(re_pcs_str);
  1706   000CBE  EC48  F013         	call	_Lcd_Clear	;wreg free
  1707   000CC2                     
  1708                           ;LAB4.c: 178:                 if (re_pcs==0)
  1709   000CC2  0100               	movlb	0	; () banked
  1710   000CC4  4BAE               	infsnz	_times_1& (0+255),f,b
  1711   000CC6  2BAF               	incf	(_times_1+1)& (0+255),f,b
  1712   000CC8                     l3713:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;LAB4.c: 183:                 }
  1716   000CC8  C0B6  F060         	movff	_count_En,RGB_BCD@count_En
  1717   000CCC  C0B7  F061         	movff	_count_En+1,RGB_BCD@count_En+1
  1718   000CD0  0EE6               	movlw	low _contador
  1719   000CD2  6F62               	movwf	RGB_BCD@contador& (0+255),b
  1720   000CD4  0EE4               	movlw	low _contador_dec
  1721   000CD6  6F63               	movwf	RGB_BCD@contador_dec& (0+255),b
  1722   000CD8  0EE0               	movlw	low _re_pcs
  1723   000CDA  6F64               	movwf	RGB_BCD@re_pcs& (0+255),b
  1724   000CDC  ECE0  F00C         	call	_RGB_BCD	;wreg free
  1725   000CE0                     
  1726                           ;LAB4.c: 184: 
  1727   000CE0  0100               	movlb	0	; () banked
  1728   000CE2  51AC               	movf	_check& (0+255),w,b
  1729   000CE4  19E0               	xorwf	_re_pcs& (0+255),w,b
  1730   000CE6  E109               	bnz	u2540
  1731   000CE8  51AD               	movf	(_check+1)& (0+255),w,b
  1732   000CEA  19E1               	xorwf	(_re_pcs+1)& (0+255),w,b
  1733   000CEC  B4D8               	btfsc	status,2,c
  1734   000CEE  EF7B  F006         	goto	u2541
  1735   000CF2  EF7D  F006         	goto	u2540
  1736   000CF6                     u2541:
  1737   000CF6  EF0D  F005         	goto	l3605
  1738   000CFA                     u2540:
  1739   000CFA                     
  1740                           ; BSR set to: 0
  1741                           ;LAB4.c: 185:                  check=re_pcs;;LAB4.c: 188: 
  1742   000CFA  EC48  F013         	call	_Lcd_Clear	;wreg free
  1743   000CFE                     
  1744                           ;LAB4.c: 189:             break;
  1745   000CFE  0E20               	movlw	low _counted_pcs_str
  1746   000D00  0100               	movlb	0	; () banked
  1747   000D02  6F7D               	movwf	sprintf@s& (0+255),b
  1748   000D04  0E01               	movlw	high _counted_pcs_str
  1749   000D06  6F7E               	movwf	(sprintf@s+1)& (0+255),b
  1750   000D08  0EC4               	movlw	low STR_6
  1751   000D0A  6F7F               	movwf	sprintf@fmt& (0+255),b
  1752   000D0C  0E7F               	movlw	high STR_6
  1753   000D0E  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  1754   000D10  C0E4  F060         	movff	_contador_dec,___wmul@multiplier
  1755   000D14  C0E5  F061         	movff	_contador_dec+1,___wmul@multiplier+1
  1756   000D18  0E00               	movlw	0
  1757   000D1A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1758   000D1C  0E0A               	movlw	10
  1759   000D1E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1760   000D20  ECF3  F012         	call	___wmul	;wreg free
  1761   000D24  0100               	movlb	0	; () banked
  1762   000D26  51E6               	movf	_contador& (0+255),w,b
  1763   000D28  2560               	addwf	?___wmul& (0+255),w,b
  1764   000D2A  6F81               	movwf	(?_sprintf+4)& (0+255),b
  1765   000D2C  51E7               	movf	(_contador+1)& (0+255),w,b
  1766   000D2E  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1767   000D30  6F82               	movwf	(?_sprintf+5)& (0+255),b
  1768   000D32  EC00  F012         	call	_sprintf	;wreg free
  1769   000D36                     
  1770                           ;LAB4.c: 190:           case 3:
  1771   000D36  0EC2               	movlw	low _re_pcs_str
  1772   000D38  0100               	movlb	0	; () banked
  1773   000D3A  6F7D               	movwf	sprintf@s& (0+255),b
  1774   000D3C  6B7E               	clrf	(sprintf@s+1)& (0+255),b
  1775   000D3E  0EAB               	movlw	low STR_7
  1776   000D40  6F7F               	movwf	sprintf@fmt& (0+255),b
  1777   000D42  0E7F               	movlw	high STR_7
  1778   000D44  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  1779   000D46  C0E0  F081         	movff	_re_pcs,?_sprintf+4
  1780   000D4A  C0E1  F082         	movff	_re_pcs+1,?_sprintf+5
  1781   000D4E  EC00  F012         	call	_sprintf	;wreg free
  1782   000D52                     
  1783                           ;LAB4.c: 191: 
  1784   000D52  0E01               	movlw	1
  1785   000D54  0100               	movlb	0	; () banked
  1786   000D56  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1787   000D58  0E01               	movlw	1
  1788   000D5A  EC7F  F00D         	call	_Lcd_Set_Cursor
  1789   000D5E                     
  1790                           ;LAB4.c: 192:               if (times_1<1)
  1791   000D5E  0E20               	movlw	low _counted_pcs_str
  1792   000D60  0100               	movlb	0	; () banked
  1793   000D62  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1794   000D64  0E01               	movlw	high _counted_pcs_str
  1795   000D66  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1796   000D68  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1797   000D6C                     
  1798                           ;LAB4.c: 193:               {
  1799   000D6C  0E01               	movlw	1
  1800   000D6E  0100               	movlb	0	; () banked
  1801   000D70  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1802   000D72  0E02               	movlw	2
  1803   000D74  EC7F  F00D         	call	_Lcd_Set_Cursor
  1804   000D78                     
  1805                           ;LAB4.c: 194:                 Lcd_Set_Cursor(1,1);
  1806   000D78  0EC2               	movlw	low _re_pcs_str
  1807   000D7A  0100               	movlb	0	; () banked
  1808   000D7C  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1809   000D7E  6B65               	clrf	(Lcd_Write_String@a+1)& (0+255),b
  1810   000D80  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1811   000D84                     
  1812                           ;LAB4.c: 195:                 Lcd_Write_String("conteo");
  1813   000D84  0100               	movlb	0	; () banked
  1814   000D86  51E0               	movf	_re_pcs& (0+255),w,b
  1815   000D88  11E1               	iorwf	(_re_pcs+1)& (0+255),w,b
  1816   000D8A  A4D8               	btfss	status,2,c
  1817   000D8C  EFCA  F006         	goto	u2551
  1818   000D90  EFCC  F006         	goto	u2550
  1819   000D94                     u2551:
  1820   000D94  EFD5  F006         	goto	l3739
  1821   000D98                     u2550:
  1822   000D98                     
  1823                           ; BSR set to: 0
  1824                           ;LAB4.c: 196:                 Lcd_Set_Cursor(2,1);;LAB4.c: 197:                 Lcd_Writ
      +                          e_String("terminado");
  1825   000D98  EC48  F013         	call	_Lcd_Clear	;wreg free
  1826   000D9C                     
  1827                           ;LAB4.c: 198:                 _delay((unsigned long)((2000)*(8000000UL/4000.0)));
  1828   000D9C  0E00               	movlw	0
  1829   000D9E  0100               	movlb	0	; () banked
  1830   000DA0  6FAF               	movwf	(_times_1+1)& (0+255),b
  1831   000DA2  0E00               	movlw	0
  1832   000DA4  6FAE               	movwf	_times_1& (0+255),b
  1833   000DA6                     
  1834                           ; BSR set to: 0
  1835                           ;LAB4.c: 199:                 Lcd_Clear();
  1836   000DA6  4BBE               	infsnz	_state& (0+255),f,b
  1837   000DA8  2BBF               	incf	(_state+1)& (0+255),f,b
  1838   000DAA                     l3739:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;LAB4.c: 202:                 Lcd_Write_String("pulsa ok para");
  1842   000DAA  C0E0  F0AC         	movff	_re_pcs,_check
  1843   000DAE  C0E1  F0AD         	movff	_re_pcs+1,_check+1
  1844   000DB2  EF0D  F005         	goto	l3605
  1845   000DB6                     l3741:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;LAB4.c: 209: 
  1849   000DB6  BFAF               	btfsc	(_times_1+1)& (0+255),7,b
  1850   000DB8  EFE8  F006         	goto	u2560
  1851   000DBC  51AF               	movf	(_times_1+1)& (0+255),w,b
  1852   000DBE  E106               	bnz	u2561
  1853   000DC0  05AE               	decf	_times_1& (0+255),w,b
  1854   000DC2  B0D8               	btfsc	status,0,c
  1855   000DC4  EFE6  F006         	goto	u2561
  1856   000DC8  EFE8  F006         	goto	u2560
  1857   000DCC                     u2561:
  1858   000DCC  EF0D  F005         	goto	l3605
  1859   000DD0                     u2560:
  1860   000DD0                     
  1861                           ; BSR set to: 0
  1862                           ;LAB4.c: 210:             break;;LAB4.c: 211: 
  1863   000DD0  0E01               	movlw	1
  1864   000DD2  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1865   000DD4  0E01               	movlw	1
  1866   000DD6  EC7F  F00D         	call	_Lcd_Set_Cursor
  1867   000DDA                     
  1868                           ;LAB4.c: 212:           default:
  1869   000DDA  0EF7               	movlw	low STR_8
  1870   000DDC  0100               	movlb	0	; () banked
  1871   000DDE  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1872   000DE0  0E7F               	movlw	high STR_8
  1873   000DE2  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1874   000DE4  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1875   000DE8                     
  1876                           ;LAB4.c: 213:             break;
  1877   000DE8  0E01               	movlw	1
  1878   000DEA  0100               	movlb	0	; () banked
  1879   000DEC  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1880   000DEE  0E02               	movlw	2
  1881   000DF0  EC7F  F00D         	call	_Lcd_Set_Cursor
  1882                           
  1883                           ;LAB4.c: 214:         }
  1884   000DF4  0EE4               	movlw	low STR_9
  1885   000DF6  0100               	movlb	0	; () banked
  1886   000DF8  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1887   000DFA  0E7F               	movlw	high STR_9
  1888   000DFC  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1889   000DFE  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1890   000E02                     
  1891                           ;LAB4.c: 215:     }
  1892   000E02  0E15               	movlw	21
  1893   000E04  0100               	movlb	0	; () banked
  1894   000E06  6F91               	movwf	(??_main+1)& (0+255),b
  1895   000E08  0E4B               	movlw	75
  1896   000E0A  6F90               	movwf	??_main& (0+255),b
  1897   000E0C  0EBE               	movlw	190
  1898   000E0E                     u3047:
  1899   000E0E  2EE8               	decfsz	wreg,f,c
  1900   000E10  D7FE               	bra	u3047
  1901   000E12  2F90               	decfsz	??_main& (0+255),f,b
  1902   000E14  D7FC               	bra	u3047
  1903   000E16  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1904   000E18  D7FA               	bra	u3047
  1905   000E1A  0000               	nop	
  1906   000E1C                     
  1907                           ;LAB4.c: 216: }
  1908   000E1C  EC48  F013         	call	_Lcd_Clear	;wreg free
  1909   000E20                     
  1910                           ;LAB4.c: 217: 
  1911   000E20  0E02               	movlw	2
  1912   000E22  0100               	movlb	0	; () banked
  1913   000E24  6F91               	movwf	(??_main+1)& (0+255),b
  1914   000E26  0E04               	movlw	4
  1915   000E28  6F90               	movwf	??_main& (0+255),b
  1916   000E2A  0EBA               	movlw	186
  1917   000E2C                     u3057:
  1918   000E2C  2EE8               	decfsz	wreg,f,c
  1919   000E2E  D7FE               	bra	u3057
  1920   000E30  2F90               	decfsz	??_main& (0+255),f,b
  1921   000E32  D7FC               	bra	u3057
  1922   000E34  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1923   000E36  D7FA               	bra	u3057
  1924   000E38  0000               	nop	
  1925   000E3A                     
  1926                           ;LAB4.c: 218: 
  1927   000E3A  0E01               	movlw	1
  1928   000E3C  0100               	movlb	0	; () banked
  1929   000E3E  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1930   000E40  0E01               	movlw	1
  1931   000E42  EC7F  F00D         	call	_Lcd_Set_Cursor
  1932   000E46                     
  1933                           ;LAB4.c: 219: 
  1934   000E46  0E9D               	movlw	low STR_10
  1935   000E48  0100               	movlb	0	; () banked
  1936   000E4A  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1937   000E4C  0E7F               	movlw	high STR_10
  1938   000E4E  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1939   000E50  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1940   000E54                     
  1941                           ;LAB4.c: 220: 
  1942   000E54  0E01               	movlw	1
  1943   000E56  0100               	movlb	0	; () banked
  1944   000E58  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1945   000E5A  0E02               	movlw	2
  1946   000E5C  EC7F  F00D         	call	_Lcd_Set_Cursor
  1947   000E60                     
  1948                           ;LAB4.c: 221: 
  1949   000E60  0E8E               	movlw	low STR_11
  1950   000E62  0100               	movlb	0	; () banked
  1951   000E64  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1952   000E66  0E7F               	movlw	high STR_11
  1953   000E68  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1954   000E6A  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  1955   000E6E                     
  1956                           ;LAB4.c: 222: void __attribute__((picinterrupt(("low_priority"))))LOW_PRIORITY()
  1957   000E6E  0E00               	movlw	0
  1958   000E70  6E40               	movwf	(_ok_en+1)^0,c
  1959   000E72  0E01               	movlw	1
  1960   000E74  6E3F               	movwf	_ok_en^0,c
  1961   000E76                     
  1962                           ;LAB4.c: 223:   {
  1963   000E76  0100               	movlb	0	; () banked
  1964   000E78  4BAE               	infsnz	_times_1& (0+255),f,b
  1965   000E7A  2BAF               	incf	(_times_1+1)& (0+255),f,b
  1966   000E7C  EF0D  F005         	goto	l3605
  1967   000E80                     l3769:
  1968   000E80  C0BE  F090         	movff	_state,??_main
  1969   000E84  C0BF  F091         	movff	_state+1,??_main+1
  1970                           
  1971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1972                           ; Switch size 1, requested type "simple"
  1973                           ; Number of cases is 1, Range of values is 0 to 0
  1974                           ; switch strategies available:
  1975                           ; Name         Instructions Cycles
  1976                           ; simple_byte            4     3 (average)
  1977                           ;	Chosen strategy is simple_byte
  1978   000E88  0100               	movlb	0	; () banked
  1979   000E8A  5191               	movf	(??_main+1)& (0+255),w,b
  1980   000E8C  0A00               	xorlw	0	; case 0
  1981   000E8E  B4D8               	btfsc	status,2,c
  1982   000E90  EF4C  F007         	goto	l4131
  1983   000E94  EF0D  F005         	goto	l3605
  1984   000E98                     l4131:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ; Switch size 1, requested type "simple"
  1988                           ; Number of cases is 4, Range of values is 0 to 3
  1989                           ; switch strategies available:
  1990                           ; Name         Instructions Cycles
  1991                           ; simple_byte           13     7 (average)
  1992                           ;	Chosen strategy is simple_byte
  1993   000E98  5190               	movf	??_main& (0+255),w,b
  1994   000E9A  0A00               	xorlw	0	; case 0
  1995   000E9C  B4D8               	btfsc	status,2,c
  1996   000E9E  EF11  F005         	goto	l111
  1997   000EA2  0A01               	xorlw	1	; case 1
  1998   000EA4  B4D8               	btfsc	status,2,c
  1999   000EA6  EF1D  F005         	goto	l3613
  2000   000EAA  0A03               	xorlw	3	; case 2
  2001   000EAC  B4D8               	btfsc	status,2,c
  2002   000EAE  EF10  F006         	goto	l3683
  2003   000EB2  0A01               	xorlw	1	; case 3
  2004   000EB4  B4D8               	btfsc	status,2,c
  2005   000EB6  EFDB  F006         	goto	l3741
  2006   000EBA  EF0D  F005         	goto	l3605
  2007   000EBE  EFEA  F004         	goto	start
  2008   000EC2                     __end_of_main:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _sprintf *****************
  2012 ;; Defined at:
  2013 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  s               2   29[BANK0 ] PTR unsigned char 
  2016 ;;		 -> re_pcs_str(20), counted_pcs_str(20), main@countdown(20), num_str(10), 
  2017 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  2018 ;;		 -> STR_18(3), STR_7(13), STR_6(12), STR_5(16), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  f              12   36[BANK0 ] struct _IO_FILE
  2021 ;;  ret             2    0        int 
  2022 ;;  ap              1   35[BANK0 ] PTR void [1]
  2023 ;;		 -> ?_sprintf(2), 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  2   29[BANK0 ] int 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2033 ;;      Params:         0       6       0       0       0       0       0       0       0
  2034 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2036 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2037 ;;Total ram usage:       19 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 11
  2040 ;; This function calls:
  2041 ;;		_vfprintf
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text1
  2048   002400                     __ptext1:
  2049                           	callstack 0
  2050   002400                     _sprintf:
  2051                           	callstack 19
  2052   002400  0E81               	movlw	low (?_sprintf+4)
  2053   002402  0100               	movlb	0	; () banked
  2054   002404  6F83               	movwf	sprintf@ap& (0+255),b
  2055   002406  C07D  F084         	movff	sprintf@s,sprintf@f
  2056   00240A  C07E  F085         	movff	sprintf@s+1,sprintf@f+1
  2057   00240E                     
  2058                           ; BSR set to: 0
  2059   00240E  0E00               	movlw	0
  2060   002410  6F88               	movwf	(sprintf@f+4)& (0+255),b
  2061   002412  0E00               	movlw	0
  2062   002414  6F87               	movwf	(sprintf@f+3)& (0+255),b
  2063   002416                     
  2064                           ; BSR set to: 0
  2065   002416  0E00               	movlw	0
  2066   002418  6F8F               	movwf	(sprintf@f+11)& (0+255),b
  2067   00241A  0E00               	movlw	0
  2068   00241C  6F8E               	movwf	(sprintf@f+10)& (0+255),b
  2069   00241E                     
  2070                           ; BSR set to: 0
  2071   00241E  0E84               	movlw	low sprintf@f
  2072   002420  6F77               	movwf	vfprintf@fp& (0+255),b
  2073   002422  C07F  F078         	movff	sprintf@fmt,vfprintf@fmt
  2074   002426  C080  F079         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2075   00242A  0E83               	movlw	low sprintf@ap
  2076   00242C  6F7A               	movwf	vfprintf@ap& (0+255),b
  2077   00242E  ECDD  F011         	call	_vfprintf	;wreg free
  2078   002432  0100               	movlb	0	; () banked
  2079   002434  5187               	movf	(sprintf@f+3)& (0+255),w,b
  2080   002436  257D               	addwf	sprintf@s& (0+255),w,b
  2081   002438  6ED9               	movwf	fsr2l,c
  2082   00243A  5188               	movf	(sprintf@f+4)& (0+255),w,b
  2083   00243C  217E               	addwfc	(sprintf@s+1)& (0+255),w,b
  2084   00243E  6EDA               	movwf	fsr2h,c
  2085   002440  6ADF               	clrf	indf2,c
  2086   002442                     
  2087                           ; BSR set to: 0
  2088   002442  0012               	return		;funcret
  2089   002444                     __end_of_sprintf:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function _vfprintf *****************
  2093 ;; Defined at:
  2094 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  2097 ;;		 -> sprintf@f(12), 
  2098 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  2099 ;;		 -> STR_18(3), STR_7(13), STR_6(12), STR_5(16), 
  2100 ;;  ap              1   26[BANK0 ] PTR PTR void 
  2101 ;;		 -> sprintf@ap(1), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  cfmt            2   27[BANK0 ] PTR unsigned char 
  2104 ;;		 -> STR_18(3), STR_7(13), STR_6(12), STR_5(16), 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2   23[BANK0 ] int 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         0       4       0       0       0       0       0       0       0
  2115 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2117 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2118 ;;Total ram usage:        6 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 10
  2121 ;; This function calls:
  2122 ;;		_vfpfcnvrt
  2123 ;; This function is called by:
  2124 ;;		_sprintf
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text2
  2129   0023BA                     __ptext2:
  2130                           	callstack 0
  2131   0023BA                     _vfprintf:
  2132                           	callstack 19
  2133   0023BA                     
  2134                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2135   0023BA  C078  F07B         	movff	vfprintf@fmt,vfprintf@cfmt
  2136   0023BE  C079  F07C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2139   0023C2  EFEC  F011         	goto	l3199
  2140   0023C6                     l3197:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2143   0023C6  C077  F06A         	movff	vfprintf@fp,vfpfcnvrt@fp
  2144   0023CA  0E7B               	movlw	low vfprintf@cfmt
  2145   0023CC  0100               	movlb	0	; () banked
  2146   0023CE  6F6B               	movwf	vfpfcnvrt@fmt& (0+255),b
  2147   0023D0  C07A  F06C         	movff	vfprintf@ap,vfpfcnvrt@ap
  2148   0023D4  ECFA  F00A         	call	_vfpfcnvrt	;wreg free
  2149   0023D8                     l3199:
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2152   0023D8  C07B  FFF6         	movff	vfprintf@cfmt,tblptrl
  2153   0023DC  C07C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2154   0023E0                     	if	0	;tblptru may be non-zero
  2155   0023E0                     	endif
  2156   0023E0                     	if	0	;tblptru may be non-zero
  2157   0023E0                     	endif
  2158   0023E0  0008               	tblrd		*
  2159   0023E2  50F5               	movf	tablat,w,c
  2160   0023E4  0900               	iorlw	0
  2161   0023E6  A4D8               	btfss	status,2,c
  2162   0023E8  EFF8  F011         	goto	u2291
  2163   0023EC  EFFA  F011         	goto	u2290
  2164   0023F0                     u2291:
  2165   0023F0  EFE3  F011         	goto	l3197
  2166   0023F4                     u2290:
  2167   0023F4                     
  2168                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2169   0023F4  0E00               	movlw	0
  2170   0023F6  0100               	movlb	0	; () banked
  2171   0023F8  6F78               	movwf	(?_vfprintf+1)& (0+255),b
  2172   0023FA  0E00               	movlw	0
  2173   0023FC  6F77               	movwf	?_vfprintf& (0+255),b
  2174   0023FE                     
  2175                           ; BSR set to: 0
  2176   0023FE  0012               	return		;funcret
  2177   002400                     __end_of_vfprintf:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _vfpfcnvrt *****************
  2181 ;; Defined at:
  2182 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2185 ;;		 -> sprintf@f(12), 
  2186 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  2187 ;;		 -> vfprintf@cfmt(2), 
  2188 ;;  ap              1   12[BANK0 ] PTR PTR void 
  2189 ;;		 -> sprintf@ap(1), 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  convarg         4   18[BANK0 ] struct .
  2192 ;;  cp              2   16[BANK0 ] PTR unsigned char 
  2193 ;;		 -> STR_18(3), STR_7(13), STR_6(12), STR_5(16), 
  2194 ;;  c               1   22[BANK0 ] unsigned char 
  2195 ;;  done            1   15[BANK0 ] _Bool 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2205 ;;      Params:         0       3       0       0       0       0       0       0       0
  2206 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2207 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2208 ;;      Totals:         0      13       0       0       0       0       0       0       0
  2209 ;;Total ram usage:       13 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 9
  2212 ;; This function calls:
  2213 ;;		___awdiv
  2214 ;;		___awmod
  2215 ;;		_abs
  2216 ;;		_fputc
  2217 ;; This function is called by:
  2218 ;;		_vfprintf
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text3
  2223   0015F4                     __ptext3:
  2224                           	callstack 0
  2225   0015F4                     _vfpfcnvrt:
  2226                           	callstack 19
  2227   0015F4                     
  2228                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2229   0015F4  0100               	movlb	0	; () banked
  2230   0015F6  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2231   0015F8  6ED9               	movwf	fsr2l,c
  2232   0015FA  6ADA               	clrf	fsr2h,c
  2233   0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  2234   001600  CFDD FFF7          	movff	postdec2,tblptrh
  2235   001604                     	if	0	;tblptru may be non-zero
  2236   001604                     	endif
  2237   001604                     	if	0	;tblptru may be non-zero
  2238   001604                     	endif
  2239   001604  0008               	tblrd		*
  2240   001606  50F5               	movf	tablat,w,c
  2241   001608  0A25               	xorlw	37
  2242   00160A  A4D8               	btfss	status,2,c
  2243   00160C  EF0A  F00B         	goto	u1901
  2244   001610  EF0C  F00B         	goto	u1900
  2245   001614                     u1901:
  2246   001614  EFDD  F00B         	goto	l2941
  2247   001618                     u1900:
  2248   001618                     
  2249                           ; BSR set to: 0
  2250                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2251   001618  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2252   00161A  6ED9               	movwf	fsr2l,c
  2253   00161C  6ADA               	clrf	fsr2h,c
  2254   00161E  2ADE               	incf	postinc2,f,c
  2255   001620  0E00               	movlw	0
  2256   001622  22DD               	addwfc	postdec2,f,c
  2257   001624                     
  2258                           ; BSR set to: 0
  2259                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2260   001624  0E00               	movlw	0
  2261   001626  6FA9               	movwf	(_width+1)& (0+255),b
  2262   001628  0E00               	movlw	0
  2263   00162A  6FA8               	movwf	_width& (0+255),b
  2264   00162C  C0A8  F0C0         	movff	_width,_flags
  2265   001630                     
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2268   001630  69AA               	setf	_prec& (0+255),b
  2269   001632  69AB               	setf	(_prec+1)& (0+255),b
  2270   001634                     
  2271                           ; BSR set to: 0
  2272                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2273   001634  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2274   001636  6ED9               	movwf	fsr2l,c
  2275   001638  6ADA               	clrf	fsr2h,c
  2276   00163A  CFDE F070          	movff	postinc2,vfpfcnvrt@cp
  2277   00163E  CFDD F071          	movff	postdec2,vfpfcnvrt@cp+1
  2278   001642                     
  2279                           ; BSR set to: 0
  2280                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2281   001642  C070  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2282   001646  C071  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2283   00164A                     	if	0	;tblptru may be non-zero
  2284   00164A                     	endif
  2285   00164A                     	if	0	;tblptru may be non-zero
  2286   00164A                     	endif
  2287   00164A  0008               	tblrd		*
  2288   00164C  50F5               	movf	tablat,w,c
  2289   00164E  0A64               	xorlw	100
  2290   001650  B4D8               	btfsc	status,2,c
  2291   001652  EF2D  F00B         	goto	u1911
  2292   001656  EF2F  F00B         	goto	u1910
  2293   00165A                     u1911:
  2294   00165A  EF3D  F00B         	goto	l2911
  2295   00165E                     u1910:
  2296   00165E                     
  2297                           ; BSR set to: 0
  2298   00165E  C070  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2299   001662  C071  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2300   001666                     	if	0	;tblptru may be non-zero
  2301   001666                     	endif
  2302   001666                     	if	0	;tblptru may be non-zero
  2303   001666                     	endif
  2304   001666  0008               	tblrd		*
  2305   001668  50F5               	movf	tablat,w,c
  2306   00166A  0A69               	xorlw	105
  2307   00166C  A4D8               	btfss	status,2,c
  2308   00166E  EF3B  F00B         	goto	u1921
  2309   001672  EF3D  F00B         	goto	u1920
  2310   001676                     u1921:
  2311   001676  EFD4  F00B         	goto	l2937
  2312   00167A                     u1920:
  2313   00167A                     l2911:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2317   00167A  516C               	movf	vfpfcnvrt@ap& (0+255),w,b
  2318   00167C  6ED9               	movwf	fsr2l,c
  2319   00167E  6ADA               	clrf	fsr2h,c
  2320   001680  0E02               	movlw	2
  2321   001682  26DF               	addwf	indf2,f,c
  2322   001684  5CDF               	subwf	indf2,w,c
  2323   001686  6ED9               	movwf	fsr2l,c
  2324   001688  6ADA               	clrf	fsr2h,c
  2325   00168A  CFDE F072          	movff	postinc2,vfpfcnvrt@convarg
  2326   00168E  CFDE F073          	movff	postinc2,vfpfcnvrt@convarg+1
  2327   001692                     
  2328                           ; BSR set to: 0
  2329                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2330   001692  0E01               	movlw	1
  2331   001694  2570               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2332   001696  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  2333   001698  0E00               	movlw	0
  2334   00169A  2171               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2335   00169C  6F6E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2336   00169E  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2337   0016A0  6ED9               	movwf	fsr2l,c
  2338   0016A2  6ADA               	clrf	fsr2h,c
  2339   0016A4  C06D  FFDE         	movff	??_vfpfcnvrt,postinc2
  2340   0016A8  C06E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2341   0016AC                     
  2342                           ; BSR set to: 0
  2343                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2344   0016AC  0E20               	movlw	32
  2345   0016AE  6F76               	movwf	vfpfcnvrt@c& (0+255),b
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2348   0016B0  BF73               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2349   0016B2  EF5D  F00B         	goto	u1931
  2350   0016B6  EF60  F00B         	goto	u1930
  2351   0016BA                     u1931:
  2352   0016BA  0E01               	movlw	1
  2353   0016BC  EF61  F00B         	goto	u1940
  2354   0016C0                     u1930:
  2355   0016C0  0E00               	movlw	0
  2356   0016C2                     u1940:
  2357   0016C2  6F6F               	movwf	vfpfcnvrt@done& (0+255),b
  2358   0016C4                     l2917:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2362   0016C4  0776               	decf	vfpfcnvrt@c& (0+255),f,b
  2363   0016C6  0E00               	movlw	low _dbuf
  2364   0016C8  2576               	addwf	vfpfcnvrt@c& (0+255),w,b
  2365   0016CA  6ED9               	movwf	fsr2l,c
  2366   0016CC  6ADA               	clrf	fsr2h,c
  2367   0016CE  0E01               	movlw	high _dbuf
  2368   0016D0  22DA               	addwfc	fsr2h,f,c
  2369   0016D2  C072  F060         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2370   0016D6  C073  F061         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2371   0016DA  0E00               	movlw	0
  2372   0016DC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2373   0016DE  0E0A               	movlw	10
  2374   0016E0  6F62               	movwf	___awmod@divisor& (0+255),b
  2375   0016E2  ECD7  F00F         	call	___awmod	;wreg free
  2376   0016E6  C060  F066         	movff	?___awmod,abs@a
  2377   0016EA  C061  F067         	movff	?___awmod+1,abs@a+1
  2378   0016EE  ECBE  F012         	call	_abs	;wreg free
  2379   0016F2  0100               	movlb	0	; () banked
  2380   0016F4  5166               	movf	?_abs& (0+255),w,b
  2381   0016F6  0F30               	addlw	48
  2382   0016F8  6EDF               	movwf	indf2,c
  2383   0016FA                     
  2384                           ; BSR set to: 0
  2385                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2386   0016FA  C072  F060         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2387   0016FE  C073  F061         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2388   001702  0E00               	movlw	0
  2389   001704  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  2390   001706  0E0A               	movlw	10
  2391   001708  6F62               	movwf	___awdiv@divisor& (0+255),b
  2392   00170A  EC57  F00E         	call	___awdiv	;wreg free
  2393   00170E  C060  F072         	movff	?___awdiv,vfpfcnvrt@convarg
  2394   001712  C061  F073         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2395   001716                     
  2396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2397   001716  0100               	movlb	0	; () banked
  2398   001718  5172               	movf	vfpfcnvrt@convarg& (0+255),w,b
  2399   00171A  1173               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  2400   00171C  B4D8               	btfsc	status,2,c
  2401   00171E  EF93  F00B         	goto	u1951
  2402   001722  EF95  F00B         	goto	u1950
  2403   001726                     u1951:
  2404   001726  EF9D  F00B         	goto	l2925
  2405   00172A                     u1950:
  2406   00172A                     
  2407                           ; BSR set to: 0
  2408   00172A  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  2409   00172C  A4D8               	btfss	status,2,c
  2410   00172E  EF9B  F00B         	goto	u1961
  2411   001732  EF9D  F00B         	goto	u1960
  2412   001736                     u1961:
  2413   001736  EF62  F00B         	goto	l2917
  2414   00173A                     u1960:
  2415   00173A                     l2925:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2419   00173A  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  2420   00173C  B4D8               	btfsc	status,2,c
  2421   00173E  EFA3  F00B         	goto	u1971
  2422   001742  EFA5  F00B         	goto	u1970
  2423   001746                     u1971:
  2424   001746  EFC9  F00B         	goto	l2935
  2425   00174A                     u1970:
  2426   00174A                     
  2427                           ; BSR set to: 0
  2428   00174A  516F               	movf	vfpfcnvrt@done& (0+255),w,b
  2429   00174C  B4D8               	btfsc	status,2,c
  2430   00174E  EFAB  F00B         	goto	u1981
  2431   001752  EFAD  F00B         	goto	u1980
  2432   001756                     u1981:
  2433   001756  EFC9  F00B         	goto	l2935
  2434   00175A                     u1980:
  2435   00175A                     
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2438   00175A  0776               	decf	vfpfcnvrt@c& (0+255),f,b
  2439   00175C  0E00               	movlw	low _dbuf
  2440   00175E  2576               	addwf	vfpfcnvrt@c& (0+255),w,b
  2441   001760  6ED9               	movwf	fsr2l,c
  2442   001762  6ADA               	clrf	fsr2h,c
  2443   001764  0E01               	movlw	high _dbuf
  2444   001766  22DA               	addwfc	fsr2h,f,c
  2445   001768  0E2D               	movlw	45
  2446   00176A  6EDF               	movwf	indf2,c
  2447   00176C  EFC9  F00B         	goto	l2935
  2448   001770                     l2931:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2452   001770  0E00               	movlw	low _dbuf
  2453   001772  2576               	addwf	vfpfcnvrt@c& (0+255),w,b
  2454   001774  6ED9               	movwf	fsr2l,c
  2455   001776  6ADA               	clrf	fsr2h,c
  2456   001778  0E01               	movlw	high _dbuf
  2457   00177A  22DA               	addwfc	fsr2h,f,c
  2458   00177C  50DF               	movf	indf2,w,c
  2459   00177E  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  2460   001780  516D               	movf	??_vfpfcnvrt& (0+255),w,b
  2461   001782  6F60               	movwf	fputc@c& (0+255),b
  2462   001784  6B61               	clrf	(fputc@c+1)& (0+255),b
  2463   001786  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2464   00178A  EC1C  F00F         	call	_fputc	;wreg free
  2465   00178E  0100               	movlb	0	; () banked
  2466   001790  2B76               	incf	vfpfcnvrt@c& (0+255),f,b
  2467   001792                     l2935:
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2471   001792  0E20               	movlw	32
  2472   001794  1976               	xorwf	vfpfcnvrt@c& (0+255),w,b
  2473   001796  A4D8               	btfss	status,2,c
  2474   001798  EFD0  F00B         	goto	u1991
  2475   00179C  EFD2  F00B         	goto	u1990
  2476   0017A0                     u1991:
  2477   0017A0  EFB8  F00B         	goto	l2931
  2478   0017A4                     u1990:
  2479   0017A4  EFEE  F00B         	goto	l1153
  2480   0017A8                     l2937:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2483   0017A8  0100               	movlb	0	; () banked
  2484   0017AA  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2485   0017AC  6ED9               	movwf	fsr2l,c
  2486   0017AE  6ADA               	clrf	fsr2h,c
  2487   0017B0  2ADE               	incf	postinc2,f,c
  2488   0017B2  0E00               	movlw	0
  2489   0017B4  22DD               	addwfc	postdec2,f,c
  2490   0017B6  EFEE  F00B         	goto	l1153
  2491   0017BA                     l2941:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2495   0017BA  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2496   0017BC  6ED9               	movwf	fsr2l,c
  2497   0017BE  6ADA               	clrf	fsr2h,c
  2498   0017C0  CFDE FFF6          	movff	postinc2,tblptrl
  2499   0017C4  CFDD FFF7          	movff	postdec2,tblptrh
  2500   0017C8                     	if	0	;tblptru may be non-zero
  2501   0017C8                     	endif
  2502   0017C8                     	if	0	;tblptru may be non-zero
  2503   0017C8                     	endif
  2504   0017C8  0008               	tblrd		*
  2505   0017CA  50F5               	movf	tablat,w,c
  2506   0017CC  6F60               	movwf	fputc@c& (0+255),b
  2507   0017CE  6B61               	clrf	(fputc@c+1)& (0+255),b
  2508   0017D0  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2509   0017D4  EC1C  F00F         	call	_fputc	;wreg free
  2510   0017D8  EFD4  F00B         	goto	l2937
  2511   0017DC                     l1153:
  2512                           
  2513                           ; BSR set to: 0
  2514   0017DC  0012               	return		;funcret
  2515   0017DE                     __end_of_vfpfcnvrt:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _fputc *****************
  2519 ;; Defined at:
  2520 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  c               2    0[BANK0 ] int 
  2523 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  2524 ;;		 -> sprintf@f(12), 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2    0[BANK0 ] int 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         0       3       0       0       0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2538 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2539 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2540 ;;Total ram usage:        8 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 8
  2543 ;; This function calls:
  2544 ;;		_putch
  2545 ;; This function is called by:
  2546 ;;		_vfpfcnvrt
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text4
  2551   001E38                     __ptext4:
  2552                           	callstack 0
  2553   001E38                     _fputc:
  2554                           	callstack 19
  2555   001E38  0100               	movlb	0	; () banked
  2556   001E3A  5162               	movf	fputc@fp& (0+255),w,b
  2557   001E3C  B4D8               	btfsc	status,2,c
  2558   001E3E  EF23  F00F         	goto	u1681
  2559   001E42  EF25  F00F         	goto	u1680
  2560   001E46                     u1681:
  2561   001E46  EF2D  F00F         	goto	l2763
  2562   001E4A                     u1680:
  2563   001E4A                     
  2564                           ; BSR set to: 0
  2565   001E4A  5162               	movf	fputc@fp& (0+255),w,b
  2566   001E4C  A4D8               	btfss	status,2,c
  2567   001E4E  EF2B  F00F         	goto	u1691
  2568   001E52  EF2D  F00F         	goto	u1690
  2569   001E56                     u1691:
  2570   001E56  EF32  F00F         	goto	l2765
  2571   001E5A                     u1690:
  2572   001E5A                     l2763:
  2573                           
  2574                           ; BSR set to: 0
  2575   001E5A  5160               	movf	fputc@c& (0+255),w,b
  2576   001E5C  EC7C  F013         	call	_putch
  2577   001E60  EF79  F00F         	goto	l1178
  2578   001E64                     l2765:
  2579                           
  2580                           ; BSR set to: 0
  2581   001E64  5162               	movf	fputc@fp& (0+255),w,b
  2582   001E66  6ED9               	movwf	fsr2l,c
  2583   001E68  6ADA               	clrf	fsr2h,c
  2584   001E6A  0E0A               	movlw	10
  2585   001E6C  26D9               	addwf	fsr2l,f,c
  2586   001E6E  50DE               	movf	postinc2,w,c
  2587   001E70  10DE               	iorwf	postinc2,w,c
  2588   001E72  B4D8               	btfsc	status,2,c
  2589   001E74  EF3E  F00F         	goto	u1701
  2590   001E78  EF40  F00F         	goto	u1700
  2591   001E7C                     u1701:
  2592   001E7C  EF59  F00F         	goto	l2769
  2593   001E80                     u1700:
  2594   001E80                     
  2595                           ; BSR set to: 0
  2596   001E80  5162               	movf	fputc@fp& (0+255),w,b
  2597   001E82  6ED9               	movwf	fsr2l,c
  2598   001E84  6ADA               	clrf	fsr2h,c
  2599   001E86  0E0A               	movlw	10
  2600   001E88  26D9               	addwf	fsr2l,f,c
  2601   001E8A  5162               	movf	fputc@fp& (0+255),w,b
  2602   001E8C  6EE1               	movwf	fsr1l,c
  2603   001E8E  6AE2               	clrf	fsr1h,c
  2604   001E90  0E03               	movlw	3
  2605   001E92  26E1               	addwf	fsr1l,f,c
  2606   001E94  50DE               	movf	postinc2,w,c
  2607   001E96  5CE6               	subwf	postinc1,w,c
  2608   001E98  50E6               	movf	postinc1,w,c
  2609   001E9A  0A80               	xorlw	128
  2610   001E9C  6F67               	movwf	(??_fputc+4)& (0+255),b
  2611   001E9E  50DE               	movf	postinc2,w,c
  2612   001EA0  0A80               	xorlw	128
  2613   001EA2  5967               	subwfb	(??_fputc+4)& (0+255),w,b
  2614   001EA4  B0D8               	btfsc	status,0,c
  2615   001EA6  EF57  F00F         	goto	u1711
  2616   001EAA  EF59  F00F         	goto	u1710
  2617   001EAE                     u1711:
  2618   001EAE  EF79  F00F         	goto	l1178
  2619   001EB2                     u1710:
  2620   001EB2                     l2769:
  2621                           
  2622                           ; BSR set to: 0
  2623   001EB2  5162               	movf	fputc@fp& (0+255),w,b
  2624   001EB4  6ED9               	movwf	fsr2l,c
  2625   001EB6  6ADA               	clrf	fsr2h,c
  2626   001EB8  0E03               	movlw	3
  2627   001EBA  26D9               	addwf	fsr2l,f,c
  2628   001EBC  CFDE F063          	movff	postinc2,??_fputc
  2629   001EC0  CFDD F064          	movff	postdec2,??_fputc+1
  2630   001EC4  5162               	movf	fputc@fp& (0+255),w,b
  2631   001EC6  6ED9               	movwf	fsr2l,c
  2632   001EC8  6ADA               	clrf	fsr2h,c
  2633   001ECA  CFDE F065          	movff	postinc2,??_fputc+2
  2634   001ECE  CFDD F066          	movff	postdec2,??_fputc+3
  2635   001ED2  5163               	movf	??_fputc& (0+255),w,b
  2636   001ED4  2565               	addwf	(??_fputc+2)& (0+255),w,b
  2637   001ED6  6ED9               	movwf	fsr2l,c
  2638   001ED8  5164               	movf	(??_fputc+1)& (0+255),w,b
  2639   001EDA  2166               	addwfc	(??_fputc+3)& (0+255),w,b
  2640   001EDC  6EDA               	movwf	fsr2h,c
  2641   001EDE  C060  FFDF         	movff	fputc@c,indf2
  2642   001EE2  5162               	movf	fputc@fp& (0+255),w,b
  2643   001EE4  6ED9               	movwf	fsr2l,c
  2644   001EE6  6ADA               	clrf	fsr2h,c
  2645   001EE8  0E03               	movlw	3
  2646   001EEA  26D9               	addwf	fsr2l,f,c
  2647   001EEC  2ADE               	incf	postinc2,f,c
  2648   001EEE  0E00               	movlw	0
  2649   001EF0  22DD               	addwfc	postdec2,f,c
  2650   001EF2                     l1178:
  2651   001EF2  0012               	return		;funcret
  2652   001EF4                     __end_of_fputc:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _putch *****************
  2656 ;; Defined at:
  2657 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  c               1    wreg     unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  c               1    0[COMRAM] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2674 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 7
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_fputc
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text5
  2686   0026F8                     __ptext5:
  2687                           	callstack 0
  2688   0026F8                     _putch:
  2689                           	callstack 19
  2690   0026F8  0012               	return		;funcret
  2691   0026FA                     __end_of_putch:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function _abs *****************
  2695 ;; Defined at:
  2696 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  a               2    6[BANK0 ] int 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  2    6[BANK0 ] int 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2710 ;;      Params:         0       2       0       0       0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2712 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2713 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2714 ;;Total ram usage:        4 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 7
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_vfpfcnvrt
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text6
  2725   00257C                     __ptext6:
  2726                           	callstack 0
  2727   00257C                     _abs:
  2728                           	callstack 20
  2729   00257C  0100               	movlb	0	; () banked
  2730   00257E  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  2731   002580  EFC4  F012         	goto	u1721
  2732   002584  EFC6  F012         	goto	u1720
  2733   002588                     u1721:
  2734   002588  EFCC  F012         	goto	l1163
  2735   00258C                     u1720:
  2736   00258C                     
  2737                           ; BSR set to: 0
  2738   00258C  C066  F066         	movff	abs@a,?_abs
  2739   002590  C067  F067         	movff	abs@a+1,?_abs+1
  2740   002594  EFD8  F012         	goto	l1166
  2741   002598                     l1163:
  2742                           
  2743                           ; BSR set to: 0
  2744   002598  C066  F068         	movff	abs@a,??_abs
  2745   00259C  C067  F069         	movff	abs@a+1,??_abs+1
  2746   0025A0  1F68               	comf	??_abs& (0+255),f,b
  2747   0025A2  1F69               	comf	(??_abs+1)& (0+255),f,b
  2748   0025A4  4B68               	infsnz	??_abs& (0+255),f,b
  2749   0025A6  2B69               	incf	(??_abs+1)& (0+255),f,b
  2750   0025A8  C068  F066         	movff	??_abs,?_abs
  2751   0025AC  C069  F067         	movff	??_abs+1,?_abs+1
  2752   0025B0                     l1166:
  2753                           
  2754                           ; BSR set to: 0
  2755   0025B0  0012               	return		;funcret
  2756   0025B2                     __end_of_abs:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function ___awmod *****************
  2760 ;; Defined at:
  2761 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  dividend        2    0[BANK0 ] int 
  2764 ;;  divisor         2    2[BANK0 ] int 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  sign            1    5[BANK0 ] unsigned char 
  2767 ;;  counter         1    4[BANK0 ] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2    0[BANK0 ] int 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2777 ;;      Params:         0       4       0       0       0       0       0       0       0
  2778 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2780 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2781 ;;Total ram usage:        6 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 7
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_vfpfcnvrt
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text7
  2792   001FAE                     __ptext7:
  2793                           	callstack 0
  2794   001FAE                     ___awmod:
  2795                           	callstack 20
  2796   001FAE  0E00               	movlw	0
  2797   001FB0  0100               	movlb	0	; () banked
  2798   001FB2  6F65               	movwf	___awmod@sign& (0+255),b
  2799   001FB4                     
  2800                           ; BSR set to: 0
  2801   001FB4  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2802   001FB6  EFE1  F00F         	goto	u1620
  2803   001FBA  EFDF  F00F         	goto	u1621
  2804   001FBE                     u1621:
  2805   001FBE  EFE7  F00F         	goto	l2731
  2806   001FC2                     u1620:
  2807   001FC2                     
  2808                           ; BSR set to: 0
  2809   001FC2  6D60               	negf	___awmod@dividend& (0+255),b
  2810   001FC4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2811   001FC6  B0D8               	btfsc	status,0,c
  2812   001FC8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2813   001FCA                     
  2814                           ; BSR set to: 0
  2815   001FCA  0E01               	movlw	1
  2816   001FCC  6F65               	movwf	___awmod@sign& (0+255),b
  2817   001FCE                     l2731:
  2818                           
  2819                           ; BSR set to: 0
  2820   001FCE  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2821   001FD0  EFEE  F00F         	goto	u1630
  2822   001FD4  EFEC  F00F         	goto	u1631
  2823   001FD8                     u1631:
  2824   001FD8  EFF2  F00F         	goto	l2735
  2825   001FDC                     u1630:
  2826   001FDC                     
  2827                           ; BSR set to: 0
  2828   001FDC  6D62               	negf	___awmod@divisor& (0+255),b
  2829   001FDE  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  2830   001FE0  B0D8               	btfsc	status,0,c
  2831   001FE2  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  2832   001FE4                     l2735:
  2833                           
  2834                           ; BSR set to: 0
  2835   001FE4  5162               	movf	___awmod@divisor& (0+255),w,b
  2836   001FE6  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2837   001FE8  B4D8               	btfsc	status,2,c
  2838   001FEA  EFF9  F00F         	goto	u1641
  2839   001FEE  EFFB  F00F         	goto	u1640
  2840   001FF2                     u1641:
  2841   001FF2  EF1F  F010         	goto	l2751
  2842   001FF6                     u1640:
  2843   001FF6                     
  2844                           ; BSR set to: 0
  2845   001FF6  0E01               	movlw	1
  2846   001FF8  6F64               	movwf	___awmod@counter& (0+255),b
  2847   001FFA  EF03  F010         	goto	l2741
  2848   001FFE                     l2739:
  2849                           
  2850                           ; BSR set to: 0
  2851   001FFE  90D8               	bcf	status,0,c
  2852   002000  3762               	rlcf	___awmod@divisor& (0+255),f,b
  2853   002002  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2854   002004  2B64               	incf	___awmod@counter& (0+255),f,b
  2855   002006                     l2741:
  2856                           
  2857                           ; BSR set to: 0
  2858   002006  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2859   002008  EF08  F010         	goto	u1651
  2860   00200C  EF0A  F010         	goto	u1650
  2861   002010                     u1651:
  2862   002010  EFFF  F00F         	goto	l2739
  2863   002014                     u1650:
  2864   002014                     l2743:
  2865                           
  2866                           ; BSR set to: 0
  2867   002014  5162               	movf	___awmod@divisor& (0+255),w,b
  2868   002016  5D60               	subwf	___awmod@dividend& (0+255),w,b
  2869   002018  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2870   00201A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2871   00201C  A0D8               	btfss	status,0,c
  2872   00201E  EF13  F010         	goto	u1661
  2873   002022  EF15  F010         	goto	u1660
  2874   002026                     u1661:
  2875   002026  EF19  F010         	goto	l2747
  2876   00202A                     u1660:
  2877   00202A                     
  2878                           ; BSR set to: 0
  2879   00202A  5162               	movf	___awmod@divisor& (0+255),w,b
  2880   00202C  5F60               	subwf	___awmod@dividend& (0+255),f,b
  2881   00202E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2882   002030  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2883   002032                     l2747:
  2884                           
  2885                           ; BSR set to: 0
  2886   002032  90D8               	bcf	status,0,c
  2887   002034  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2888   002036  3362               	rrcf	___awmod@divisor& (0+255),f,b
  2889   002038                     
  2890                           ; BSR set to: 0
  2891   002038  2F64               	decfsz	___awmod@counter& (0+255),f,b
  2892   00203A  EF0A  F010         	goto	l2743
  2893   00203E                     l2751:
  2894                           
  2895                           ; BSR set to: 0
  2896   00203E  5165               	movf	___awmod@sign& (0+255),w,b
  2897   002040  B4D8               	btfsc	status,2,c
  2898   002042  EF25  F010         	goto	u1671
  2899   002046  EF27  F010         	goto	u1670
  2900   00204A                     u1671:
  2901   00204A  EF2B  F010         	goto	l2755
  2902   00204E                     u1670:
  2903   00204E                     
  2904                           ; BSR set to: 0
  2905   00204E  6D60               	negf	___awmod@dividend& (0+255),b
  2906   002050  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2907   002052  B0D8               	btfsc	status,0,c
  2908   002054  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2909   002056                     l2755:
  2910                           
  2911                           ; BSR set to: 0
  2912   002056  C060  F060         	movff	___awmod@dividend,?___awmod
  2913   00205A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  2914   00205E                     
  2915                           ; BSR set to: 0
  2916   00205E  0012               	return		;funcret
  2917   002060                     __end_of___awmod:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function ___awdiv *****************
  2921 ;; Defined at:
  2922 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  dividend        2    0[BANK0 ] int 
  2925 ;;  divisor         2    2[BANK0 ] int 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  quotient        2    6[BANK0 ] int 
  2928 ;;  sign            1    5[BANK0 ] unsigned char 
  2929 ;;  counter         1    4[BANK0 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2    0[BANK0 ] int 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2939 ;;      Params:         0       4       0       0       0       0       0       0       0
  2940 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2942 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2943 ;;Total ram usage:        8 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 7
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_vfpfcnvrt
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text8
  2954   001CAE                     __ptext8:
  2955                           	callstack 0
  2956   001CAE                     ___awdiv:
  2957                           	callstack 20
  2958   001CAE  0E00               	movlw	0
  2959   001CB0  0100               	movlb	0	; () banked
  2960   001CB2  6F65               	movwf	___awdiv@sign& (0+255),b
  2961   001CB4                     
  2962                           ; BSR set to: 0
  2963   001CB4  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2964   001CB6  EF61  F00E         	goto	u1560
  2965   001CBA  EF5F  F00E         	goto	u1561
  2966   001CBE                     u1561:
  2967   001CBE  EF67  F00E         	goto	l2687
  2968   001CC2                     u1560:
  2969   001CC2                     
  2970                           ; BSR set to: 0
  2971   001CC2  6D62               	negf	___awdiv@divisor& (0+255),b
  2972   001CC4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2973   001CC6  B0D8               	btfsc	status,0,c
  2974   001CC8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2975   001CCA                     
  2976                           ; BSR set to: 0
  2977   001CCA  0E01               	movlw	1
  2978   001CCC  6F65               	movwf	___awdiv@sign& (0+255),b
  2979   001CCE                     l2687:
  2980                           
  2981                           ; BSR set to: 0
  2982   001CCE  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  2983   001CD0  EF6E  F00E         	goto	u1570
  2984   001CD4  EF6C  F00E         	goto	u1571
  2985   001CD8                     u1571:
  2986   001CD8  EF74  F00E         	goto	l2693
  2987   001CDC                     u1570:
  2988   001CDC                     
  2989                           ; BSR set to: 0
  2990   001CDC  6D60               	negf	___awdiv@dividend& (0+255),b
  2991   001CDE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2992   001CE0  B0D8               	btfsc	status,0,c
  2993   001CE2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2994   001CE4                     
  2995                           ; BSR set to: 0
  2996   001CE4  0E01               	movlw	1
  2997   001CE6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  2998   001CE8                     l2693:
  2999                           
  3000                           ; BSR set to: 0
  3001   001CE8  0E00               	movlw	0
  3002   001CEA  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  3003   001CEC  0E00               	movlw	0
  3004   001CEE  6F66               	movwf	___awdiv@quotient& (0+255),b
  3005   001CF0                     
  3006                           ; BSR set to: 0
  3007   001CF0  5162               	movf	___awdiv@divisor& (0+255),w,b
  3008   001CF2  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3009   001CF4  B4D8               	btfsc	status,2,c
  3010   001CF6  EF7F  F00E         	goto	u1581
  3011   001CFA  EF81  F00E         	goto	u1580
  3012   001CFE                     u1581:
  3013   001CFE  EFA9  F00E         	goto	l2715
  3014   001D02                     u1580:
  3015   001D02                     
  3016                           ; BSR set to: 0
  3017   001D02  0E01               	movlw	1
  3018   001D04  6F64               	movwf	___awdiv@counter& (0+255),b
  3019   001D06  EF89  F00E         	goto	l2701
  3020   001D0A                     l2699:
  3021                           
  3022                           ; BSR set to: 0
  3023   001D0A  90D8               	bcf	status,0,c
  3024   001D0C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3025   001D0E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3026   001D10  2B64               	incf	___awdiv@counter& (0+255),f,b
  3027   001D12                     l2701:
  3028                           
  3029                           ; BSR set to: 0
  3030   001D12  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3031   001D14  EF8E  F00E         	goto	u1591
  3032   001D18  EF90  F00E         	goto	u1590
  3033   001D1C                     u1591:
  3034   001D1C  EF85  F00E         	goto	l2699
  3035   001D20                     u1590:
  3036   001D20                     l2703:
  3037                           
  3038                           ; BSR set to: 0
  3039   001D20  90D8               	bcf	status,0,c
  3040   001D22  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3041   001D24  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3042   001D26                     
  3043                           ; BSR set to: 0
  3044   001D26  5162               	movf	___awdiv@divisor& (0+255),w,b
  3045   001D28  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3046   001D2A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3047   001D2C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3048   001D2E  A0D8               	btfss	status,0,c
  3049   001D30  EF9C  F00E         	goto	u1601
  3050   001D34  EF9E  F00E         	goto	u1600
  3051   001D38                     u1601:
  3052   001D38  EFA3  F00E         	goto	l2711
  3053   001D3C                     u1600:
  3054   001D3C                     
  3055                           ; BSR set to: 0
  3056   001D3C  5162               	movf	___awdiv@divisor& (0+255),w,b
  3057   001D3E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3058   001D40  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3059   001D42  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3060   001D44                     
  3061                           ; BSR set to: 0
  3062   001D44  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3063   001D46                     l2711:
  3064                           
  3065                           ; BSR set to: 0
  3066   001D46  90D8               	bcf	status,0,c
  3067   001D48  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3068   001D4A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3069   001D4C                     
  3070                           ; BSR set to: 0
  3071   001D4C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3072   001D4E  EF90  F00E         	goto	l2703
  3073   001D52                     l2715:
  3074                           
  3075                           ; BSR set to: 0
  3076   001D52  5165               	movf	___awdiv@sign& (0+255),w,b
  3077   001D54  B4D8               	btfsc	status,2,c
  3078   001D56  EFAF  F00E         	goto	u1611
  3079   001D5A  EFB1  F00E         	goto	u1610
  3080   001D5E                     u1611:
  3081   001D5E  EFB5  F00E         	goto	l2719
  3082   001D62                     u1610:
  3083   001D62                     
  3084                           ; BSR set to: 0
  3085   001D62  6D66               	negf	___awdiv@quotient& (0+255),b
  3086   001D64  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3087   001D66  B0D8               	btfsc	status,0,c
  3088   001D68  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3089   001D6A                     l2719:
  3090                           
  3091                           ; BSR set to: 0
  3092   001D6A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3093   001D6E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3094   001D72                     
  3095                           ; BSR set to: 0
  3096   001D72  0012               	return		;funcret
  3097   001D74                     __end_of___awdiv:
  3098                           	callstack 0
  3099                           
  3100 ;; *************** function _blinky *****************
  3101 ;; Defined at:
  3102 ;;		line 17 in file "blinky.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;		None
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3116 ;;      Params:         0       0       0       0       0       0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3119 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3120 ;;Total ram usage:        0 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 7
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_main
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text9
  3131   002634                     __ptext9:
  3132                           	callstack 0
  3133   002634                     _blinky:
  3134                           	callstack 23
  3135   002634                     
  3136                           ;blinky.c: 19:   INTCONbits.GIE=1;
  3137   002634  8EF2               	bsf	242,7,c	;volatile
  3138                           
  3139                           ;blinky.c: 20:   INTCONbits.PEIE=1;
  3140   002636  8CF2               	bsf	242,6,c	;volatile
  3141                           
  3142                           ;blinky.c: 21:   RCONbits.IPEN=1;
  3143   002638  8ED0               	bsf	208,7,c	;volatile
  3144                           
  3145                           ;blinky.c: 23:   T0CONbits.TMR0ON=0;
  3146   00263A  9ED5               	bcf	213,7,c	;volatile
  3147                           
  3148                           ;blinky.c: 24:   INTCONbits.TMR0IE=1;
  3149   00263C  8AF2               	bsf	242,5,c	;volatile
  3150                           
  3151                           ;blinky.c: 25:   INTCON2bits.TMR0IP=1;
  3152   00263E  84F1               	bsf	241,2,c	;volatile
  3153                           
  3154                           ;blinky.c: 26:   T0CONbits.T08BIT=0;
  3155   002640  9CD5               	bcf	213,6,c	;volatile
  3156                           
  3157                           ;blinky.c: 27:   T0CONbits.T0CS=0;
  3158   002642  9AD5               	bcf	213,5,c	;volatile
  3159                           
  3160                           ;blinky.c: 28:   T0CONbits.PSA=0;
  3161   002644  96D5               	bcf	213,3,c	;volatile
  3162   002646                     
  3163                           ;blinky.c: 29:   T0CONbits.T0PS=0b100;
  3164   002646  50D5               	movf	213,w,c	;volatile
  3165   002648  0BF8               	andlw	-8
  3166   00264A  0904               	iorlw	4
  3167   00264C  6ED5               	movwf	213,c	;volatile
  3168   00264E                     
  3169                           ;blinky.c: 30:   INTCONbits.TMR0IF=0;
  3170   00264E  94F2               	bcf	242,2,c	;volatile
  3171   002650                     
  3172                           ;blinky.c: 32:   T0CONbits.TMR0ON=1;
  3173   002650  8ED5               	bsf	213,7,c	;volatile
  3174   002652  0012               	return		;funcret
  3175   002654                     __end_of_blinky:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function ___wmul *****************
  3179 ;; Defined at:
  3180 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3183 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  product         2    4[BANK0 ] unsigned int 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  2    0[BANK0 ] unsigned int 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, prodl, prodh
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3195 ;;      Params:         0       4       0       0       0       0       0       0       0
  3196 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3198 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3199 ;;Total ram usage:        6 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 7
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text10
  3210   0025E6                     __ptext10:
  3211                           	callstack 0
  3212   0025E6                     ___wmul:
  3213                           	callstack 23
  3214   0025E6  0100               	movlb	0	; () banked
  3215   0025E8  5160               	movf	___wmul@multiplier& (0+255),w,b
  3216   0025EA  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3217   0025EC  CFF3 F064          	movff	prodl,___wmul@product
  3218   0025F0  CFF4 F065          	movff	prodh,___wmul@product+1
  3219   0025F4  5160               	movf	___wmul@multiplier& (0+255),w,b
  3220   0025F6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3221   0025F8  50F3               	movf	243,w,c
  3222   0025FA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3223   0025FC  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3224   0025FE  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3225   002600  50F3               	movf	243,w,c
  3226   002602  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3227   002604                     
  3228                           ; BSR set to: 0
  3229   002604  C064  F060         	movff	___wmul@product,?___wmul
  3230   002608  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3231   00260C                     
  3232                           ; BSR set to: 0
  3233   00260C  0012               	return		;funcret
  3234   00260E                     __end_of___wmul:
  3235                           	callstack 0
  3236                           
  3237 ;; *************** function _Welcome *****************
  3238 ;; Defined at:
  3239 ;;		line 25 in file "Welcome.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  i               1   25[BANK0 ] unsigned char 
  3244 ;;  i               1   23[BANK0 ] unsigned char 
  3245 ;;  i               1   24[BANK0 ] unsigned char 
  3246 ;;  i               1   22[BANK0 ] unsigned char 
  3247 ;;  i               1   21[BANK0 ] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3257 ;;      Params:         0       0       0       0       0       0       0       0       0
  3258 ;;      Locals:         0       5       0       0       0       0       0       0       0
  3259 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3260 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3261 ;;Total ram usage:        7 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 11
  3264 ;; This function calls:
  3265 ;;		_Lcd_CGRAM_Close
  3266 ;;		_Lcd_CGRAM_CreateChar
  3267 ;;		_Lcd_CGRAM_Init
  3268 ;;		_Lcd_Clear
  3269 ;;		_Lcd_Init
  3270 ;;		_Lcd_Set_Cursor
  3271 ;;		_Lcd_Shift_Left
  3272 ;;		_Lcd_Shift_Right
  3273 ;;		_Lcd_Write_Char
  3274 ;;		_Lcd_Write_String
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text11
  3281   000EC2                     __ptext11:
  3282                           	callstack 0
  3283   000EC2                     _Welcome:
  3284                           	callstack 19
  3285   000EC2                     
  3286                           ;Welcome.c: 30:     Lcd_Init();
  3287   000EC2  EC88  F010         	call	_Lcd_Init	;wreg free
  3288                           
  3289                           ;Welcome.c: 32:     Lcd_CGRAM_Init();
  3290   000EC6  EC4F  F013         	call	_Lcd_CGRAM_Init	;wreg free
  3291   000ECA                     
  3292                           ;Welcome.c: 33:     Lcd_CGRAM_CreateChar(0, figura_1);
  3293   000ECA  0E15               	movlw	low _figura_1
  3294   000ECC  0100               	movlb	0	; () banked
  3295   000ECE  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3296   000ED0  0E7F               	movlw	high _figura_1
  3297   000ED2  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3298   000ED4  0E00               	movlw	0
  3299   000ED6  ECC7  F009         	call	_Lcd_CGRAM_CreateChar
  3300   000EDA                     
  3301                           ;Welcome.c: 34:     Lcd_CGRAM_CreateChar(1, figura_2);
  3302   000EDA  0E0D               	movlw	low _figura_2
  3303   000EDC  0100               	movlb	0	; () banked
  3304   000EDE  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3305   000EE0  0E7F               	movlw	high _figura_2
  3306   000EE2  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3307   000EE4  0E01               	movlw	1
  3308   000EE6  ECC7  F009         	call	_Lcd_CGRAM_CreateChar
  3309   000EEA                     
  3310                           ;Welcome.c: 35:     Lcd_CGRAM_CreateChar(2, figura_3);
  3311   000EEA  0E05               	movlw	low _figura_3
  3312   000EEC  0100               	movlb	0	; () banked
  3313   000EEE  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3314   000EF0  0E7F               	movlw	high _figura_3
  3315   000EF2  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3316   000EF4  0E02               	movlw	2
  3317   000EF6  ECC7  F009         	call	_Lcd_CGRAM_CreateChar
  3318   000EFA                     
  3319                           ;Welcome.c: 36:     Lcd_CGRAM_CreateChar(3, figura_4);
  3320   000EFA  0EFD               	movlw	low _figura_4
  3321   000EFC  0100               	movlb	0	; () banked
  3322   000EFE  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3323   000F00  0E7E               	movlw	high _figura_4
  3324   000F02  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3325   000F04  0E03               	movlw	3
  3326   000F06  ECC7  F009         	call	_Lcd_CGRAM_CreateChar
  3327   000F0A                     
  3328                           ;Welcome.c: 37:     Lcd_CGRAM_CreateChar(4, figura_5);
  3329   000F0A  0EF5               	movlw	low _figura_5
  3330   000F0C  0100               	movlb	0	; () banked
  3331   000F0E  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3332   000F10  0E7E               	movlw	high _figura_5
  3333   000F12  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3334   000F14  0E04               	movlw	4
  3335   000F16  ECC7  F009         	call	_Lcd_CGRAM_CreateChar
  3336   000F1A                     
  3337                           ;Welcome.c: 38:     Lcd_CGRAM_CreateChar(5, figura_6);
  3338   000F1A  0EED               	movlw	low _figura_6
  3339   000F1C  0100               	movlb	0	; () banked
  3340   000F1E  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3341   000F20  0E7E               	movlw	high _figura_6
  3342   000F22  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3343   000F24  0E05               	movlw	5
  3344   000F26  ECC7  F009         	call	_Lcd_CGRAM_CreateChar
  3345   000F2A                     
  3346                           ;Welcome.c: 39:     Lcd_CGRAM_CreateChar(6, figura_7);
  3347   000F2A  0EE5               	movlw	low _figura_7
  3348   000F2C  0100               	movlb	0	; () banked
  3349   000F2E  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3350   000F30  0E7E               	movlw	high _figura_7
  3351   000F32  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3352   000F34  0E06               	movlw	6
  3353   000F36  ECC7  F009         	call	_Lcd_CGRAM_CreateChar
  3354   000F3A                     
  3355                           ;Welcome.c: 40:     Lcd_CGRAM_CreateChar(7, figura_8);
  3356   000F3A  0EDD               	movlw	low _figura_8
  3357   000F3C  0100               	movlb	0	; () banked
  3358   000F3E  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3359   000F40  0E7E               	movlw	high _figura_8
  3360   000F42  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3361   000F44  0E07               	movlw	7
  3362   000F46  ECC7  F009         	call	_Lcd_CGRAM_CreateChar
  3363                           
  3364                           ;Welcome.c: 42:     Lcd_CGRAM_Close();
  3365   000F4A  EC56  F013         	call	_Lcd_CGRAM_Close	;wreg free
  3366                           
  3367                           ;Welcome.c: 43:     Lcd_Clear();
  3368   000F4E  EC48  F013         	call	_Lcd_Clear	;wreg free
  3369   000F52                     
  3370                           ;Welcome.c: 46:     Lcd_Set_Cursor(1,1);
  3371   000F52  0E01               	movlw	1
  3372   000F54  0100               	movlb	0	; () banked
  3373   000F56  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3374   000F58  0E01               	movlw	1
  3375   000F5A  EC7F  F00D         	call	_Lcd_Set_Cursor
  3376   000F5E                     
  3377                           ;Welcome.c: 47:     Lcd_Write_String("   Bienvenidos  ");
  3378   000F5E  0E3F               	movlw	low STR_19
  3379   000F60  0100               	movlb	0	; () banked
  3380   000F62  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3381   000F64  0E7F               	movlw	high STR_19
  3382   000F66  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3383   000F68  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  3384   000F6C                     
  3385                           ;Welcome.c: 48:     _delay((unsigned long)((3000)*(8000000UL/4000.0)));
  3386   000F6C  0E1F               	movlw	31
  3387   000F6E  0100               	movlb	0	; () banked
  3388   000F70  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3389   000F72  0E71               	movlw	113
  3390   000F74  6F73               	movwf	??_Welcome& (0+255),b
  3391   000F76  0E1E               	movlw	30
  3392   000F78                     u3067:
  3393   000F78  2EE8               	decfsz	wreg,f,c
  3394   000F7A  D7FE               	bra	u3067
  3395   000F7C  2F73               	decfsz	??_Welcome& (0+255),f,b
  3396   000F7E  D7FC               	bra	u3067
  3397   000F80  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3398   000F82  D7FA               	bra	u3067
  3399   000F84  0000               	nop	
  3400   000F86                     
  3401                           ;Welcome.c: 50:     for(char i=0; i<16; i++)
  3402   000F86  0E00               	movlw	0
  3403   000F88  0100               	movlb	0	; () banked
  3404   000F8A  6F75               	movwf	Welcome@i& (0+255),b
  3405   000F8C                     l3285:
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;Welcome.c: 51:       {;Welcome.c: 52:         Lcd_Shift_Left();
  3409   000F8C  EC41  F013         	call	_Lcd_Shift_Left	;wreg free
  3410   000F90                     
  3411                           ;Welcome.c: 53:         _delay((unsigned long)((300)*(8000000UL/4000.0)));
  3412   000F90  0E04               	movlw	4
  3413   000F92  0100               	movlb	0	; () banked
  3414   000F94  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3415   000F96  0E0C               	movlw	12
  3416   000F98  6F73               	movwf	??_Welcome& (0+255),b
  3417   000F9A  0E33               	movlw	51
  3418   000F9C                     u3077:
  3419   000F9C  2EE8               	decfsz	wreg,f,c
  3420   000F9E  D7FE               	bra	u3077
  3421   000FA0  2F73               	decfsz	??_Welcome& (0+255),f,b
  3422   000FA2  D7FC               	bra	u3077
  3423   000FA4  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3424   000FA6  D7FA               	bra	u3077
  3425   000FA8  D000               	nop2	
  3426   000FAA                     
  3427                           ;Welcome.c: 54:       }
  3428   000FAA  0100               	movlb	0	; () banked
  3429   000FAC  2B75               	incf	Welcome@i& (0+255),f,b
  3430   000FAE                     
  3431                           ; BSR set to: 0
  3432   000FAE  0E0F               	movlw	15
  3433   000FB0  6575               	cpfsgt	Welcome@i& (0+255),b
  3434   000FB2  EFDD  F007         	goto	u2311
  3435   000FB6  EFDF  F007         	goto	u2310
  3436   000FBA                     u2311:
  3437   000FBA  EFC6  F007         	goto	l3285
  3438   000FBE                     u2310:
  3439   000FBE                     
  3440                           ; BSR set to: 0
  3441                           ;Welcome.c: 56:     for(char i=0; i<16; i++)
  3442   000FBE  0E00               	movlw	0
  3443   000FC0  6F76               	movwf	Welcome@i_805& (0+255),b
  3444   000FC2                     l3299:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;Welcome.c: 57:       {;Welcome.c: 58:         Lcd_Shift_Right();
  3448   000FC2  EC3A  F013         	call	_Lcd_Shift_Right	;wreg free
  3449   000FC6                     
  3450                           ;Welcome.c: 59:         _delay((unsigned long)((300)*(8000000UL/4000.0)));
  3451   000FC6  0E04               	movlw	4
  3452   000FC8  0100               	movlb	0	; () banked
  3453   000FCA  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3454   000FCC  0E0C               	movlw	12
  3455   000FCE  6F73               	movwf	??_Welcome& (0+255),b
  3456   000FD0  0E33               	movlw	51
  3457   000FD2                     u3087:
  3458   000FD2  2EE8               	decfsz	wreg,f,c
  3459   000FD4  D7FE               	bra	u3087
  3460   000FD6  2F73               	decfsz	??_Welcome& (0+255),f,b
  3461   000FD8  D7FC               	bra	u3087
  3462   000FDA  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3463   000FDC  D7FA               	bra	u3087
  3464   000FDE  D000               	nop2	
  3465   000FE0                     
  3466                           ;Welcome.c: 60:       }
  3467   000FE0  0100               	movlb	0	; () banked
  3468   000FE2  2B76               	incf	Welcome@i_805& (0+255),f,b
  3469   000FE4                     
  3470                           ; BSR set to: 0
  3471   000FE4  0E0F               	movlw	15
  3472   000FE6  6576               	cpfsgt	Welcome@i_805& (0+255),b
  3473   000FE8  EFF8  F007         	goto	u2321
  3474   000FEC  EFFA  F007         	goto	u2320
  3475   000FF0                     u2321:
  3476   000FF0  EFE1  F007         	goto	l3299
  3477   000FF4                     u2320:
  3478   000FF4                     
  3479                           ; BSR set to: 0
  3480                           ;Welcome.c: 62:     Lcd_Clear();
  3481   000FF4  EC48  F013         	call	_Lcd_Clear	;wreg free
  3482   000FF8                     
  3483                           ;Welcome.c: 63:     Lcd_Set_Cursor(1,1);
  3484   000FF8  0E01               	movlw	1
  3485   000FFA  0100               	movlb	0	; () banked
  3486   000FFC  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3487   000FFE  0E01               	movlw	1
  3488   001000  EC7F  F00D         	call	_Lcd_Set_Cursor
  3489   001004                     
  3490                           ;Welcome.c: 64:     Lcd_Write_String("    Contador    ");
  3491   001004  0E1D               	movlw	low STR_20
  3492   001006  0100               	movlb	0	; () banked
  3493   001008  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3494   00100A  0E7F               	movlw	high STR_20
  3495   00100C  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3496   00100E  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  3497   001012                     
  3498                           ;Welcome.c: 65:     Lcd_Set_Cursor(2,1);
  3499   001012  0E01               	movlw	1
  3500   001014  0100               	movlb	0	; () banked
  3501   001016  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3502   001018  0E02               	movlw	2
  3503   00101A  EC7F  F00D         	call	_Lcd_Set_Cursor
  3504   00101E                     
  3505                           ;Welcome.c: 66:     Lcd_Write_String("    De Piezas   ");
  3506   00101E  0E2E               	movlw	low STR_21
  3507   001020  0100               	movlb	0	; () banked
  3508   001022  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3509   001024  0E7F               	movlw	high STR_21
  3510   001026  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3511   001028  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  3512   00102C                     
  3513                           ;Welcome.c: 67:     _delay((unsigned long)((3000)*(8000000UL/4000.0)));
  3514   00102C  0E1F               	movlw	31
  3515   00102E  0100               	movlb	0	; () banked
  3516   001030  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3517   001032  0E71               	movlw	113
  3518   001034  6F73               	movwf	??_Welcome& (0+255),b
  3519   001036  0E1E               	movlw	30
  3520   001038                     u3097:
  3521   001038  2EE8               	decfsz	wreg,f,c
  3522   00103A  D7FE               	bra	u3097
  3523   00103C  2F73               	decfsz	??_Welcome& (0+255),f,b
  3524   00103E  D7FC               	bra	u3097
  3525   001040  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3526   001042  D7FA               	bra	u3097
  3527   001044  0000               	nop	
  3528   001046                     
  3529                           ;Welcome.c: 70:     for(char i=1; i<17; i++)
  3530   001046  0E01               	movlw	1
  3531   001048  0100               	movlb	0	; () banked
  3532   00104A  6F78               	movwf	Welcome@i_809& (0+255),b
  3533   00104C                     l3325:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;Welcome.c: 71:       {;Welcome.c: 72:         Lcd_Set_Cursor(2,i);
  3537   00104C  C078  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3538   001050  0E02               	movlw	2
  3539   001052  EC7F  F00D         	call	_Lcd_Set_Cursor
  3540                           
  3541                           ;Welcome.c: 73:          Lcd_Write_Char(0);
  3542   001056  0E00               	movlw	0
  3543   001058  EC83  F012         	call	_Lcd_Write_Char
  3544   00105C                     
  3545                           ;Welcome.c: 74:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3546   00105C  0E02               	movlw	2
  3547   00105E  0100               	movlb	0	; () banked
  3548   001060  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3549   001062  0E04               	movlw	4
  3550   001064  6F73               	movwf	??_Welcome& (0+255),b
  3551   001066  0EBA               	movlw	186
  3552   001068                     u3107:
  3553   001068  2EE8               	decfsz	wreg,f,c
  3554   00106A  D7FE               	bra	u3107
  3555   00106C  2F73               	decfsz	??_Welcome& (0+255),f,b
  3556   00106E  D7FC               	bra	u3107
  3557   001070  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3558   001072  D7FA               	bra	u3107
  3559   001074  0000               	nop	
  3560   001076                     
  3561                           ;Welcome.c: 76:          Lcd_Set_Cursor(2,i);
  3562   001076  C078  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3563   00107A  0E02               	movlw	2
  3564   00107C  EC7F  F00D         	call	_Lcd_Set_Cursor
  3565   001080                     
  3566                           ;Welcome.c: 77:          Lcd_Write_Char(1);
  3567   001080  0E01               	movlw	1
  3568   001082  EC83  F012         	call	_Lcd_Write_Char
  3569   001086                     
  3570                           ;Welcome.c: 78:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3571   001086  0E02               	movlw	2
  3572   001088  0100               	movlb	0	; () banked
  3573   00108A  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3574   00108C  0E04               	movlw	4
  3575   00108E  6F73               	movwf	??_Welcome& (0+255),b
  3576   001090  0EBA               	movlw	186
  3577   001092                     u3117:
  3578   001092  2EE8               	decfsz	wreg,f,c
  3579   001094  D7FE               	bra	u3117
  3580   001096  2F73               	decfsz	??_Welcome& (0+255),f,b
  3581   001098  D7FC               	bra	u3117
  3582   00109A  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3583   00109C  D7FA               	bra	u3117
  3584   00109E  0000               	nop	
  3585                           
  3586                           ;Welcome.c: 81:          Lcd_Set_Cursor(2,i);
  3587   0010A0  C078  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3588   0010A4  0E02               	movlw	2
  3589   0010A6  EC7F  F00D         	call	_Lcd_Set_Cursor
  3590   0010AA                     
  3591                           ;Welcome.c: 82:          Lcd_Write_String(" ");
  3592   0010AA  0E2C               	movlw	low (STR_20+15)
  3593   0010AC  0100               	movlb	0	; () banked
  3594   0010AE  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3595   0010B0  0E7F               	movlw	high (STR_20+15)
  3596   0010B2  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3597   0010B4  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  3598   0010B8                     
  3599                           ;Welcome.c: 85:          Lcd_Set_Cursor(2,i);
  3600   0010B8  C078  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3601   0010BC  0E02               	movlw	2
  3602   0010BE  EC7F  F00D         	call	_Lcd_Set_Cursor
  3603   0010C2                     
  3604                           ;Welcome.c: 86:          Lcd_Write_Char(2);
  3605   0010C2  0E02               	movlw	2
  3606   0010C4  EC83  F012         	call	_Lcd_Write_Char
  3607   0010C8                     
  3608                           ;Welcome.c: 87:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3609   0010C8  0E02               	movlw	2
  3610   0010CA  0100               	movlb	0	; () banked
  3611   0010CC  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3612   0010CE  0E04               	movlw	4
  3613   0010D0  6F73               	movwf	??_Welcome& (0+255),b
  3614   0010D2  0EBA               	movlw	186
  3615   0010D4                     u3127:
  3616   0010D4  2EE8               	decfsz	wreg,f,c
  3617   0010D6  D7FE               	bra	u3127
  3618   0010D8  2F73               	decfsz	??_Welcome& (0+255),f,b
  3619   0010DA  D7FC               	bra	u3127
  3620   0010DC  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3621   0010DE  D7FA               	bra	u3127
  3622   0010E0  0000               	nop	
  3623   0010E2                     
  3624                           ;Welcome.c: 89:          Lcd_Set_Cursor(2,i);
  3625   0010E2  C078  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3626   0010E6  0E02               	movlw	2
  3627   0010E8  EC7F  F00D         	call	_Lcd_Set_Cursor
  3628   0010EC                     
  3629                           ;Welcome.c: 90:          Lcd_Write_Char(3);
  3630   0010EC  0E03               	movlw	3
  3631   0010EE  EC83  F012         	call	_Lcd_Write_Char
  3632   0010F2                     
  3633                           ;Welcome.c: 91:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3634   0010F2  0E02               	movlw	2
  3635   0010F4  0100               	movlb	0	; () banked
  3636   0010F6  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3637   0010F8  0E04               	movlw	4
  3638   0010FA  6F73               	movwf	??_Welcome& (0+255),b
  3639   0010FC  0EBA               	movlw	186
  3640   0010FE                     u3137:
  3641   0010FE  2EE8               	decfsz	wreg,f,c
  3642   001100  D7FE               	bra	u3137
  3643   001102  2F73               	decfsz	??_Welcome& (0+255),f,b
  3644   001104  D7FC               	bra	u3137
  3645   001106  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3646   001108  D7FA               	bra	u3137
  3647   00110A  0000               	nop	
  3648   00110C                     
  3649                           ;Welcome.c: 94:          Lcd_Set_Cursor(2,i);
  3650   00110C  C078  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3651   001110  0E02               	movlw	2
  3652   001112  EC7F  F00D         	call	_Lcd_Set_Cursor
  3653                           
  3654                           ;Welcome.c: 95:          Lcd_Write_String(" ");
  3655   001116  0E2C               	movlw	low (STR_20+15)
  3656   001118  0100               	movlb	0	; () banked
  3657   00111A  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3658   00111C  0E7F               	movlw	high (STR_20+15)
  3659   00111E  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3660   001120  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  3661   001124                     
  3662                           ;Welcome.c: 96:       }
  3663   001124  0100               	movlb	0	; () banked
  3664   001126  2B78               	incf	Welcome@i_809& (0+255),f,b
  3665   001128                     
  3666                           ; BSR set to: 0
  3667   001128  0E10               	movlw	16
  3668   00112A  6578               	cpfsgt	Welcome@i_809& (0+255),b
  3669   00112C  EF9A  F008         	goto	u2331
  3670   001130  EF9C  F008         	goto	u2330
  3671   001134                     u2331:
  3672   001134  EF26  F008         	goto	l3325
  3673   001138                     u2330:
  3674   001138                     
  3675                           ; BSR set to: 0
  3676                           ;Welcome.c: 97:     for(char i=16; i>4; i--)
  3677   001138  0E10               	movlw	16
  3678   00113A  6F77               	movwf	Welcome@i_812& (0+255),b
  3679   00113C                     l3361:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;Welcome.c: 98:       {;Welcome.c: 99:         Lcd_Set_Cursor(1,i);
  3683   00113C  C077  F063         	movff	Welcome@i_812,Lcd_Set_Cursor@b
  3684   001140  0E01               	movlw	1
  3685   001142  EC7F  F00D         	call	_Lcd_Set_Cursor
  3686                           
  3687                           ;Welcome.c: 100:          Lcd_Write_Char(4);
  3688   001146  0E04               	movlw	4
  3689   001148  EC83  F012         	call	_Lcd_Write_Char
  3690   00114C                     
  3691                           ;Welcome.c: 101:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3692   00114C  0E02               	movlw	2
  3693   00114E  0100               	movlb	0	; () banked
  3694   001150  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3695   001152  0E04               	movlw	4
  3696   001154  6F73               	movwf	??_Welcome& (0+255),b
  3697   001156  0EBA               	movlw	186
  3698   001158                     u3147:
  3699   001158  2EE8               	decfsz	wreg,f,c
  3700   00115A  D7FE               	bra	u3147
  3701   00115C  2F73               	decfsz	??_Welcome& (0+255),f,b
  3702   00115E  D7FC               	bra	u3147
  3703   001160  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3704   001162  D7FA               	bra	u3147
  3705   001164  0000               	nop	
  3706   001166                     
  3707                           ;Welcome.c: 103:          Lcd_Set_Cursor(1,i);
  3708   001166  C077  F063         	movff	Welcome@i_812,Lcd_Set_Cursor@b
  3709   00116A  0E01               	movlw	1
  3710   00116C  EC7F  F00D         	call	_Lcd_Set_Cursor
  3711   001170                     
  3712                           ;Welcome.c: 104:          Lcd_Write_Char(5);
  3713   001170  0E05               	movlw	5
  3714   001172  EC83  F012         	call	_Lcd_Write_Char
  3715   001176                     
  3716                           ;Welcome.c: 105:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3717   001176  0E02               	movlw	2
  3718   001178  0100               	movlb	0	; () banked
  3719   00117A  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3720   00117C  0E04               	movlw	4
  3721   00117E  6F73               	movwf	??_Welcome& (0+255),b
  3722   001180  0EBA               	movlw	186
  3723   001182                     u3157:
  3724   001182  2EE8               	decfsz	wreg,f,c
  3725   001184  D7FE               	bra	u3157
  3726   001186  2F73               	decfsz	??_Welcome& (0+255),f,b
  3727   001188  D7FC               	bra	u3157
  3728   00118A  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3729   00118C  D7FA               	bra	u3157
  3730   00118E  0000               	nop	
  3731                           
  3732                           ;Welcome.c: 107:          Lcd_Set_Cursor(1,i);
  3733   001190  C077  F063         	movff	Welcome@i_812,Lcd_Set_Cursor@b
  3734   001194  0E01               	movlw	1
  3735   001196  EC7F  F00D         	call	_Lcd_Set_Cursor
  3736                           
  3737                           ;Welcome.c: 108:          Lcd_Write_Char(6);
  3738   00119A  0E06               	movlw	6
  3739   00119C  EC83  F012         	call	_Lcd_Write_Char
  3740   0011A0                     
  3741                           ;Welcome.c: 109:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3742   0011A0  0E02               	movlw	2
  3743   0011A2  0100               	movlb	0	; () banked
  3744   0011A4  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3745   0011A6  0E04               	movlw	4
  3746   0011A8  6F73               	movwf	??_Welcome& (0+255),b
  3747   0011AA  0EBA               	movlw	186
  3748   0011AC                     u3167:
  3749   0011AC  2EE8               	decfsz	wreg,f,c
  3750   0011AE  D7FE               	bra	u3167
  3751   0011B0  2F73               	decfsz	??_Welcome& (0+255),f,b
  3752   0011B2  D7FC               	bra	u3167
  3753   0011B4  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3754   0011B6  D7FA               	bra	u3167
  3755   0011B8  0000               	nop	
  3756   0011BA                     
  3757                           ;Welcome.c: 111:          Lcd_Set_Cursor(1,i);
  3758   0011BA  C077  F063         	movff	Welcome@i_812,Lcd_Set_Cursor@b
  3759   0011BE  0E01               	movlw	1
  3760   0011C0  EC7F  F00D         	call	_Lcd_Set_Cursor
  3761   0011C4                     
  3762                           ;Welcome.c: 112:          Lcd_Write_Char(3);
  3763   0011C4  0E03               	movlw	3
  3764   0011C6  EC83  F012         	call	_Lcd_Write_Char
  3765   0011CA                     
  3766                           ;Welcome.c: 113:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3767   0011CA  0E02               	movlw	2
  3768   0011CC  0100               	movlb	0	; () banked
  3769   0011CE  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3770   0011D0  0E04               	movlw	4
  3771   0011D2  6F73               	movwf	??_Welcome& (0+255),b
  3772   0011D4  0EBA               	movlw	186
  3773   0011D6                     u3177:
  3774   0011D6  2EE8               	decfsz	wreg,f,c
  3775   0011D8  D7FE               	bra	u3177
  3776   0011DA  2F73               	decfsz	??_Welcome& (0+255),f,b
  3777   0011DC  D7FC               	bra	u3177
  3778   0011DE  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3779   0011E0  D7FA               	bra	u3177
  3780   0011E2  0000               	nop	
  3781                           
  3782                           ;Welcome.c: 115:          Lcd_Set_Cursor(1,i);
  3783   0011E4  C077  F063         	movff	Welcome@i_812,Lcd_Set_Cursor@b
  3784   0011E8  0E01               	movlw	1
  3785   0011EA  EC7F  F00D         	call	_Lcd_Set_Cursor
  3786   0011EE                     
  3787                           ;Welcome.c: 116:          Lcd_Write_String(" ");
  3788   0011EE  0E2C               	movlw	low (STR_20+15)
  3789   0011F0  0100               	movlb	0	; () banked
  3790   0011F2  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3791   0011F4  0E7F               	movlw	high (STR_20+15)
  3792   0011F6  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3793   0011F8  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  3794   0011FC                     
  3795                           ;Welcome.c: 117:       }
  3796   0011FC  0100               	movlb	0	; () banked
  3797   0011FE  0777               	decf	Welcome@i_812& (0+255),f,b
  3798   001200                     
  3799                           ; BSR set to: 0
  3800   001200  0E05               	movlw	5
  3801   001202  6177               	cpfslt	Welcome@i_812& (0+255),b
  3802   001204  EF06  F009         	goto	u2341
  3803   001208  EF08  F009         	goto	u2340
  3804   00120C                     u2341:
  3805   00120C  EF9E  F008         	goto	l3361
  3806   001210                     u2340:
  3807   001210                     
  3808                           ; BSR set to: 0
  3809                           ;Welcome.c: 120:     for(char i=3; i<20; i++)
  3810   001210  0E03               	movlw	3
  3811   001212  6F79               	movwf	Welcome@i_814& (0+255),b
  3812   001214                     l3391:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;Welcome.c: 121:       {;Welcome.c: 122:         Lcd_Set_Cursor(1,i);
  3816   001214  C079  F063         	movff	Welcome@i_814,Lcd_Set_Cursor@b
  3817   001218  0E01               	movlw	1
  3818   00121A  EC7F  F00D         	call	_Lcd_Set_Cursor
  3819                           
  3820                           ;Welcome.c: 123:          Lcd_Write_Char(0);
  3821   00121E  0E00               	movlw	0
  3822   001220  EC83  F012         	call	_Lcd_Write_Char
  3823                           
  3824                           ;Welcome.c: 124:         Lcd_Set_Cursor(1,i-2);
  3825   001224  0100               	movlb	0	; () banked
  3826   001226  5179               	movf	Welcome@i_814& (0+255),w,b
  3827   001228  0FFE               	addlw	254
  3828   00122A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3829   00122C  0E01               	movlw	1
  3830   00122E  EC7F  F00D         	call	_Lcd_Set_Cursor
  3831                           
  3832                           ;Welcome.c: 125:          Lcd_Write_Char(7);
  3833   001232  0E07               	movlw	7
  3834   001234  EC83  F012         	call	_Lcd_Write_Char
  3835   001238                     
  3836                           ;Welcome.c: 126:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3837   001238  0E02               	movlw	2
  3838   00123A  0100               	movlb	0	; () banked
  3839   00123C  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3840   00123E  0E04               	movlw	4
  3841   001240  6F73               	movwf	??_Welcome& (0+255),b
  3842   001242  0EBA               	movlw	186
  3843   001244                     u3187:
  3844   001244  2EE8               	decfsz	wreg,f,c
  3845   001246  D7FE               	bra	u3187
  3846   001248  2F73               	decfsz	??_Welcome& (0+255),f,b
  3847   00124A  D7FC               	bra	u3187
  3848   00124C  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3849   00124E  D7FA               	bra	u3187
  3850   001250  0000               	nop	
  3851   001252                     
  3852                           ;Welcome.c: 128:          Lcd_Set_Cursor(1,i);
  3853   001252  C079  F063         	movff	Welcome@i_814,Lcd_Set_Cursor@b
  3854   001256  0E01               	movlw	1
  3855   001258  EC7F  F00D         	call	_Lcd_Set_Cursor
  3856   00125C                     
  3857                           ;Welcome.c: 129:          Lcd_Write_Char(1);
  3858   00125C  0E01               	movlw	1
  3859   00125E  EC83  F012         	call	_Lcd_Write_Char
  3860   001262                     
  3861                           ;Welcome.c: 130:          Lcd_Set_Cursor(1,i-2);
  3862   001262  0100               	movlb	0	; () banked
  3863   001264  5179               	movf	Welcome@i_814& (0+255),w,b
  3864   001266  0FFE               	addlw	254
  3865   001268  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3866   00126A  0E01               	movlw	1
  3867   00126C  EC7F  F00D         	call	_Lcd_Set_Cursor
  3868   001270                     
  3869                           ;Welcome.c: 131:          Lcd_Write_Char(7);
  3870   001270  0E07               	movlw	7
  3871   001272  EC83  F012         	call	_Lcd_Write_Char
  3872   001276                     
  3873                           ;Welcome.c: 132:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3874   001276  0E02               	movlw	2
  3875   001278  0100               	movlb	0	; () banked
  3876   00127A  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3877   00127C  0E04               	movlw	4
  3878   00127E  6F73               	movwf	??_Welcome& (0+255),b
  3879   001280  0EBA               	movlw	186
  3880   001282                     u3197:
  3881   001282  2EE8               	decfsz	wreg,f,c
  3882   001284  D7FE               	bra	u3197
  3883   001286  2F73               	decfsz	??_Welcome& (0+255),f,b
  3884   001288  D7FC               	bra	u3197
  3885   00128A  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3886   00128C  D7FA               	bra	u3197
  3887   00128E  0000               	nop	
  3888                           
  3889                           ;Welcome.c: 135:          Lcd_Set_Cursor(1,i);
  3890   001290  C079  F063         	movff	Welcome@i_814,Lcd_Set_Cursor@b
  3891   001294  0E01               	movlw	1
  3892   001296  EC7F  F00D         	call	_Lcd_Set_Cursor
  3893   00129A                     
  3894                           ;Welcome.c: 136:          Lcd_Write_String(" ");
  3895   00129A  0E2C               	movlw	low (STR_20+15)
  3896   00129C  0100               	movlb	0	; () banked
  3897   00129E  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3898   0012A0  0E7F               	movlw	high (STR_20+15)
  3899   0012A2  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3900   0012A4  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  3901   0012A8                     
  3902                           ;Welcome.c: 137:          Lcd_Set_Cursor(1,i-2);
  3903   0012A8  0100               	movlb	0	; () banked
  3904   0012AA  5179               	movf	Welcome@i_814& (0+255),w,b
  3905   0012AC  0FFE               	addlw	254
  3906   0012AE  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3907   0012B0  0E01               	movlw	1
  3908   0012B2  EC7F  F00D         	call	_Lcd_Set_Cursor
  3909                           
  3910                           ;Welcome.c: 138:          Lcd_Write_String(" ");
  3911   0012B6  0E2C               	movlw	low (STR_20+15)
  3912   0012B8  0100               	movlb	0	; () banked
  3913   0012BA  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3914   0012BC  0E7F               	movlw	high (STR_20+15)
  3915   0012BE  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3916   0012C0  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  3917   0012C4                     
  3918                           ;Welcome.c: 141:          Lcd_Set_Cursor(1,i);
  3919   0012C4  C079  F063         	movff	Welcome@i_814,Lcd_Set_Cursor@b
  3920   0012C8  0E01               	movlw	1
  3921   0012CA  EC7F  F00D         	call	_Lcd_Set_Cursor
  3922   0012CE                     
  3923                           ;Welcome.c: 142:          Lcd_Write_Char(2);
  3924   0012CE  0E02               	movlw	2
  3925   0012D0  EC83  F012         	call	_Lcd_Write_Char
  3926   0012D4                     
  3927                           ;Welcome.c: 143:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3928   0012D4  0E02               	movlw	2
  3929   0012D6  0100               	movlb	0	; () banked
  3930   0012D8  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3931   0012DA  0E04               	movlw	4
  3932   0012DC  6F73               	movwf	??_Welcome& (0+255),b
  3933   0012DE  0EBA               	movlw	186
  3934   0012E0                     u3207:
  3935   0012E0  2EE8               	decfsz	wreg,f,c
  3936   0012E2  D7FE               	bra	u3207
  3937   0012E4  2F73               	decfsz	??_Welcome& (0+255),f,b
  3938   0012E6  D7FC               	bra	u3207
  3939   0012E8  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3940   0012EA  D7FA               	bra	u3207
  3941   0012EC  0000               	nop	
  3942   0012EE                     
  3943                           ;Welcome.c: 144:          Lcd_Set_Cursor(1,i-2);
  3944   0012EE  0100               	movlb	0	; () banked
  3945   0012F0  5179               	movf	Welcome@i_814& (0+255),w,b
  3946   0012F2  0FFE               	addlw	254
  3947   0012F4  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3948   0012F6  0E01               	movlw	1
  3949   0012F8  EC7F  F00D         	call	_Lcd_Set_Cursor
  3950   0012FC                     
  3951                           ;Welcome.c: 145:          Lcd_Write_Char(7);
  3952   0012FC  0E07               	movlw	7
  3953   0012FE  EC83  F012         	call	_Lcd_Write_Char
  3954   001302                     
  3955                           ;Welcome.c: 147:          Lcd_Set_Cursor(1,i);
  3956   001302  C079  F063         	movff	Welcome@i_814,Lcd_Set_Cursor@b
  3957   001306  0E01               	movlw	1
  3958   001308  EC7F  F00D         	call	_Lcd_Set_Cursor
  3959   00130C                     
  3960                           ;Welcome.c: 148:          Lcd_Write_Char(3);
  3961   00130C  0E03               	movlw	3
  3962   00130E  EC83  F012         	call	_Lcd_Write_Char
  3963   001312                     
  3964                           ;Welcome.c: 149:          Lcd_Set_Cursor(1,i-2);
  3965   001312  0100               	movlb	0	; () banked
  3966   001314  5179               	movf	Welcome@i_814& (0+255),w,b
  3967   001316  0FFE               	addlw	254
  3968   001318  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3969   00131A  0E01               	movlw	1
  3970   00131C  EC7F  F00D         	call	_Lcd_Set_Cursor
  3971   001320                     
  3972                           ;Welcome.c: 150:          Lcd_Write_Char(7);
  3973   001320  0E07               	movlw	7
  3974   001322  EC83  F012         	call	_Lcd_Write_Char
  3975   001326                     
  3976                           ;Welcome.c: 152:          _delay((unsigned long)((100)*(8000000UL/4000.0)));
  3977   001326  0E02               	movlw	2
  3978   001328  0100               	movlb	0	; () banked
  3979   00132A  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3980   00132C  0E04               	movlw	4
  3981   00132E  6F73               	movwf	??_Welcome& (0+255),b
  3982   001330  0EBA               	movlw	186
  3983   001332                     u3217:
  3984   001332  2EE8               	decfsz	wreg,f,c
  3985   001334  D7FE               	bra	u3217
  3986   001336  2F73               	decfsz	??_Welcome& (0+255),f,b
  3987   001338  D7FC               	bra	u3217
  3988   00133A  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3989   00133C  D7FA               	bra	u3217
  3990   00133E  0000               	nop	
  3991   001340                     
  3992                           ;Welcome.c: 155:          Lcd_Set_Cursor(1,i);
  3993   001340  C079  F063         	movff	Welcome@i_814,Lcd_Set_Cursor@b
  3994   001344  0E01               	movlw	1
  3995   001346  EC7F  F00D         	call	_Lcd_Set_Cursor
  3996   00134A                     
  3997                           ;Welcome.c: 156:          Lcd_Write_String(" ");
  3998   00134A  0E2C               	movlw	low (STR_20+15)
  3999   00134C  0100               	movlb	0	; () banked
  4000   00134E  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  4001   001350  0E7F               	movlw	high (STR_20+15)
  4002   001352  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  4003   001354  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  4004                           
  4005                           ;Welcome.c: 157:          Lcd_Set_Cursor(1,i-2);
  4006   001358  0100               	movlb	0	; () banked
  4007   00135A  5179               	movf	Welcome@i_814& (0+255),w,b
  4008   00135C  0FFE               	addlw	254
  4009   00135E  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  4010   001360  0E01               	movlw	1
  4011   001362  EC7F  F00D         	call	_Lcd_Set_Cursor
  4012   001366                     
  4013                           ;Welcome.c: 158:          Lcd_Write_String(" ");
  4014   001366  0E2C               	movlw	low (STR_20+15)
  4015   001368  0100               	movlb	0	; () banked
  4016   00136A  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  4017   00136C  0E7F               	movlw	high (STR_20+15)
  4018   00136E  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  4019   001370  ECCC  F010         	call	_Lcd_Write_String	;wreg free
  4020   001374                     
  4021                           ;Welcome.c: 159:       }
  4022   001374  0100               	movlb	0	; () banked
  4023   001376  2B79               	incf	Welcome@i_814& (0+255),f,b
  4024   001378                     
  4025                           ; BSR set to: 0
  4026   001378  0E13               	movlw	19
  4027   00137A  6579               	cpfsgt	Welcome@i_814& (0+255),b
  4028   00137C  EFC2  F009         	goto	u2351
  4029   001380  EFC4  F009         	goto	u2350
  4030   001384                     u2351:
  4031   001384  EF0A  F009         	goto	l3391
  4032   001388                     u2350:
  4033   001388                     
  4034                           ; BSR set to: 0
  4035                           ;Welcome.c: 162:     Lcd_Clear();
  4036   001388  EC48  F013         	call	_Lcd_Clear	;wreg free
  4037   00138C  0012               	return		;funcret
  4038   00138E                     __end_of_Welcome:
  4039                           	callstack 0
  4040                           
  4041 ;; *************** function _Lcd_Write_String *****************
  4042 ;; Defined at:
  4043 ;;		line 104 in file "lcd.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  a               2    4[BANK0 ] PTR const unsigned char 
  4046 ;;		 -> STR_28(2), STR_27(2), STR_26(2), STR_25(2), 
  4047 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_21(17), 
  4048 ;;		 -> STR_20(17), STR_19(17), STR_17(10), STR_16(10), 
  4049 ;;		 -> STR_15(9), STR_14(7), STR_13(2), STR_12(2), 
  4050 ;;		 -> STR_11(15), STR_10(14), STR_9(10), STR_8(7), 
  4051 ;;		 -> re_pcs_str(20), counted_pcs_str(20), main@countdown(20), num_str(10), 
  4052 ;;		 -> STR_4(12), STR_3(15), STR_2(16), STR_1(15), 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  i               2    8[BANK0 ] int 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4064 ;;      Params:         0       2       0       0       0       0       0       0       0
  4065 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4066 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4067 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4068 ;;Total ram usage:        6 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 9
  4071 ;; This function calls:
  4072 ;;		_Lcd_Write_Char
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;;		_Welcome
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text12
  4080   002198                     __ptext12:
  4081                           	callstack 0
  4082   002198                     _Lcd_Write_String:
  4083                           	callstack 20
  4084   002198                     
  4085                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  4086   002198  0E00               	movlw	0
  4087   00219A  0100               	movlb	0	; () banked
  4088   00219C  6F69               	movwf	(Lcd_Write_String@i+1)& (0+255),b
  4089   00219E  0E00               	movlw	0
  4090   0021A0  6F68               	movwf	Lcd_Write_String@i& (0+255),b
  4091   0021A2  EFEF  F010         	goto	l3083
  4092   0021A6                     l3079:
  4093                           
  4094                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  4095   0021A6  0100               	movlb	0	; () banked
  4096   0021A8  5168               	movf	Lcd_Write_String@i& (0+255),w,b
  4097   0021AA  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
  4098   0021AC  6F66               	movwf	??_Lcd_Write_String& (0+255),b
  4099   0021AE  5169               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  4100   0021B0  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  4101   0021B2  6F67               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  4102   0021B4  C066  FFF6         	movff	??_Lcd_Write_String,tblptrl
  4103   0021B8  C067  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  4104   0021BC  6AF8               	clrf	tblptru,c
  4105   0021BE  0E07               	movlw	(high __ramtop+-1)
  4106   0021C0  64F7               	cpfsgt	tblptrh,c
  4107   0021C2  D003               	bra	u2187
  4108   0021C4  0008               	tblrd		*
  4109   0021C6  50F5               	movf	tablat,w,c
  4110   0021C8  D005               	bra	u2180
  4111   0021CA                     u2187:
  4112   0021CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4113   0021CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4114   0021D2  50E7               	movf	indf1,w,c
  4115   0021D4                     u2180:
  4116   0021D4  EC83  F012         	call	_Lcd_Write_Char
  4117   0021D8  0100               	movlb	0	; () banked
  4118   0021DA  4B68               	infsnz	Lcd_Write_String@i& (0+255),f,b
  4119   0021DC  2B69               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
  4120   0021DE                     l3083:
  4121                           
  4122                           ; BSR set to: 0
  4123   0021DE  5168               	movf	Lcd_Write_String@i& (0+255),w,b
  4124   0021E0  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
  4125   0021E2  6F66               	movwf	??_Lcd_Write_String& (0+255),b
  4126   0021E4  5169               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  4127   0021E6  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  4128   0021E8  6F67               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  4129   0021EA  C066  FFF6         	movff	??_Lcd_Write_String,tblptrl
  4130   0021EE  C067  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  4131   0021F2  6AF8               	clrf	tblptru,c
  4132   0021F4  0E07               	movlw	(high __ramtop+-1)
  4133   0021F6  64F7               	cpfsgt	tblptrh,c
  4134   0021F8  D003               	bra	u2197
  4135   0021FA  0008               	tblrd		*
  4136   0021FC  50F5               	movf	tablat,w,c
  4137   0021FE  D005               	bra	u2190
  4138   002200                     u2197:
  4139   002200  CFF6 FFE1          	movff	tblptrl,fsr1l
  4140   002204  CFF7 FFE2          	movff	tblptrh,fsr1h
  4141   002208  50E7               	movf	indf1,w,c
  4142   00220A                     u2190:
  4143   00220A  0900               	iorlw	0
  4144   00220C  A4D8               	btfss	status,2,c
  4145   00220E  EF0B  F011         	goto	u2201
  4146   002212  EF0D  F011         	goto	u2200
  4147   002216                     u2201:
  4148   002216  EFD3  F010         	goto	l3079
  4149   00221A                     u2200:
  4150   00221A  0012               	return		;funcret
  4151   00221C                     __end_of_Lcd_Write_String:
  4152                           	callstack 0
  4153                           
  4154 ;; *************** function _Lcd_Shift_Right *****************
  4155 ;; Defined at:
  4156 ;;		line 111 in file "lcd.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4173 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 9
  4177 ;; This function calls:
  4178 ;;		_Lcd_Cmd
  4179 ;; This function is called by:
  4180 ;;		_Welcome
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text13
  4185   002674                     __ptext13:
  4186                           	callstack 0
  4187   002674                     _Lcd_Shift_Right:
  4188                           	callstack 20
  4189   002674                     
  4190                           ;lcd.c: 113:     Lcd_Cmd(0x01);
  4191   002674  0E01               	movlw	1
  4192   002676  EC07  F013         	call	_Lcd_Cmd
  4193                           
  4194                           ;lcd.c: 114:     Lcd_Cmd(0x0C);
  4195   00267A  0E0C               	movlw	12
  4196   00267C  EC07  F013         	call	_Lcd_Cmd
  4197   002680  0012               	return		;funcret
  4198   002682                     __end_of_Lcd_Shift_Right:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _Lcd_Shift_Left *****************
  4202 ;; Defined at:
  4203 ;;		line 117 in file "lcd.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used: 1
  4223 ;; Hardware stack levels required when called: 9
  4224 ;; This function calls:
  4225 ;;		_Lcd_Cmd
  4226 ;; This function is called by:
  4227 ;;		_Welcome
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text14
  4232   002682                     __ptext14:
  4233                           	callstack 0
  4234   002682                     _Lcd_Shift_Left:
  4235                           	callstack 20
  4236   002682                     
  4237                           ;lcd.c: 119:     Lcd_Cmd(0x01);
  4238   002682  0E01               	movlw	1
  4239   002684  EC07  F013         	call	_Lcd_Cmd
  4240                           
  4241                           ;lcd.c: 120:     Lcd_Cmd(0x08);
  4242   002688  0E08               	movlw	8
  4243   00268A  EC07  F013         	call	_Lcd_Cmd
  4244   00268E  0012               	return		;funcret
  4245   002690                     __end_of_Lcd_Shift_Left:
  4246                           	callstack 0
  4247                           
  4248 ;; *************** function _Lcd_Set_Cursor *****************
  4249 ;; Defined at:
  4250 ;;		line 26 in file "lcd.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  a               1    wreg     unsigned char 
  4253 ;;  b               1    3[BANK0 ] unsigned char 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  a               1    4[BANK0 ] unsigned char 
  4256 ;;  temp            1    7[BANK0 ] unsigned char 
  4257 ;;  y               1    6[BANK0 ] unsigned char 
  4258 ;;  z               1    5[BANK0 ] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4268 ;;      Params:         0       1       0       0       0       0       0       0       0
  4269 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4271 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4272 ;;Total ram usage:        5 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 9
  4275 ;; This function calls:
  4276 ;;		_Lcd_Cmd
  4277 ;; This function is called by:
  4278 ;;		_main
  4279 ;;		_Welcome
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text15
  4284   001AFE                     __ptext15:
  4285                           	callstack 0
  4286   001AFE                     _Lcd_Set_Cursor:
  4287                           	callstack 20
  4288                           
  4289                           ;incstack = 0
  4290                           ;Lcd_Set_Cursor@a stored from wreg
  4291   001AFE  0100               	movlb	0	; () banked
  4292   001B00  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
  4293   001B02                     
  4294                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  4295   001B02  0100               	movlb	0	; () banked
  4296   001B04  0564               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  4297   001B06  A4D8               	btfss	status,2,c
  4298   001B08  EF88  F00D         	goto	u2141
  4299   001B0C  EF8A  F00D         	goto	u2140
  4300   001B10                     u2141:
  4301   001B10  EF9C  F00D         	goto	l3053
  4302   001B14                     u2140:
  4303   001B14                     
  4304                           ; BSR set to: 0
  4305                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  4306   001B14  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4307   001B16  0F7F               	addlw	127
  4308   001B18  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4309                           
  4310                           ;lcd.c: 32:         z = temp>>4;
  4311   001B1A  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4312   001B1C  0B0F               	andlw	15
  4313   001B1E  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4314                           
  4315                           ;lcd.c: 33:         y = temp & 0x0F;
  4316   001B20  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4317   001B22  0B0F               	andlw	15
  4318   001B24  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4319   001B26                     
  4320                           ; BSR set to: 0
  4321                           ;lcd.c: 34:         Lcd_Cmd(z);
  4322   001B26  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4323   001B28  EC07  F013         	call	_Lcd_Cmd
  4324   001B2C                     
  4325                           ;lcd.c: 35:         Lcd_Cmd(y);
  4326   001B2C  0100               	movlb	0	; () banked
  4327   001B2E  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4328   001B30  EC07  F013         	call	_Lcd_Cmd
  4329                           
  4330                           ;lcd.c: 36:     }
  4331   001B34  EFED  F00D         	goto	l257
  4332   001B38                     l3053:
  4333                           
  4334                           ; BSR set to: 0
  4335   001B38  0E02               	movlw	2
  4336   001B3A  1964               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  4337   001B3C  A4D8               	btfss	status,2,c
  4338   001B3E  EFA3  F00D         	goto	u2151
  4339   001B42  EFA5  F00D         	goto	u2150
  4340   001B46                     u2151:
  4341   001B46  EFB7  F00D         	goto	l3061
  4342   001B4A                     u2150:
  4343   001B4A                     
  4344                           ; BSR set to: 0
  4345                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  4346   001B4A  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4347   001B4C  0FBF               	addlw	191
  4348   001B4E  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4349                           
  4350                           ;lcd.c: 40:         z = temp>>4;
  4351   001B50  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4352   001B52  0B0F               	andlw	15
  4353   001B54  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4354                           
  4355                           ;lcd.c: 41:         y = temp & 0x0F;
  4356   001B56  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4357   001B58  0B0F               	andlw	15
  4358   001B5A  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4359   001B5C                     
  4360                           ; BSR set to: 0
  4361                           ;lcd.c: 42:         Lcd_Cmd(z);
  4362   001B5C  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4363   001B5E  EC07  F013         	call	_Lcd_Cmd
  4364   001B62                     
  4365                           ;lcd.c: 43:         Lcd_Cmd(y);
  4366   001B62  0100               	movlb	0	; () banked
  4367   001B64  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4368   001B66  EC07  F013         	call	_Lcd_Cmd
  4369                           
  4370                           ;lcd.c: 44:     }
  4371   001B6A  EFED  F00D         	goto	l257
  4372   001B6E                     l3061:
  4373                           
  4374                           ; BSR set to: 0
  4375   001B6E  0E03               	movlw	3
  4376   001B70  1964               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  4377   001B72  A4D8               	btfss	status,2,c
  4378   001B74  EFBE  F00D         	goto	u2161
  4379   001B78  EFC0  F00D         	goto	u2160
  4380   001B7C                     u2161:
  4381   001B7C  EFD2  F00D         	goto	l3069
  4382   001B80                     u2160:
  4383   001B80                     
  4384                           ; BSR set to: 0
  4385                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  4386   001B80  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4387   001B82  0F93               	addlw	147
  4388   001B84  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4389                           
  4390                           ;lcd.c: 48:         z = temp>>4;
  4391   001B86  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4392   001B88  0B0F               	andlw	15
  4393   001B8A  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4394                           
  4395                           ;lcd.c: 49:         y = temp & 0x0F;
  4396   001B8C  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4397   001B8E  0B0F               	andlw	15
  4398   001B90  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4399   001B92                     
  4400                           ; BSR set to: 0
  4401                           ;lcd.c: 50:         Lcd_Cmd(z);
  4402   001B92  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4403   001B94  EC07  F013         	call	_Lcd_Cmd
  4404   001B98                     
  4405                           ;lcd.c: 51:         Lcd_Cmd(y);
  4406   001B98  0100               	movlb	0	; () banked
  4407   001B9A  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4408   001B9C  EC07  F013         	call	_Lcd_Cmd
  4409                           
  4410                           ;lcd.c: 52:     }
  4411   001BA0  EFED  F00D         	goto	l257
  4412   001BA4                     l3069:
  4413                           
  4414                           ; BSR set to: 0
  4415   001BA4  0E04               	movlw	4
  4416   001BA6  1964               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  4417   001BA8  A4D8               	btfss	status,2,c
  4418   001BAA  EFD9  F00D         	goto	u2171
  4419   001BAE  EFDB  F00D         	goto	u2170
  4420   001BB2                     u2171:
  4421   001BB2  EFED  F00D         	goto	l253
  4422   001BB6                     u2170:
  4423   001BB6                     
  4424                           ; BSR set to: 0
  4425                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  4426   001BB6  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4427   001BB8  0FD3               	addlw	211
  4428   001BBA  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4429                           
  4430                           ;lcd.c: 56:         z = temp>>4;
  4431   001BBC  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4432   001BBE  0B0F               	andlw	15
  4433   001BC0  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4434                           
  4435                           ;lcd.c: 57:         y = temp & 0x0F;
  4436   001BC2  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4437   001BC4  0B0F               	andlw	15
  4438   001BC6  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4439   001BC8                     
  4440                           ; BSR set to: 0
  4441                           ;lcd.c: 58:         Lcd_Cmd(z);
  4442   001BC8  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4443   001BCA  EC07  F013         	call	_Lcd_Cmd
  4444   001BCE                     
  4445                           ;lcd.c: 59:         Lcd_Cmd(y);
  4446   001BCE  0100               	movlb	0	; () banked
  4447   001BD0  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4448   001BD2  EC07  F013         	call	_Lcd_Cmd
  4449   001BD6  EFED  F00D         	goto	l257
  4450   001BDA                     l253:
  4451   001BDA                     l257:
  4452   001BDA  0012               	return		;funcret
  4453   001BDC                     __end_of_Lcd_Set_Cursor:
  4454                           	callstack 0
  4455                           
  4456 ;; *************** function _Lcd_Init *****************
  4457 ;; Defined at:
  4458 ;;		line 63 in file "lcd.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4472 ;;      Params:         0       0       0       0       0       0       0       0       0
  4473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4474 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4475 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4476 ;;Total ram usage:        1 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; Hardware stack levels required when called: 10
  4479 ;; This function calls:
  4480 ;;		_Lcd_Clear
  4481 ;;		_Lcd_Cmd
  4482 ;;		_Lcd_Port
  4483 ;; This function is called by:
  4484 ;;		_main
  4485 ;;		_Welcome
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text16
  4490   002110                     __ptext16:
  4491                           	callstack 0
  4492   002110                     _Lcd_Init:
  4493                           	callstack 19
  4494   002110                     
  4495                           ;lcd.c: 65:  TRISAbits.TRISA4 = 0;
  4496   002110  9892               	bcf	146,4,c	;volatile
  4497                           
  4498                           ;lcd.c: 66:  TRISAbits.TRISA5 = 0;
  4499   002112  9A92               	bcf	146,5,c	;volatile
  4500                           
  4501                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  4502   002114  9895               	bcf	149,4,c	;volatile
  4503                           
  4504                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  4505   002116  9A95               	bcf	149,5,c	;volatile
  4506                           
  4507                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  4508   002118  9C95               	bcf	149,6,c	;volatile
  4509                           
  4510                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  4511   00211A  9E95               	bcf	149,7,c	;volatile
  4512   00211C                     
  4513                           ;lcd.c: 71:     Lcd_Port(0x00);
  4514   00211C  0E00               	movlw	0
  4515   00211E  EC7F  F011         	call	_Lcd_Port
  4516   002122                     
  4517                           ;lcd.c: 72:     _delay((unsigned long)((20)*(8000000UL/4000.0)));
  4518   002122  0E34               	movlw	52
  4519   002124  0100               	movlb	0	; () banked
  4520   002126  6F63               	movwf	??_Lcd_Init& (0+255),b
  4521   002128  0EF1               	movlw	241
  4522   00212A                     u3227:
  4523   00212A  2EE8               	decfsz	wreg,f,c
  4524   00212C  D7FE               	bra	u3227
  4525   00212E  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
  4526   002130  D7FC               	bra	u3227
  4527   002132  D000               	nop2	
  4528   002134                     
  4529                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  4530   002134  0E03               	movlw	3
  4531   002136  EC07  F013         	call	_Lcd_Cmd
  4532   00213A                     
  4533                           ;lcd.c: 74:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
  4534   00213A  0E0D               	movlw	13
  4535   00213C  0100               	movlb	0	; () banked
  4536   00213E  6F63               	movwf	??_Lcd_Init& (0+255),b
  4537   002140  0EFB               	movlw	251
  4538   002142                     u3237:
  4539   002142  2EE8               	decfsz	wreg,f,c
  4540   002144  D7FE               	bra	u3237
  4541   002146  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
  4542   002148  D7FC               	bra	u3237
  4543   00214A  D000               	nop2	
  4544   00214C                     
  4545                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  4546   00214C  0E03               	movlw	3
  4547   00214E  EC07  F013         	call	_Lcd_Cmd
  4548   002152                     
  4549                           ;lcd.c: 76:     _delay((unsigned long)((11)*(8000000UL/4000.0)));
  4550   002152  0E1D               	movlw	29
  4551   002154  0100               	movlb	0	; () banked
  4552   002156  6F63               	movwf	??_Lcd_Init& (0+255),b
  4553   002158  0E91               	movlw	145
  4554   00215A                     u3247:
  4555   00215A  2EE8               	decfsz	wreg,f,c
  4556   00215C  D7FE               	bra	u3247
  4557   00215E  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
  4558   002160  D7FC               	bra	u3247
  4559   002162                     
  4560                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  4561   002162  0E03               	movlw	3
  4562   002164  EC07  F013         	call	_Lcd_Cmd
  4563   002168                     
  4564                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  4565   002168  0E02               	movlw	2
  4566   00216A  EC07  F013         	call	_Lcd_Cmd
  4567   00216E                     
  4568                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  4569   00216E  0E02               	movlw	2
  4570   002170  EC07  F013         	call	_Lcd_Cmd
  4571   002174                     
  4572                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  4573   002174  0E08               	movlw	8
  4574   002176  EC07  F013         	call	_Lcd_Cmd
  4575   00217A                     
  4576                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  4577   00217A  0E00               	movlw	0
  4578   00217C  EC07  F013         	call	_Lcd_Cmd
  4579   002180                     
  4580                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  4581   002180  0E0C               	movlw	12
  4582   002182  EC07  F013         	call	_Lcd_Cmd
  4583   002186                     
  4584                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  4585   002186  0E00               	movlw	0
  4586   002188  EC07  F013         	call	_Lcd_Cmd
  4587   00218C                     
  4588                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  4589   00218C  0E06               	movlw	6
  4590   00218E  EC07  F013         	call	_Lcd_Cmd
  4591   002192                     
  4592                           ;lcd.c: 85:     Lcd_Clear();
  4593   002192  EC48  F013         	call	_Lcd_Clear	;wreg free
  4594   002196  0012               	return		;funcret
  4595   002198                     __end_of_Lcd_Init:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _Lcd_Clear *****************
  4599 ;; Defined at:
  4600 ;;		line 20 in file "lcd.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4617 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4618 ;;Total ram usage:        0 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 9
  4621 ;; This function calls:
  4622 ;;		_Lcd_Cmd
  4623 ;; This function is called by:
  4624 ;;		_main
  4625 ;;		_Lcd_Init
  4626 ;;		_Welcome
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text17
  4631   002690                     __ptext17:
  4632                           	callstack 0
  4633   002690                     _Lcd_Clear:
  4634                           	callstack 19
  4635   002690                     
  4636                           ;lcd.c: 22:     Lcd_Cmd(0);
  4637   002690  0E00               	movlw	0
  4638   002692  EC07  F013         	call	_Lcd_Cmd
  4639                           
  4640                           ;lcd.c: 23:     Lcd_Cmd(1);
  4641   002696  0E01               	movlw	1
  4642   002698  EC07  F013         	call	_Lcd_Cmd
  4643   00269C  0012               	return		;funcret
  4644   00269E                     __end_of_Lcd_Clear:
  4645                           	callstack 0
  4646                           
  4647 ;; *************** function _Lcd_CGRAM_Init *****************
  4648 ;; Defined at:
  4649 ;;		line 175 in file "lcd.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4663 ;;      Params:         0       0       0       0       0       0       0       0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4666 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4667 ;;Total ram usage:        0 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 9
  4670 ;; This function calls:
  4671 ;;		_Lcd_Cmd
  4672 ;; This function is called by:
  4673 ;;		_Welcome
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text18
  4678   00269E                     __ptext18:
  4679                           	callstack 0
  4680   00269E                     _Lcd_CGRAM_Init:
  4681                           	callstack 20
  4682   00269E                     
  4683                           ;lcd.c: 177:     Lcd_Cmd(0x04);
  4684   00269E  0E04               	movlw	4
  4685   0026A0  EC07  F013         	call	_Lcd_Cmd
  4686                           
  4687                           ;lcd.c: 178:     Lcd_Cmd(0x00);
  4688   0026A4  0E00               	movlw	0
  4689   0026A6  EC07  F013         	call	_Lcd_Cmd
  4690   0026AA  0012               	return		;funcret
  4691   0026AC                     __end_of_Lcd_CGRAM_Init:
  4692                           	callstack 0
  4693                           
  4694 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  4695 ;; Defined at:
  4696 ;;		line 136 in file "lcd.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  add             1    wreg     unsigned char 
  4699 ;;  chardata        2    4[BANK0 ] PTR const unsigned char 
  4700 ;;		 -> figura_8(8), figura_7(8), figura_6(8), figura_5(8), 
  4701 ;;		 -> figura_4(8), figura_3(8), figura_2(8), figura_1(8), 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  add             1   10[BANK0 ] unsigned char 
  4704 ;;  i               1   18[BANK0 ] unsigned char 
  4705 ;;  i               1   17[BANK0 ] unsigned char 
  4706 ;;  i               1   16[BANK0 ] unsigned char 
  4707 ;;  i               1   15[BANK0 ] unsigned char 
  4708 ;;  i               1   14[BANK0 ] unsigned char 
  4709 ;;  i               1   13[BANK0 ] unsigned char 
  4710 ;;  i               1   12[BANK0 ] unsigned char 
  4711 ;;  i               1   11[BANK0 ] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4721 ;;      Params:         0       2       0       0       0       0       0       0       0
  4722 ;;      Locals:         0       9       0       0       0       0       0       0       0
  4723 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4724 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4725 ;;Total ram usage:       15 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 9
  4728 ;; This function calls:
  4729 ;;		_Lcd_Write_Char
  4730 ;; This function is called by:
  4731 ;;		_Welcome
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text19
  4736   00138E                     __ptext19:
  4737                           	callstack 0
  4738   00138E                     _Lcd_CGRAM_CreateChar:
  4739                           	callstack 20
  4740                           
  4741                           ;incstack = 0
  4742                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  4743   00138E  0100               	movlb	0	; () banked
  4744   001390  6F6A               	movwf	Lcd_CGRAM_CreateChar@add& (0+255),b
  4745   001392                     
  4746                           ;lcd.c: 136: void Lcd_CGRAM_CreateChar(char add, const char* chardata);lcd.c: 137: {;lcd
      +                          .c: 138:     switch(add)
  4747   001392  EFD5  F00A         	goto	l3189
  4748   001396                     l3091:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;lcd.c: 141:             for(char i=0; i<=7; i++)
  4752   001396  0E00               	movlw	0
  4753   001398  6F6B               	movwf	Lcd_CGRAM_CreateChar@i& (0+255),b
  4754   00139A                     l3097:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;lcd.c: 142:                 Lcd_Write_Char(chardata[i]);
  4758   00139A  516B               	movf	Lcd_CGRAM_CreateChar@i& (0+255),w,b
  4759   00139C  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4760   00139E  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4761   0013A0  0E00               	movlw	0
  4762   0013A2  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4763   0013A4  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4764   0013A6  C066  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  4765   0013AA  C067  FFF7         	movff	??_Lcd_CGRAM_CreateChar+1,tblptrh
  4766   0013AE                     	if	0	;tblptru may be non-zero
  4767   0013AE                     	endif
  4768   0013AE                     	if	0	;tblptru may be non-zero
  4769   0013AE                     	endif
  4770   0013AE  0008               	tblrd		*
  4771   0013B0  50F5               	movf	tablat,w,c
  4772   0013B2  EC83  F012         	call	_Lcd_Write_Char
  4773   0013B6  0100               	movlb	0	; () banked
  4774   0013B8  2B6B               	incf	Lcd_CGRAM_CreateChar@i& (0+255),f,b
  4775   0013BA                     
  4776                           ; BSR set to: 0
  4777   0013BA  0E07               	movlw	7
  4778   0013BC  656B               	cpfsgt	Lcd_CGRAM_CreateChar@i& (0+255),b
  4779   0013BE  EFE3  F009         	goto	u2211
  4780   0013C2  EFE5  F009         	goto	u2210
  4781   0013C6                     u2211:
  4782   0013C6  EFCD  F009         	goto	l3097
  4783   0013CA                     u2210:
  4784   0013CA  EFF9  F00A         	goto	l310
  4785   0013CE                     l3103:
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;lcd.c: 145:             for(char i=8; i<=15; i++)
  4789   0013CE  0E08               	movlw	8
  4790   0013D0  6F6C               	movwf	Lcd_CGRAM_CreateChar@i_768& (0+255),b
  4791   0013D2                     l3109:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;lcd.c: 146:                 Lcd_Write_Char(chardata[i-8]);
  4795   0013D2  516C               	movf	Lcd_CGRAM_CreateChar@i_768& (0+255),w,b
  4796   0013D4  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4797   0013D6  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4798   0013D8  0E00               	movlw	0
  4799   0013DA  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4800   0013DC  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4801   0013DE  0EF8               	movlw	248
  4802   0013E0  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4803   0013E2  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4804   0013E4  0EFF               	movlw	255
  4805   0013E6  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4806   0013E8  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4807   0013EA  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4808   0013EE  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4809   0013F2                     	if	0	;tblptru may be non-zero
  4810   0013F2                     	endif
  4811   0013F2                     	if	0	;tblptru may be non-zero
  4812   0013F2                     	endif
  4813   0013F2  0008               	tblrd		*
  4814   0013F4  50F5               	movf	tablat,w,c
  4815   0013F6  EC83  F012         	call	_Lcd_Write_Char
  4816   0013FA  0100               	movlb	0	; () banked
  4817   0013FC  2B6C               	incf	Lcd_CGRAM_CreateChar@i_768& (0+255),f,b
  4818   0013FE                     
  4819                           ; BSR set to: 0
  4820   0013FE  0E0F               	movlw	15
  4821   001400  656C               	cpfsgt	Lcd_CGRAM_CreateChar@i_768& (0+255),b
  4822   001402  EF05  F00A         	goto	u2221
  4823   001406  EF07  F00A         	goto	u2220
  4824   00140A                     u2221:
  4825   00140A  EFE9  F009         	goto	l3109
  4826   00140E                     u2220:
  4827   00140E  EFF9  F00A         	goto	l310
  4828   001412                     l3115:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;lcd.c: 149:             for(char i=16; i<=23; i++)
  4832   001412  0E10               	movlw	16
  4833   001414  6F6D               	movwf	Lcd_CGRAM_CreateChar@i_769& (0+255),b
  4834   001416                     l3121:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;lcd.c: 150:                 Lcd_Write_Char(chardata[i-16]);
  4838   001416  516D               	movf	Lcd_CGRAM_CreateChar@i_769& (0+255),w,b
  4839   001418  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4840   00141A  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4841   00141C  0E00               	movlw	0
  4842   00141E  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4843   001420  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4844   001422  0EF0               	movlw	240
  4845   001424  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4846   001426  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4847   001428  0EFF               	movlw	255
  4848   00142A  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4849   00142C  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4850   00142E  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4851   001432  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4852   001436                     	if	0	;tblptru may be non-zero
  4853   001436                     	endif
  4854   001436                     	if	0	;tblptru may be non-zero
  4855   001436                     	endif
  4856   001436  0008               	tblrd		*
  4857   001438  50F5               	movf	tablat,w,c
  4858   00143A  EC83  F012         	call	_Lcd_Write_Char
  4859   00143E  0100               	movlb	0	; () banked
  4860   001440  2B6D               	incf	Lcd_CGRAM_CreateChar@i_769& (0+255),f,b
  4861   001442                     
  4862                           ; BSR set to: 0
  4863   001442  0E17               	movlw	23
  4864   001444  656D               	cpfsgt	Lcd_CGRAM_CreateChar@i_769& (0+255),b
  4865   001446  EF27  F00A         	goto	u2231
  4866   00144A  EF29  F00A         	goto	u2230
  4867   00144E                     u2231:
  4868   00144E  EF0B  F00A         	goto	l3121
  4869   001452                     u2230:
  4870   001452  EFF9  F00A         	goto	l310
  4871   001456                     l3127:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;lcd.c: 153:             for(char i=24; i<=31; i++)
  4875   001456  0E18               	movlw	24
  4876   001458  6F6E               	movwf	Lcd_CGRAM_CreateChar@i_770& (0+255),b
  4877   00145A                     l3133:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;lcd.c: 154:                 Lcd_Write_Char(chardata[i-24]);
  4881   00145A  516E               	movf	Lcd_CGRAM_CreateChar@i_770& (0+255),w,b
  4882   00145C  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4883   00145E  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4884   001460  0E00               	movlw	0
  4885   001462  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4886   001464  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4887   001466  0EE8               	movlw	232
  4888   001468  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4889   00146A  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4890   00146C  0EFF               	movlw	255
  4891   00146E  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4892   001470  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4893   001472  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4894   001476  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4895   00147A                     	if	0	;tblptru may be non-zero
  4896   00147A                     	endif
  4897   00147A                     	if	0	;tblptru may be non-zero
  4898   00147A                     	endif
  4899   00147A  0008               	tblrd		*
  4900   00147C  50F5               	movf	tablat,w,c
  4901   00147E  EC83  F012         	call	_Lcd_Write_Char
  4902   001482  0100               	movlb	0	; () banked
  4903   001484  2B6E               	incf	Lcd_CGRAM_CreateChar@i_770& (0+255),f,b
  4904   001486                     
  4905                           ; BSR set to: 0
  4906   001486  0E1F               	movlw	31
  4907   001488  656E               	cpfsgt	Lcd_CGRAM_CreateChar@i_770& (0+255),b
  4908   00148A  EF49  F00A         	goto	u2241
  4909   00148E  EF4B  F00A         	goto	u2240
  4910   001492                     u2241:
  4911   001492  EF2D  F00A         	goto	l3133
  4912   001496                     u2240:
  4913   001496  EFF9  F00A         	goto	l310
  4914   00149A                     l3139:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;lcd.c: 157:             for(char i=32; i<=39; i++)
  4918   00149A  0E20               	movlw	32
  4919   00149C  6F6F               	movwf	Lcd_CGRAM_CreateChar@i_771& (0+255),b
  4920   00149E                     l3145:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;lcd.c: 158:                 Lcd_Write_Char(chardata[i-32]);
  4924   00149E  516F               	movf	Lcd_CGRAM_CreateChar@i_771& (0+255),w,b
  4925   0014A0  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4926   0014A2  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4927   0014A4  0E00               	movlw	0
  4928   0014A6  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4929   0014A8  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4930   0014AA  0EE0               	movlw	224
  4931   0014AC  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4932   0014AE  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4933   0014B0  0EFF               	movlw	255
  4934   0014B2  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4935   0014B4  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4936   0014B6  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4937   0014BA  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4938   0014BE                     	if	0	;tblptru may be non-zero
  4939   0014BE                     	endif
  4940   0014BE                     	if	0	;tblptru may be non-zero
  4941   0014BE                     	endif
  4942   0014BE  0008               	tblrd		*
  4943   0014C0  50F5               	movf	tablat,w,c
  4944   0014C2  EC83  F012         	call	_Lcd_Write_Char
  4945   0014C6  0100               	movlb	0	; () banked
  4946   0014C8  2B6F               	incf	Lcd_CGRAM_CreateChar@i_771& (0+255),f,b
  4947   0014CA                     
  4948                           ; BSR set to: 0
  4949   0014CA  0E27               	movlw	39
  4950   0014CC  656F               	cpfsgt	Lcd_CGRAM_CreateChar@i_771& (0+255),b
  4951   0014CE  EF6B  F00A         	goto	u2251
  4952   0014D2  EF6D  F00A         	goto	u2250
  4953   0014D6                     u2251:
  4954   0014D6  EF4F  F00A         	goto	l3145
  4955   0014DA                     u2250:
  4956   0014DA  EFF9  F00A         	goto	l310
  4957   0014DE                     l3151:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;lcd.c: 161:             for(char i=40; i<=47; i++)
  4961   0014DE  0E28               	movlw	40
  4962   0014E0  6F70               	movwf	Lcd_CGRAM_CreateChar@i_772& (0+255),b
  4963   0014E2                     l3157:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;lcd.c: 162:                 Lcd_Write_Char(chardata[i-40]);
  4967   0014E2  5170               	movf	Lcd_CGRAM_CreateChar@i_772& (0+255),w,b
  4968   0014E4  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4969   0014E6  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4970   0014E8  0E00               	movlw	0
  4971   0014EA  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4972   0014EC  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4973   0014EE  0ED8               	movlw	216
  4974   0014F0  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4975   0014F2  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4976   0014F4  0EFF               	movlw	255
  4977   0014F6  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4978   0014F8  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4979   0014FA  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4980   0014FE  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4981   001502                     	if	0	;tblptru may be non-zero
  4982   001502                     	endif
  4983   001502                     	if	0	;tblptru may be non-zero
  4984   001502                     	endif
  4985   001502  0008               	tblrd		*
  4986   001504  50F5               	movf	tablat,w,c
  4987   001506  EC83  F012         	call	_Lcd_Write_Char
  4988   00150A  0100               	movlb	0	; () banked
  4989   00150C  2B70               	incf	Lcd_CGRAM_CreateChar@i_772& (0+255),f,b
  4990   00150E                     
  4991                           ; BSR set to: 0
  4992   00150E  0E2F               	movlw	47
  4993   001510  6570               	cpfsgt	Lcd_CGRAM_CreateChar@i_772& (0+255),b
  4994   001512  EF8D  F00A         	goto	u2261
  4995   001516  EF8F  F00A         	goto	u2260
  4996   00151A                     u2261:
  4997   00151A  EF71  F00A         	goto	l3157
  4998   00151E                     u2260:
  4999   00151E  EFF9  F00A         	goto	l310
  5000   001522                     l3163:
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;lcd.c: 165:             for(char i=48; i<=55; i++)
  5004   001522  0E30               	movlw	48
  5005   001524  6F71               	movwf	Lcd_CGRAM_CreateChar@i_773& (0+255),b
  5006   001526                     l3169:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;lcd.c: 166:                 Lcd_Write_Char(chardata[i-48]);
  5010   001526  5171               	movf	Lcd_CGRAM_CreateChar@i_773& (0+255),w,b
  5011   001528  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  5012   00152A  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  5013   00152C  0E00               	movlw	0
  5014   00152E  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  5015   001530  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  5016   001532  0ED0               	movlw	208
  5017   001534  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  5018   001536  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  5019   001538  0EFF               	movlw	255
  5020   00153A  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  5021   00153C  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  5022   00153E  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  5023   001542  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  5024   001546                     	if	0	;tblptru may be non-zero
  5025   001546                     	endif
  5026   001546                     	if	0	;tblptru may be non-zero
  5027   001546                     	endif
  5028   001546  0008               	tblrd		*
  5029   001548  50F5               	movf	tablat,w,c
  5030   00154A  EC83  F012         	call	_Lcd_Write_Char
  5031   00154E  0100               	movlb	0	; () banked
  5032   001550  2B71               	incf	Lcd_CGRAM_CreateChar@i_773& (0+255),f,b
  5033   001552                     
  5034                           ; BSR set to: 0
  5035   001552  0E37               	movlw	55
  5036   001554  6571               	cpfsgt	Lcd_CGRAM_CreateChar@i_773& (0+255),b
  5037   001556  EFAF  F00A         	goto	u2271
  5038   00155A  EFB1  F00A         	goto	u2270
  5039   00155E                     u2271:
  5040   00155E  EF93  F00A         	goto	l3169
  5041   001562                     u2270:
  5042   001562  EFF9  F00A         	goto	l310
  5043   001566                     l3175:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;lcd.c: 169:             for(char i=56; i<=63; i++)
  5047   001566  0E38               	movlw	56
  5048   001568  6F72               	movwf	Lcd_CGRAM_CreateChar@i_774& (0+255),b
  5049   00156A                     l3181:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;lcd.c: 170:                 Lcd_Write_Char(chardata[i-56]);
  5053   00156A  5172               	movf	Lcd_CGRAM_CreateChar@i_774& (0+255),w,b
  5054   00156C  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  5055   00156E  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  5056   001570  0E00               	movlw	0
  5057   001572  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  5058   001574  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  5059   001576  0EC8               	movlw	200
  5060   001578  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  5061   00157A  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  5062   00157C  0EFF               	movlw	255
  5063   00157E  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  5064   001580  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  5065   001582  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  5066   001586  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  5067   00158A                     	if	0	;tblptru may be non-zero
  5068   00158A                     	endif
  5069   00158A                     	if	0	;tblptru may be non-zero
  5070   00158A                     	endif
  5071   00158A  0008               	tblrd		*
  5072   00158C  50F5               	movf	tablat,w,c
  5073   00158E  EC83  F012         	call	_Lcd_Write_Char
  5074   001592  0100               	movlb	0	; () banked
  5075   001594  2B72               	incf	Lcd_CGRAM_CreateChar@i_774& (0+255),f,b
  5076   001596                     
  5077                           ; BSR set to: 0
  5078   001596  0E3F               	movlw	63
  5079   001598  6572               	cpfsgt	Lcd_CGRAM_CreateChar@i_774& (0+255),b
  5080   00159A  EFD1  F00A         	goto	u2281
  5081   00159E  EFD3  F00A         	goto	u2280
  5082   0015A2                     u2281:
  5083   0015A2  EFB5  F00A         	goto	l3181
  5084   0015A6                     u2280:
  5085   0015A6  EFF9  F00A         	goto	l310
  5086   0015AA                     l3189:
  5087   0015AA  0100               	movlb	0	; () banked
  5088   0015AC  516A               	movf	Lcd_CGRAM_CreateChar@add& (0+255),w,b
  5089                           
  5090                           ; Switch size 1, requested type "simple"
  5091                           ; Number of cases is 8, Range of values is 0 to 7
  5092                           ; switch strategies available:
  5093                           ; Name         Instructions Cycles
  5094                           ; simple_byte           25    13 (average)
  5095                           ;	Chosen strategy is simple_byte
  5096   0015AE  0A00               	xorlw	0	; case 0
  5097   0015B0  B4D8               	btfsc	status,2,c
  5098   0015B2  EFCB  F009         	goto	l3091
  5099   0015B6  0A01               	xorlw	1	; case 1
  5100   0015B8  B4D8               	btfsc	status,2,c
  5101   0015BA  EFE7  F009         	goto	l3103
  5102   0015BE  0A03               	xorlw	3	; case 2
  5103   0015C0  B4D8               	btfsc	status,2,c
  5104   0015C2  EF09  F00A         	goto	l3115
  5105   0015C6  0A01               	xorlw	1	; case 3
  5106   0015C8  B4D8               	btfsc	status,2,c
  5107   0015CA  EF2B  F00A         	goto	l3127
  5108   0015CE  0A07               	xorlw	7	; case 4
  5109   0015D0  B4D8               	btfsc	status,2,c
  5110   0015D2  EF4D  F00A         	goto	l3139
  5111   0015D6  0A01               	xorlw	1	; case 5
  5112   0015D8  B4D8               	btfsc	status,2,c
  5113   0015DA  EF6F  F00A         	goto	l3151
  5114   0015DE  0A03               	xorlw	3	; case 6
  5115   0015E0  B4D8               	btfsc	status,2,c
  5116   0015E2  EF91  F00A         	goto	l3163
  5117   0015E6  0A01               	xorlw	1	; case 7
  5118   0015E8  B4D8               	btfsc	status,2,c
  5119   0015EA  EFB3  F00A         	goto	l3175
  5120   0015EE  EFF9  F00A         	goto	l310
  5121   0015F2                     l310:
  5122                           
  5123                           ; BSR set to: 0
  5124   0015F2  0012               	return		;funcret
  5125   0015F4                     __end_of_Lcd_CGRAM_CreateChar:
  5126                           	callstack 0
  5127                           
  5128 ;; *************** function _Lcd_Write_Char *****************
  5129 ;; Defined at:
  5130 ;;		line 88 in file "lcd.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  a               1    wreg     unsigned char 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  a               1    3[BANK0 ] unsigned char 
  5135 ;;  y               1    2[BANK0 ] unsigned char 
  5136 ;;  temp            1    1[BANK0 ] unsigned char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5146 ;;      Params:         0       0       0       0       0       0       0       0       0
  5147 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5149 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5150 ;;Total ram usage:        3 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 8
  5153 ;; This function calls:
  5154 ;;		_Lcd_Port
  5155 ;; This function is called by:
  5156 ;;		_Lcd_Write_String
  5157 ;;		_Lcd_CGRAM_CreateChar
  5158 ;;		_Welcome
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text20
  5163   002506                     __ptext20:
  5164                           	callstack 0
  5165   002506                     _Lcd_Write_Char:
  5166                           	callstack 20
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;incstack = 0
  5170                           ;Lcd_Write_Char@a stored from wreg
  5171   002506  0100               	movlb	0	; () banked
  5172   002508  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
  5173   00250A                     
  5174                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  5175   00250A  0100               	movlb	0	; () banked
  5176   00250C  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
  5177   00250E  0B0F               	andlw	15
  5178   002510  6F61               	movwf	Lcd_Write_Char@temp& (0+255),b
  5179                           
  5180                           ;lcd.c: 92:     y = a&0xF0;
  5181   002512  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
  5182   002514  0BF0               	andlw	240
  5183   002516  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
  5184   002518                     
  5185                           ; BSR set to: 0
  5186                           ;lcd.c: 93:     LATAbits.LA4 = 1;
  5187   002518  8889               	bsf	137,4,c	;volatile
  5188   00251A                     
  5189                           ; BSR set to: 0
  5190                           ;lcd.c: 94:     Lcd_Port(y>>4);
  5191   00251A  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
  5192   00251C  0B0F               	andlw	15
  5193   00251E  EC7F  F011         	call	_Lcd_Port
  5194   002522                     
  5195                           ;lcd.c: 95:     LATAbits.LA5 = 1;
  5196   002522  8A89               	bsf	137,5,c	;volatile
  5197   002524                     
  5198                           ;lcd.c: 96:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  5199   002524  0E1A               	movlw	26
  5200   002526                     u3257:
  5201   002526  2EE8               	decfsz	wreg,f,c
  5202   002528  D7FE               	bra	u3257
  5203   00252A  D000               	nop2	
  5204   00252C                     
  5205                           ;lcd.c: 97:     LATAbits.LA5 = 0;
  5206   00252C  9A89               	bcf	137,5,c	;volatile
  5207   00252E                     
  5208                           ;lcd.c: 98:     Lcd_Port(temp);
  5209   00252E  0100               	movlb	0	; () banked
  5210   002530  5161               	movf	Lcd_Write_Char@temp& (0+255),w,b
  5211   002532  EC7F  F011         	call	_Lcd_Port
  5212   002536                     
  5213                           ;lcd.c: 99:     LATAbits.LA5 = 1;
  5214   002536  8A89               	bsf	137,5,c	;volatile
  5215   002538                     
  5216                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  5217   002538  0E1A               	movlw	26
  5218   00253A                     u3267:
  5219   00253A  2EE8               	decfsz	wreg,f,c
  5220   00253C  D7FE               	bra	u3267
  5221   00253E  D000               	nop2	
  5222   002540                     
  5223                           ;lcd.c: 101:     LATAbits.LA5 = 0;
  5224   002540  9A89               	bcf	137,5,c	;volatile
  5225   002542  0012               	return		;funcret
  5226   002544                     __end_of_Lcd_Write_Char:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function _Lcd_CGRAM_Close *****************
  5230 ;; Defined at:
  5231 ;;		line 181 in file "lcd.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;		None
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      void 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5245 ;;      Params:         0       0       0       0       0       0       0       0       0
  5246 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5248 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5249 ;;Total ram usage:        0 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 9
  5252 ;; This function calls:
  5253 ;;		_Lcd_Cmd
  5254 ;; This function is called by:
  5255 ;;		_Welcome
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text21
  5260   0026AC                     __ptext21:
  5261                           	callstack 0
  5262   0026AC                     _Lcd_CGRAM_Close:
  5263                           	callstack 20
  5264   0026AC                     
  5265                           ;lcd.c: 183:     Lcd_Cmd(0x00);
  5266   0026AC  0E00               	movlw	0
  5267   0026AE  EC07  F013         	call	_Lcd_Cmd
  5268                           
  5269                           ;lcd.c: 184:     Lcd_Cmd(0x02);
  5270   0026B2  0E02               	movlw	2
  5271   0026B4  EC07  F013         	call	_Lcd_Cmd
  5272   0026B8  0012               	return		;funcret
  5273   0026BA                     __end_of_Lcd_CGRAM_Close:
  5274                           	callstack 0
  5275                           
  5276 ;; *************** function _RGB_BCD *****************
  5277 ;; Defined at:
  5278 ;;		line 29 in file "RGB_BCD.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  count_En        2    0[BANK0 ] int 
  5281 ;;  contador        1    2[BANK0 ] PTR int 
  5282 ;;		 -> contador(2), 
  5283 ;;  contador_dec    1    3[BANK0 ] PTR int 
  5284 ;;		 -> contador_dec(2), 
  5285 ;;  re_pcs          1    4[BANK0 ] PTR int 
  5286 ;;		 -> re_pcs(2), 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5298 ;;      Params:         0       5       0       0       0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5300 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5301 ;;      Totals:         0       7       0       0       0       0       0       0       0
  5302 ;;Total ram usage:        7 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; Hardware stack levels required when called: 7
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_main
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text22
  5313   0019C0                     __ptext22:
  5314                           	callstack 0
  5315   0019C0                     _RGB_BCD:
  5316                           	callstack 23
  5317   0019C0                     
  5318                           ;RGB_BCD.c: 29: void RGB_BCD(int count_En,int *contador, int *contador_dec, int*re_pcs )
      +                          ;RGB_BCD.c: 30: {;RGB_BCD.c: 33:     LATD = (*contador);
  5319   0019C0  0100               	movlb	0	; () banked
  5320   0019C2  5162               	movf	RGB_BCD@contador& (0+255),w,b
  5321   0019C4  6ED9               	movwf	fsr2l,c
  5322   0019C6  6ADA               	clrf	fsr2h,c
  5323   0019C8  50DF               	movf	indf2,w,c
  5324   0019CA  6E8C               	movwf	140,c	;volatile
  5325   0019CC                     
  5326                           ; BSR set to: 0
  5327                           ;RGB_BCD.c: 35:     if(PORTCbits.RC1 == 1 && count_En==1 )
  5328   0019CC  A282               	btfss	130,1,c	;volatile
  5329   0019CE  EFEB  F00C         	goto	u2361
  5330   0019D2  EFED  F00C         	goto	u2360
  5331   0019D6                     u2361:
  5332   0019D6  EF7E  F00D         	goto	l411
  5333   0019DA                     u2360:
  5334   0019DA                     
  5335                           ; BSR set to: 0
  5336   0019DA  0560               	decf	RGB_BCD@count_En& (0+255),w,b
  5337   0019DC  1161               	iorwf	(RGB_BCD@count_En+1)& (0+255),w,b
  5338   0019DE  A4D8               	btfss	status,2,c
  5339   0019E0  EFF4  F00C         	goto	u2371
  5340   0019E4  EFF6  F00C         	goto	u2370
  5341   0019E8                     u2371:
  5342   0019E8  EF7E  F00D         	goto	l411
  5343   0019EC                     u2370:
  5344   0019EC  EF01  F00D         	goto	l3467
  5345   0019F0                     l3465:
  5346                           
  5347                           ;RGB_BCD.c: 38:               {;RGB_BCD.c: 39:                 _delay((unsigned long)((1
      +                          0)*(8000000UL/4000.0)));
  5348   0019F0  0E1A               	movlw	26
  5349   0019F2  0100               	movlb	0	; () banked
  5350   0019F4  6F65               	movwf	??_RGB_BCD& (0+255),b
  5351   0019F6  0EF8               	movlw	248
  5352   0019F8                     u3277:
  5353   0019F8  2EE8               	decfsz	wreg,f,c
  5354   0019FA  D7FE               	bra	u3277
  5355   0019FC  2F65               	decfsz	??_RGB_BCD& (0+255),f,b
  5356   0019FE  D7FC               	bra	u3277
  5357   001A00  0000               	nop	
  5358   001A02                     l3467:
  5359                           
  5360                           ;RGB_BCD.c: 37:             while(PORTCbits.RC1 == 1)
  5361   001A02  B282               	btfsc	130,1,c	;volatile
  5362   001A04  EF06  F00D         	goto	u2381
  5363   001A08  EF08  F00D         	goto	u2380
  5364   001A0C                     u2381:
  5365   001A0C  EFF8  F00C         	goto	l3465
  5366   001A10                     u2380:
  5367   001A10                     
  5368                           ;RGB_BCD.c: 41:             (*contador)++;
  5369   001A10  0100               	movlb	0	; () banked
  5370   001A12  5162               	movf	RGB_BCD@contador& (0+255),w,b
  5371   001A14  6ED9               	movwf	fsr2l,c
  5372   001A16  6ADA               	clrf	fsr2h,c
  5373   001A18  2ADE               	incf	postinc2,f,c
  5374   001A1A  0E00               	movlw	0
  5375   001A1C  22DD               	addwfc	postdec2,f,c
  5376                           
  5377                           ;RGB_BCD.c: 42:             (*re_pcs)--;
  5378   001A1E  5164               	movf	RGB_BCD@re_pcs& (0+255),w,b
  5379   001A20  6ED9               	movwf	fsr2l,c
  5380   001A22  6ADA               	clrf	fsr2h,c
  5381   001A24  06DE               	decf	postinc2,f,c
  5382   001A26  0E00               	movlw	0
  5383   001A28  5ADD               	subwfb	postdec2,f,c
  5384                           
  5385                           ;RGB_BCD.c: 44:             if((*contador) > 9)
  5386   001A2A  5162               	movf	RGB_BCD@contador& (0+255),w,b
  5387   001A2C  6ED9               	movwf	fsr2l,c
  5388   001A2E  6ADA               	clrf	fsr2h,c
  5389   001A30  0E01               	movlw	1
  5390   001A32  BEDB               	btfsc	plusw2,7,c
  5391   001A34  EF26  F00D         	goto	u2391
  5392   001A38  0E01               	movlw	1
  5393   001A3A  50DB               	movf	plusw2,w,c
  5394   001A3C  E109               	bnz	u2390
  5395   001A3E  0E0A               	movlw	10
  5396   001A40  5CDE               	subwf	postinc2,w,c
  5397   001A42  A0D8               	btfss	status,0,c
  5398   001A44  EF26  F00D         	goto	u2391
  5399   001A48  EF28  F00D         	goto	u2390
  5400   001A4C                     u2391:
  5401   001A4C  EF7E  F00D         	goto	l411
  5402   001A50                     u2390:
  5403   001A50                     
  5404                           ; BSR set to: 0
  5405                           ;RGB_BCD.c: 45:               {;RGB_BCD.c: 46:                 (*contador) = 0;
  5406   001A50  5162               	movf	RGB_BCD@contador& (0+255),w,b
  5407   001A52  6ED9               	movwf	fsr2l,c
  5408   001A54  6ADA               	clrf	fsr2h,c
  5409   001A56  6ADE               	clrf	postinc2,c
  5410   001A58  6ADD               	clrf	postdec2,c
  5411   001A5A                     
  5412                           ; BSR set to: 0
  5413                           ;RGB_BCD.c: 47:                 (*contador_dec)++;
  5414   001A5A  5163               	movf	RGB_BCD@contador_dec& (0+255),w,b
  5415   001A5C  6ED9               	movwf	fsr2l,c
  5416   001A5E  6ADA               	clrf	fsr2h,c
  5417   001A60  2ADE               	incf	postinc2,f,c
  5418   001A62  0E00               	movlw	0
  5419   001A64  22DD               	addwfc	postdec2,f,c
  5420                           
  5421                           ;RGB_BCD.c: 48:                 switch(*contador_dec)
  5422   001A66  EF51  F00D         	goto	l3493
  5423   001A6A                     l3475:
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;RGB_BCD.c: 51:                     LATE=Negro;
  5427   001A6A  0E07               	movlw	7
  5428   001A6C  6E8D               	movwf	141,c	;volatile
  5429                           
  5430                           ;RGB_BCD.c: 52:                   break;
  5431   001A6E  EF7E  F00D         	goto	l411
  5432   001A72                     l3477:
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;RGB_BCD.c: 55:                     LATE=magenta;
  5436   001A72  0E02               	movlw	2
  5437   001A74  6E8D               	movwf	141,c	;volatile
  5438                           
  5439                           ;RGB_BCD.c: 56:                   break;
  5440   001A76  EF7E  F00D         	goto	l411
  5441   001A7A                     l3479:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;RGB_BCD.c: 59:                     LATE=azul;
  5445   001A7A  0E03               	movlw	3
  5446   001A7C  6E8D               	movwf	141,c	;volatile
  5447                           
  5448                           ;RGB_BCD.c: 60:                   break;
  5449   001A7E  EF7E  F00D         	goto	l411
  5450   001A82                     l3481:
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;RGB_BCD.c: 63:                     LATE=cyan;
  5454   001A82  0E01               	movlw	1
  5455   001A84  6E8D               	movwf	141,c	;volatile
  5456                           
  5457                           ;RGB_BCD.c: 64:                   break;
  5458   001A86  EF7E  F00D         	goto	l411
  5459   001A8A                     l3483:
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;RGB_BCD.c: 67:                     LATE=verde;
  5463   001A8A  0E05               	movlw	5
  5464   001A8C  6E8D               	movwf	141,c	;volatile
  5465                           
  5466                           ;RGB_BCD.c: 68:                   break;
  5467   001A8E  EF7E  F00D         	goto	l411
  5468   001A92                     l3485:
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;RGB_BCD.c: 71:                     LATE=amarillo;
  5472   001A92  0E04               	movlw	4
  5473   001A94  6E8D               	movwf	141,c	;volatile
  5474                           
  5475                           ;RGB_BCD.c: 72:                   break;
  5476   001A96  EF7E  F00D         	goto	l411
  5477   001A9A                     l3487:
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;RGB_BCD.c: 75:                     LATE=blanco;
  5481   001A9A  0E00               	movlw	0
  5482   001A9C  6E8D               	movwf	141,c	;volatile
  5483                           
  5484                           ;RGB_BCD.c: 76:                   break;
  5485   001A9E  EF7E  F00D         	goto	l411
  5486   001AA2                     l3493:
  5487                           
  5488                           ; BSR set to: 0
  5489   001AA2  5163               	movf	RGB_BCD@contador_dec& (0+255),w,b
  5490   001AA4  6ED9               	movwf	fsr2l,c
  5491   001AA6  6ADA               	clrf	fsr2h,c
  5492   001AA8  CFDE F065          	movff	postinc2,??_RGB_BCD
  5493   001AAC  CFDD F066          	movff	postdec2,??_RGB_BCD+1
  5494                           
  5495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5496                           ; Switch size 1, requested type "simple"
  5497                           ; Number of cases is 1, Range of values is 0 to 0
  5498                           ; switch strategies available:
  5499                           ; Name         Instructions Cycles
  5500                           ; simple_byte            4     3 (average)
  5501                           ;	Chosen strategy is simple_byte
  5502   001AB0  5166               	movf	(??_RGB_BCD+1)& (0+255),w,b
  5503   001AB2  0A00               	xorlw	0	; case 0
  5504   001AB4  B4D8               	btfsc	status,2,c
  5505   001AB6  EF5F  F00D         	goto	l4133
  5506   001ABA  EF35  F00D         	goto	l3475
  5507   001ABE                     l4133:
  5508                           
  5509                           ; BSR set to: 0
  5510                           ; Switch size 1, requested type "simple"
  5511                           ; Number of cases is 7, Range of values is 0 to 6
  5512                           ; switch strategies available:
  5513                           ; Name         Instructions Cycles
  5514                           ; simple_byte           22    12 (average)
  5515                           ;	Chosen strategy is simple_byte
  5516   001ABE  5165               	movf	??_RGB_BCD& (0+255),w,b
  5517   001AC0  0A00               	xorlw	0	; case 0
  5518   001AC2  B4D8               	btfsc	status,2,c
  5519   001AC4  EF35  F00D         	goto	l3475
  5520   001AC8  0A01               	xorlw	1	; case 1
  5521   001ACA  B4D8               	btfsc	status,2,c
  5522   001ACC  EF39  F00D         	goto	l3477
  5523   001AD0  0A03               	xorlw	3	; case 2
  5524   001AD2  B4D8               	btfsc	status,2,c
  5525   001AD4  EF3D  F00D         	goto	l3479
  5526   001AD8  0A01               	xorlw	1	; case 3
  5527   001ADA  B4D8               	btfsc	status,2,c
  5528   001ADC  EF41  F00D         	goto	l3481
  5529   001AE0  0A07               	xorlw	7	; case 4
  5530   001AE2  B4D8               	btfsc	status,2,c
  5531   001AE4  EF45  F00D         	goto	l3483
  5532   001AE8  0A01               	xorlw	1	; case 5
  5533   001AEA  B4D8               	btfsc	status,2,c
  5534   001AEC  EF49  F00D         	goto	l3485
  5535   001AF0  0A03               	xorlw	3	; case 6
  5536   001AF2  B4D8               	btfsc	status,2,c
  5537   001AF4  EF4D  F00D         	goto	l3487
  5538   001AF8  EF35  F00D         	goto	l3475
  5539   001AFC                     l411:
  5540                           
  5541                           ; BSR set to: 0
  5542   001AFC  0012               	return		;funcret
  5543   001AFE                     __end_of_RGB_BCD:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function _Lcd_NoBlink *****************
  5547 ;; Defined at:
  5548 ;;		line 129 in file "lcd.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, status,2, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5562 ;;      Params:         0       0       0       0       0       0       0       0       0
  5563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5565 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5566 ;;Total ram usage:        0 bytes
  5567 ;; Hardware stack levels used: 1
  5568 ;; Hardware stack levels required when called: 9
  5569 ;; This function calls:
  5570 ;;		_Lcd_Cmd
  5571 ;; This function is called by:
  5572 ;;		_main
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text23
  5577   0026BA                     __ptext23:
  5578                           	callstack 0
  5579   0026BA                     _Lcd_NoBlink:
  5580                           	callstack 21
  5581   0026BA                     
  5582                           ;lcd.c: 131:     Lcd_Cmd(0x00);
  5583   0026BA  0E00               	movlw	0
  5584   0026BC  EC07  F013         	call	_Lcd_Cmd
  5585                           
  5586                           ;lcd.c: 132:     Lcd_Cmd(0x0C);
  5587   0026C0  0E0C               	movlw	12
  5588   0026C2  EC07  F013         	call	_Lcd_Cmd
  5589   0026C6  0012               	return		;funcret
  5590   0026C8                     __end_of_Lcd_NoBlink:
  5591                           	callstack 0
  5592                           
  5593 ;; *************** function _Lcd_Blink *****************
  5594 ;; Defined at:
  5595 ;;		line 123 in file "lcd.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5609 ;;      Params:         0       0       0       0       0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5613 ;;Total ram usage:        0 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 9
  5616 ;; This function calls:
  5617 ;;		_Lcd_Cmd
  5618 ;; This function is called by:
  5619 ;;		_main
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text24
  5624   0026C8                     __ptext24:
  5625                           	callstack 0
  5626   0026C8                     _Lcd_Blink:
  5627                           	callstack 21
  5628   0026C8                     
  5629                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  5630   0026C8  0E00               	movlw	0
  5631   0026CA  EC07  F013         	call	_Lcd_Cmd
  5632                           
  5633                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  5634   0026CE  0E0F               	movlw	15
  5635   0026D0  EC07  F013         	call	_Lcd_Cmd
  5636   0026D4  0012               	return		;funcret
  5637   0026D6                     __end_of_Lcd_Blink:
  5638                           	callstack 0
  5639                           
  5640 ;; *************** function _Lcd_Cmd *****************
  5641 ;; Defined at:
  5642 ;;		line 11 in file "lcd.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  a               1    wreg     unsigned char 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  a               1    2[BANK0 ] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5656 ;;      Params:         0       0       0       0       0       0       0       0       0
  5657 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5658 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5659 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5660 ;;Total ram usage:        2 bytes
  5661 ;; Hardware stack levels used: 1
  5662 ;; Hardware stack levels required when called: 8
  5663 ;; This function calls:
  5664 ;;		_Lcd_Port
  5665 ;; This function is called by:
  5666 ;;		_Lcd_Clear
  5667 ;;		_Lcd_Set_Cursor
  5668 ;;		_Lcd_Init
  5669 ;;		_Lcd_Shift_Right
  5670 ;;		_Lcd_Shift_Left
  5671 ;;		_Lcd_Blink
  5672 ;;		_Lcd_NoBlink
  5673 ;;		_Lcd_CGRAM_Init
  5674 ;;		_Lcd_CGRAM_Close
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text25
  5679   00260E                     __ptext25:
  5680                           	callstack 0
  5681   00260E                     _Lcd_Cmd:
  5682                           	callstack 20
  5683                           
  5684                           ;incstack = 0
  5685                           ;Lcd_Cmd@a stored from wreg
  5686   00260E  0100               	movlb	0	; () banked
  5687   002610  6F62               	movwf	Lcd_Cmd@a& (0+255),b
  5688   002612                     
  5689                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATAbits.LA4 = 0;
  5690   002612  9889               	bcf	137,4,c	;volatile
  5691   002614                     
  5692                           ;lcd.c: 14:     Lcd_Port(a);
  5693   002614  0100               	movlb	0	; () banked
  5694   002616  5162               	movf	Lcd_Cmd@a& (0+255),w,b
  5695   002618  EC7F  F011         	call	_Lcd_Port
  5696   00261C                     
  5697                           ;lcd.c: 15:     LATAbits.LA5 = 1;
  5698   00261C  8A89               	bsf	137,5,c	;volatile
  5699   00261E                     
  5700                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  5701   00261E  0E0B               	movlw	11
  5702   002620  0100               	movlb	0	; () banked
  5703   002622  6F61               	movwf	??_Lcd_Cmd& (0+255),b
  5704   002624  0E62               	movlw	98
  5705   002626                     u3287:
  5706   002626  2EE8               	decfsz	wreg,f,c
  5707   002628  D7FE               	bra	u3287
  5708   00262A  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
  5709   00262C  D7FC               	bra	u3287
  5710   00262E  0000               	nop	
  5711   002630                     
  5712                           ;lcd.c: 17:     LATAbits.LA5 = 0;
  5713   002630  9A89               	bcf	137,5,c	;volatile
  5714   002632  0012               	return		;funcret
  5715   002634                     __end_of_Lcd_Cmd:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _Lcd_Port *****************
  5719 ;; Defined at:
  5720 ;;		line 3 in file "lcd.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  a               1    wreg     unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  a               1    0[BANK0 ] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0
  5735 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5737 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5738 ;;Total ram usage:        1 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 7
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_Lcd_Cmd
  5745 ;;		_Lcd_Init
  5746 ;;		_Lcd_Write_Char
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text26
  5751   0022FE                     __ptext26:
  5752                           	callstack 0
  5753   0022FE                     _Lcd_Port:
  5754                           	callstack 20
  5755                           
  5756                           ;incstack = 0
  5757                           ;Lcd_Port@a stored from wreg
  5758   0022FE  0100               	movlb	0	; () banked
  5759   002300  6F60               	movwf	Lcd_Port@a& (0+255),b
  5760   002302                     
  5761                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  5762   002302  0100               	movlb	0	; () banked
  5763   002304  A160               	btfss	Lcd_Port@a& (0+255),0,b
  5764   002306  EF87  F011         	goto	u1521
  5765   00230A  EF89  F011         	goto	u1520
  5766   00230E                     u1521:
  5767   00230E  EF8C  F011         	goto	l226
  5768   002312                     u1520:
  5769   002312                     
  5770                           ; BSR set to: 0
  5771   002312  888C               	bsf	140,4,c	;volatile
  5772   002314  EF8D  F011         	goto	l2657
  5773   002318                     l226:
  5774                           
  5775                           ; BSR set to: 0
  5776   002318  988C               	bcf	140,4,c	;volatile
  5777   00231A                     l2657:
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  5781   00231A  A360               	btfss	Lcd_Port@a& (0+255),1,b
  5782   00231C  EF92  F011         	goto	u1531
  5783   002320  EF94  F011         	goto	u1530
  5784   002324                     u1531:
  5785   002324  EF97  F011         	goto	l230
  5786   002328                     u1530:
  5787   002328                     
  5788                           ; BSR set to: 0
  5789   002328  8A8C               	bsf	140,5,c	;volatile
  5790   00232A  EF98  F011         	goto	l2661
  5791   00232E                     l230:
  5792                           
  5793                           ; BSR set to: 0
  5794   00232E  9A8C               	bcf	140,5,c	;volatile
  5795   002330                     l2661:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  5799   002330  A560               	btfss	Lcd_Port@a& (0+255),2,b
  5800   002332  EF9D  F011         	goto	u1541
  5801   002336  EF9F  F011         	goto	u1540
  5802   00233A                     u1541:
  5803   00233A  EFA2  F011         	goto	l234
  5804   00233E                     u1540:
  5805   00233E                     
  5806                           ; BSR set to: 0
  5807   00233E  8C8C               	bsf	140,6,c	;volatile
  5808   002340  EFA3  F011         	goto	l2665
  5809   002344                     l234:
  5810                           
  5811                           ; BSR set to: 0
  5812   002344  9C8C               	bcf	140,6,c	;volatile
  5813   002346                     l2665:
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  5817   002346  A760               	btfss	Lcd_Port@a& (0+255),3,b
  5818   002348  EFA8  F011         	goto	u1551
  5819   00234C  EFAA  F011         	goto	u1550
  5820   002350                     u1551:
  5821   002350  EFAD  F011         	goto	l238
  5822   002354                     u1550:
  5823   002354                     
  5824                           ; BSR set to: 0
  5825   002354  8E8C               	bsf	140,7,c	;volatile
  5826   002356  EFAE  F011         	goto	l241
  5827   00235A                     l238:
  5828                           
  5829                           ; BSR set to: 0
  5830   00235A  9E8C               	bcf	140,7,c	;volatile
  5831   00235C                     l241:
  5832                           
  5833                           ; BSR set to: 0
  5834   00235C  0012               	return		;funcret
  5835   00235E                     __end_of_Lcd_Port:
  5836                           	callstack 0
  5837                           
  5838 ;; *************** function _LOW_PRIORITY *****************
  5839 ;; Defined at:
  5840 ;;		line 239 in file "LAB4.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5854 ;;      Params:         0       0       0       0       0       0       0       0       0
  5855 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5856 ;;      Temps:         13       0       0       0       0       0       0       0       0
  5857 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5858 ;;Total ram usage:       13 bytes
  5859 ;; Hardware stack levels used: 1
  5860 ;; Hardware stack levels required when called: 6
  5861 ;; This function calls:
  5862 ;;		i1_Lcd_Blink
  5863 ;;		i1_Lcd_Clear
  5864 ;;		i1_Lcd_Set_Cursor
  5865 ;;		i1_Lcd_Write_String
  5866 ;;		i1_sprintf
  5867 ;; This function is called by:
  5868 ;;		Interrupt level 1
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	intcodelo
  5873   000018                     __pintcodelo:
  5874                           	callstack 0
  5875   000018                     _LOW_PRIORITY:
  5876                           	callstack 19
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;incstack = 0
  5880   000018  804F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5881   00001A  CFD8 F034          	movff	status,??_LOW_PRIORITY+2
  5882   00001E  CFE8 F035          	movff	wreg,??_LOW_PRIORITY+3
  5883   000022  CFE0 F036          	movff	bsr,??_LOW_PRIORITY+4
  5884   000026  CFE1 F037          	movff	fsr1l,??_LOW_PRIORITY+5
  5885   00002A  CFE2 F038          	movff	fsr1h,??_LOW_PRIORITY+6
  5886   00002E  CFD9 F039          	movff	fsr2l,??_LOW_PRIORITY+7
  5887   000032  CFDA F03A          	movff	fsr2h,??_LOW_PRIORITY+8
  5888   000036  CFF6 F03B          	movff	tblptrl,??_LOW_PRIORITY+9
  5889   00003A  CFF7 F03C          	movff	tblptrh,??_LOW_PRIORITY+10
  5890   00003E  CFF8 F03D          	movff	tblptru,??_LOW_PRIORITY+11
  5891   000042  CFF5 F03E          	movff	tablat,??_LOW_PRIORITY+12
  5892   000046                     
  5893                           ;LAB4.c: 243:         else
  5894   000046  A0F2               	btfss	242,0,c	;volatile
  5895   000048  EF28  F000         	goto	i1u257_21
  5896   00004C  EF2A  F000         	goto	i1u257_20
  5897   000050                     i1u257_21:
  5898   000050  EFD2  F004         	goto	i1l209
  5899   000054                     i1u257_20:
  5900   000054                     
  5901                           ;LAB4.c: 244:           {;LAB4.c: 245:           LATB=0b11111101;
  5902   000054  0EF0               	movlw	240
  5903   000056  1881               	xorwf	129,w,c	;volatile
  5904   000058  B4D8               	btfsc	status,2,c
  5905   00005A  EF31  F000         	goto	i1u258_21
  5906   00005E  EF33  F000         	goto	i1u258_20
  5907   000062                     i1u258_21:
  5908   000062  EFAD  F004         	goto	i1l4031
  5909   000066                     i1u258_20:
  5910   000066                     
  5911                           ;LAB4.c: 246:           if(PORTBbits.RB4==0) Tecla=5;;LAB4.c: 247:           else if(POR
      +                          TBbits.RB5==0)Tecla=6;
  5912   000066  0100               	movlb	0	; () banked
  5913   000068  05B8               	decf	_Borrado& (0+255),w,b
  5914   00006A  11B9               	iorwf	(_Borrado+1)& (0+255),w,b
  5915   00006C  A4D8               	btfss	status,2,c
  5916   00006E  EF3B  F000         	goto	i1u259_21
  5917   000072  EF3D  F000         	goto	i1u259_20
  5918   000076                     i1u259_21:
  5919   000076  EF45  F000         	goto	i1l139
  5920   00007A                     i1u259_20:
  5921   00007A                     
  5922                           ; BSR set to: 0
  5923                           ;LAB4.c: 248:           else if(PORTBbits.RB6==0)Tecla=7;;LAB4.c: 249:           else if
      +                          (PORTBbits.RB7==0)Tecla=8;
  5924   00007A  0E00               	movlw	0
  5925   00007C  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  5926   00007E  0E01               	movlw	1
  5927   000080  6FBA               	movwf	_Numpad_en& (0+255),b
  5928                           
  5929                           ;LAB4.c: 250:           else
  5930   000082  0E00               	movlw	0
  5931   000084  6FB9               	movwf	(_Borrado+1)& (0+255),b
  5932   000086  0E00               	movlw	0
  5933   000088  6FB8               	movwf	_Borrado& (0+255),b
  5934   00008A                     i1l139:
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;LAB4.c: 252:             LATB=0b11111011;
  5938   00008A  0E00               	movlw	0
  5939   00008C  6E42               	movwf	(_ok_flag+1)^0,c
  5940   00008E  0E00               	movlw	0
  5941   000090  6E41               	movwf	_ok_flag^0,c
  5942                           
  5943                           ;LAB4.c: 253:             if(PORTBbits.RB4==0) Tecla=9;
  5944   000092  0E00               	movlw	0
  5945   000094  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  5946   000096  0E00               	movlw	0
  5947   000098  6FBC               	movwf	_Enter_en& (0+255),b
  5948                           
  5949                           ;LAB4.c: 254:             else if (PORTBbits.RB5==0) Tecla=10;
  5950   00009A  0E00               	movlw	0
  5951   00009C  6E4D               	movwf	_Tecla^0,c
  5952                           
  5953                           ;LAB4.c: 255:             else if (PORTBbits.RB6==0) Tecla=11;
  5954   00009E  0EFE               	movlw	254
  5955   0000A0  6E8A               	movwf	138,c	;volatile
  5956   0000A2                     
  5957                           ; BSR set to: 0
  5958                           ;LAB4.c: 256:             else if (PORTBbits.RB7==0) Tecla=12;
  5959   0000A2  B881               	btfsc	129,4,c	;volatile
  5960   0000A4  EF56  F000         	goto	i1u260_21
  5961   0000A8  EF58  F000         	goto	i1u260_20
  5962   0000AC                     i1u260_21:
  5963   0000AC  EF5C  F000         	goto	i1l140
  5964   0000B0                     i1u260_20:
  5965   0000B0                     
  5966                           ; BSR set to: 0
  5967   0000B0  0E01               	movlw	1
  5968   0000B2  6E4D               	movwf	_Tecla^0,c
  5969   0000B4  EF07  F001         	goto	i1l3837
  5970   0000B8                     i1l140:
  5971                           
  5972                           ; BSR set to: 0
  5973   0000B8  BA81               	btfsc	129,5,c	;volatile
  5974   0000BA  EF61  F000         	goto	i1u261_21
  5975   0000BE  EF63  F000         	goto	i1u261_20
  5976   0000C2                     i1u261_21:
  5977   0000C2  EF67  F000         	goto	i1l142
  5978   0000C6                     i1u261_20:
  5979   0000C6                     
  5980                           ; BSR set to: 0
  5981   0000C6  0E02               	movlw	2
  5982   0000C8  6E4D               	movwf	_Tecla^0,c
  5983   0000CA  EF07  F001         	goto	i1l3837
  5984   0000CE                     i1l142:
  5985                           
  5986                           ; BSR set to: 0
  5987   0000CE  BC81               	btfsc	129,6,c	;volatile
  5988   0000D0  EF6C  F000         	goto	i1u262_21
  5989   0000D4  EF6E  F000         	goto	i1u262_20
  5990   0000D8                     i1u262_21:
  5991   0000D8  EF72  F000         	goto	i1l144
  5992   0000DC                     i1u262_20:
  5993   0000DC                     
  5994                           ; BSR set to: 0
  5995   0000DC  0E03               	movlw	3
  5996   0000DE  6E4D               	movwf	_Tecla^0,c
  5997   0000E0  EF07  F001         	goto	i1l3837
  5998   0000E4                     i1l144:
  5999                           
  6000                           ; BSR set to: 0
  6001   0000E4  BE81               	btfsc	129,7,c	;volatile
  6002   0000E6  EF77  F000         	goto	i1u263_21
  6003   0000EA  EF79  F000         	goto	i1u263_20
  6004   0000EE                     i1u263_21:
  6005   0000EE  EF7D  F000         	goto	i1l3801
  6006   0000F2                     i1u263_20:
  6007   0000F2                     
  6008                           ; BSR set to: 0
  6009   0000F2  0E04               	movlw	4
  6010   0000F4  6E4D               	movwf	_Tecla^0,c
  6011   0000F6  EF07  F001         	goto	i1l3837
  6012   0000FA                     i1l3801:
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;LAB4.c: 261:                 else if (PORTBbits.RB5==0) Tecla=14;;LAB4.c: 262:         
      +                                  else if (PORTBbits.RB6==0) Tecla=15;
  6016   0000FA  0EFD               	movlw	253
  6017   0000FC  6E8A               	movwf	138,c	;volatile
  6018   0000FE                     
  6019                           ; BSR set to: 0
  6020                           ;LAB4.c: 263:                 else if (PORTBbits.RB7==0) Tecla=16;
  6021   0000FE  B881               	btfsc	129,4,c	;volatile
  6022   000100  EF84  F000         	goto	i1u264_21
  6023   000104  EF86  F000         	goto	i1u264_20
  6024   000108                     i1u264_21:
  6025   000108  EF8A  F000         	goto	i1l148
  6026   00010C                     i1u264_20:
  6027   00010C                     
  6028                           ; BSR set to: 0
  6029   00010C  0E05               	movlw	5
  6030   00010E  6E4D               	movwf	_Tecla^0,c
  6031   000110  EF07  F001         	goto	i1l3837
  6032   000114                     i1l148:
  6033                           
  6034                           ; BSR set to: 0
  6035   000114  BA81               	btfsc	129,5,c	;volatile
  6036   000116  EF8F  F000         	goto	i1u265_21
  6037   00011A  EF91  F000         	goto	i1u265_20
  6038   00011E                     i1u265_21:
  6039   00011E  EF95  F000         	goto	i1l150
  6040   000122                     i1u265_20:
  6041   000122                     
  6042                           ; BSR set to: 0
  6043   000122  0E06               	movlw	6
  6044   000124  6E4D               	movwf	_Tecla^0,c
  6045   000126  EF07  F001         	goto	i1l3837
  6046   00012A                     i1l150:
  6047                           
  6048                           ; BSR set to: 0
  6049   00012A  BC81               	btfsc	129,6,c	;volatile
  6050   00012C  EF9A  F000         	goto	i1u266_21
  6051   000130  EF9C  F000         	goto	i1u266_20
  6052   000134                     i1u266_21:
  6053   000134  EFA0  F000         	goto	i1l152
  6054   000138                     i1u266_20:
  6055   000138                     
  6056                           ; BSR set to: 0
  6057   000138  0E07               	movlw	7
  6058   00013A  6E4D               	movwf	_Tecla^0,c
  6059   00013C  EF07  F001         	goto	i1l3837
  6060   000140                     i1l152:
  6061                           
  6062                           ; BSR set to: 0
  6063   000140  BE81               	btfsc	129,7,c	;volatile
  6064   000142  EFA5  F000         	goto	i1u267_21
  6065   000146  EFA7  F000         	goto	i1u267_20
  6066   00014A                     i1u267_21:
  6067   00014A  EFAB  F000         	goto	i1l3813
  6068   00014E                     i1u267_20:
  6069   00014E                     
  6070                           ; BSR set to: 0
  6071   00014E  0E08               	movlw	8
  6072   000150  6E4D               	movwf	_Tecla^0,c
  6073   000152  EF07  F001         	goto	i1l3837
  6074   000156                     i1l3813:
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;LAB4.c: 268:         if (E_stop_En==0);LAB4.c: 269:         {
  6078   000156  0EFB               	movlw	251
  6079   000158  6E8A               	movwf	138,c	;volatile
  6080   00015A                     
  6081                           ; BSR set to: 0
  6082                           ;LAB4.c: 270:           switch (Tecla)
  6083   00015A  B881               	btfsc	129,4,c	;volatile
  6084   00015C  EFB2  F000         	goto	i1u268_21
  6085   000160  EFB4  F000         	goto	i1u268_20
  6086   000164                     i1u268_21:
  6087   000164  EFB8  F000         	goto	i1l156
  6088   000168                     i1u268_20:
  6089   000168                     
  6090                           ; BSR set to: 0
  6091   000168  0E09               	movlw	9
  6092   00016A  6E4D               	movwf	_Tecla^0,c
  6093   00016C  EF07  F001         	goto	i1l3837
  6094   000170                     i1l156:
  6095                           
  6096                           ; BSR set to: 0
  6097   000170  BA81               	btfsc	129,5,c	;volatile
  6098   000172  EFBD  F000         	goto	i1u269_21
  6099   000176  EFBF  F000         	goto	i1u269_20
  6100   00017A                     i1u269_21:
  6101   00017A  EFC3  F000         	goto	i1l158
  6102   00017E                     i1u269_20:
  6103   00017E                     
  6104                           ; BSR set to: 0
  6105   00017E  0E0A               	movlw	10
  6106   000180  6E4D               	movwf	_Tecla^0,c
  6107   000182  EF07  F001         	goto	i1l3837
  6108   000186                     i1l158:
  6109                           
  6110                           ; BSR set to: 0
  6111   000186  BC81               	btfsc	129,6,c	;volatile
  6112   000188  EFC8  F000         	goto	i1u270_21
  6113   00018C  EFCA  F000         	goto	i1u270_20
  6114   000190                     i1u270_21:
  6115   000190  EFCE  F000         	goto	i1l160
  6116   000194                     i1u270_20:
  6117   000194                     
  6118                           ; BSR set to: 0
  6119   000194  0E0B               	movlw	11
  6120   000196  6E4D               	movwf	_Tecla^0,c
  6121   000198  EF07  F001         	goto	i1l3837
  6122   00019C                     i1l160:
  6123                           
  6124                           ; BSR set to: 0
  6125   00019C  BE81               	btfsc	129,7,c	;volatile
  6126   00019E  EFD3  F000         	goto	i1u271_21
  6127   0001A2  EFD5  F000         	goto	i1u271_20
  6128   0001A6                     i1u271_21:
  6129   0001A6  EFD9  F000         	goto	i1l3825
  6130   0001AA                     i1u271_20:
  6131   0001AA                     
  6132                           ; BSR set to: 0
  6133   0001AA  0E0C               	movlw	12
  6134   0001AC  6E4D               	movwf	_Tecla^0,c
  6135   0001AE  EF07  F001         	goto	i1l3837
  6136   0001B2                     i1l3825:
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;LAB4.c: 275:                     {;LAB4.c: 276:                     num=1;
  6140   0001B2  0EF7               	movlw	247
  6141   0001B4  6E8A               	movwf	138,c	;volatile
  6142   0001B6                     
  6143                           ; BSR set to: 0
  6144                           ;LAB4.c: 277:                     Borrado=0;
  6145   0001B6  B881               	btfsc	129,4,c	;volatile
  6146   0001B8  EFE0  F000         	goto	i1u272_21
  6147   0001BC  EFE2  F000         	goto	i1u272_20
  6148   0001C0                     i1u272_21:
  6149   0001C0  EFE6  F000         	goto	i1l164
  6150   0001C4                     i1u272_20:
  6151   0001C4                     
  6152                           ; BSR set to: 0
  6153   0001C4  0E0D               	movlw	13
  6154   0001C6  6E4D               	movwf	_Tecla^0,c
  6155   0001C8  EF07  F001         	goto	i1l3837
  6156   0001CC                     i1l164:
  6157                           
  6158                           ; BSR set to: 0
  6159   0001CC  BA81               	btfsc	129,5,c	;volatile
  6160   0001CE  EFEB  F000         	goto	i1u273_21
  6161   0001D2  EFED  F000         	goto	i1u273_20
  6162   0001D6                     i1u273_21:
  6163   0001D6  EFF1  F000         	goto	i1l166
  6164   0001DA                     i1u273_20:
  6165   0001DA                     
  6166                           ; BSR set to: 0
  6167   0001DA  0E0E               	movlw	14
  6168   0001DC  6E4D               	movwf	_Tecla^0,c
  6169   0001DE  EF07  F001         	goto	i1l3837
  6170   0001E2                     i1l166:
  6171                           
  6172                           ; BSR set to: 0
  6173   0001E2  BC81               	btfsc	129,6,c	;volatile
  6174   0001E4  EFF6  F000         	goto	i1u274_21
  6175   0001E8  EFF8  F000         	goto	i1u274_20
  6176   0001EC                     i1u274_21:
  6177   0001EC  EFFC  F000         	goto	i1l168
  6178   0001F0                     i1u274_20:
  6179   0001F0                     
  6180                           ; BSR set to: 0
  6181   0001F0  0E0F               	movlw	15
  6182   0001F2  6E4D               	movwf	_Tecla^0,c
  6183   0001F4  EF07  F001         	goto	i1l3837
  6184   0001F8                     i1l168:
  6185                           
  6186                           ; BSR set to: 0
  6187   0001F8  BE81               	btfsc	129,7,c	;volatile
  6188   0001FA  EF01  F001         	goto	i1u275_21
  6189   0001FE  EF03  F001         	goto	i1u275_20
  6190   000202                     i1u275_21:
  6191   000202  EF07  F001         	goto	i1l165
  6192   000206                     i1u275_20:
  6193   000206                     
  6194                           ; BSR set to: 0
  6195   000206  0E10               	movlw	16
  6196   000208  6E4D               	movwf	_Tecla^0,c
  6197   00020A  EF07  F001         	goto	i1l3837
  6198   00020E                     i1l165:
  6199   00020E                     i1l3837:
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;LAB4.c: 285:                     {
  6203   00020E  5043               	movf	_E_stop_En^0,w,c
  6204   000210  1044               	iorwf	(_E_stop_En+1)^0,w,c
  6205   000212  A4D8               	btfss	status,2,c
  6206   000214  EF0E  F001         	goto	i1u276_21
  6207   000218  EF10  F001         	goto	i1u276_20
  6208   00021C                     i1u276_21:
  6209   00021C  EF5F  F004         	goto	i1l4013
  6210   000220                     i1u276_20:
  6211   000220  EF1C  F004         	goto	i1l4011
  6212   000224                     i1l3841:
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;LAB4.c: 291: 
  6216   000224  05BA               	decf	_Numpad_en& (0+255),w,b
  6217   000226  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6218   000228  A4D8               	btfss	status,2,c
  6219   00022A  EF19  F001         	goto	i1u277_21
  6220   00022E  EF1B  F001         	goto	i1u277_20
  6221   000232                     i1u277_21:
  6222   000232  EF5F  F004         	goto	i1l4013
  6223   000236                     i1u277_20:
  6224   000236                     
  6225                           ; BSR set to: 0
  6226                           ;LAB4.c: 292: ;LAB4.c: 293:                   break;
  6227   000236  0E00               	movlw	0
  6228   000238  6FE3               	movwf	(_num+1)& (0+255),b
  6229   00023A  0E01               	movlw	1
  6230   00023C  6FE2               	movwf	_num& (0+255),b
  6231                           
  6232                           ;LAB4.c: 294:               case 3:
  6233   00023E  0E00               	movlw	0
  6234   000240  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6235   000242  0E00               	movlw	0
  6236   000244  6FB8               	movwf	_Borrado& (0+255),b
  6237                           
  6238                           ;LAB4.c: 295:                   if (Numpad_en==1)
  6239   000246  0E00               	movlw	0
  6240   000248  6E48               	movwf	(_back_l_En+1)^0,c
  6241   00024A  0E00               	movlw	0
  6242   00024C  6E47               	movwf	_back_l_En^0,c
  6243                           
  6244                           ;LAB4.c: 296:                     {
  6245   00024E  0E00               	movlw	0
  6246   000250  6E46               	movwf	(_reset_En+1)^0,c
  6247   000252  0E00               	movlw	0
  6248   000254  6E45               	movwf	_reset_En^0,c
  6249                           
  6250                           ;LAB4.c: 297:                       num=3;
  6251   000256  0E00               	movlw	0
  6252   000258  6E44               	movwf	(_E_stop_En+1)^0,c
  6253   00025A  0E00               	movlw	0
  6254   00025C  6E43               	movwf	_E_stop_En^0,c
  6255   00025E  EF5F  F004         	goto	i1l4013
  6256   000262                     i1l3845:
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;LAB4.c: 301:                       E_stop_En=0;
  6260   000262  05BA               	decf	_Numpad_en& (0+255),w,b
  6261   000264  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6262   000266  A4D8               	btfss	status,2,c
  6263   000268  EF38  F001         	goto	i1u278_21
  6264   00026C  EF3A  F001         	goto	i1u278_20
  6265   000270                     i1u278_21:
  6266   000270  EF5F  F004         	goto	i1l4013
  6267   000274                     i1u278_20:
  6268   000274                     
  6269                           ; BSR set to: 0
  6270                           ;LAB4.c: 302:                     };LAB4.c: 303: 
  6271   000274  0E00               	movlw	0
  6272   000276  6FE3               	movwf	(_num+1)& (0+255),b
  6273   000278  0E02               	movlw	2
  6274   00027A  6FE2               	movwf	_num& (0+255),b
  6275                           
  6276                           ;LAB4.c: 304:                   break;
  6277   00027C  0E00               	movlw	0
  6278   00027E  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6279   000280  0E00               	movlw	0
  6280   000282  6FB8               	movwf	_Borrado& (0+255),b
  6281                           
  6282                           ;LAB4.c: 305:              case 5:
  6283   000284  0E00               	movlw	0
  6284   000286  6E46               	movwf	(_reset_En+1)^0,c
  6285   000288  0E00               	movlw	0
  6286   00028A  6E45               	movwf	_reset_En^0,c
  6287                           
  6288                           ;LAB4.c: 306:                   if (Numpad_en==1)
  6289   00028C  0E00               	movlw	0
  6290   00028E  6E44               	movwf	(_E_stop_En+1)^0,c
  6291   000290  0E00               	movlw	0
  6292   000292  6E43               	movwf	_E_stop_En^0,c
  6293   000294  EF5F  F004         	goto	i1l4013
  6294   000298                     i1l3849:
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;LAB4.c: 312:                       E_stop_En=0;
  6298   000298  05BA               	decf	_Numpad_en& (0+255),w,b
  6299   00029A  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6300   00029C  A4D8               	btfss	status,2,c
  6301   00029E  EF53  F001         	goto	i1u279_21
  6302   0002A2  EF55  F001         	goto	i1u279_20
  6303   0002A6                     i1u279_21:
  6304   0002A6  EF5F  F004         	goto	i1l4013
  6305   0002AA                     i1u279_20:
  6306   0002AA                     
  6307                           ; BSR set to: 0
  6308                           ;LAB4.c: 313:                     };LAB4.c: 314: 
  6309   0002AA  0E00               	movlw	0
  6310   0002AC  6FE3               	movwf	(_num+1)& (0+255),b
  6311   0002AE  0E03               	movlw	3
  6312   0002B0  6FE2               	movwf	_num& (0+255),b
  6313                           
  6314                           ;LAB4.c: 315:                   break;
  6315   0002B2  0E00               	movlw	0
  6316   0002B4  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6317   0002B6  0E00               	movlw	0
  6318   0002B8  6FB8               	movwf	_Borrado& (0+255),b
  6319                           
  6320                           ;LAB4.c: 316:               case 6:
  6321   0002BA  0E00               	movlw	0
  6322   0002BC  6E48               	movwf	(_back_l_En+1)^0,c
  6323   0002BE  0E00               	movlw	0
  6324   0002C0  6E47               	movwf	_back_l_En^0,c
  6325                           
  6326                           ;LAB4.c: 317:                    if (Numpad_en==1)
  6327   0002C2  0E00               	movlw	0
  6328   0002C4  6E46               	movwf	(_reset_En+1)^0,c
  6329   0002C6  0E00               	movlw	0
  6330   0002C8  6E45               	movwf	_reset_En^0,c
  6331                           
  6332                           ;LAB4.c: 318:                     {
  6333   0002CA  0E00               	movlw	0
  6334   0002CC  6E44               	movwf	(_E_stop_En+1)^0,c
  6335   0002CE  0E00               	movlw	0
  6336   0002D0  6E43               	movwf	_E_stop_En^0,c
  6337   0002D2  EF5F  F004         	goto	i1l4013
  6338   0002D6                     i1l3853:
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;LAB4.c: 323:                       E_stop_En=0;
  6342   0002D6  05BA               	decf	_Numpad_en& (0+255),w,b
  6343   0002D8  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6344   0002DA  A4D8               	btfss	status,2,c
  6345   0002DC  EF72  F001         	goto	i1u280_21
  6346   0002E0  EF74  F001         	goto	i1u280_20
  6347   0002E4                     i1u280_21:
  6348   0002E4  EF5F  F004         	goto	i1l4013
  6349   0002E8                     i1u280_20:
  6350   0002E8                     
  6351                           ; BSR set to: 0
  6352                           ;LAB4.c: 324:                     };LAB4.c: 325: 
  6353   0002E8  0E00               	movlw	0
  6354   0002EA  6FE3               	movwf	(_num+1)& (0+255),b
  6355   0002EC  0E04               	movlw	4
  6356   0002EE  6FE2               	movwf	_num& (0+255),b
  6357                           
  6358                           ;LAB4.c: 326:                   break;
  6359   0002F0  0E00               	movlw	0
  6360   0002F2  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6361   0002F4  0E00               	movlw	0
  6362   0002F6  6FB8               	movwf	_Borrado& (0+255),b
  6363                           
  6364                           ;LAB4.c: 327:               case 7:
  6365   0002F8  0E00               	movlw	0
  6366   0002FA  6E48               	movwf	(_back_l_En+1)^0,c
  6367   0002FC  0E00               	movlw	0
  6368   0002FE  6E47               	movwf	_back_l_En^0,c
  6369                           
  6370                           ;LAB4.c: 328:                    if (Numpad_en==1)
  6371   000300  0E00               	movlw	0
  6372   000302  6E46               	movwf	(_reset_En+1)^0,c
  6373   000304  0E00               	movlw	0
  6374   000306  6E45               	movwf	_reset_En^0,c
  6375                           
  6376                           ;LAB4.c: 329:                     {
  6377   000308  0E00               	movlw	0
  6378   00030A  6E44               	movwf	(_E_stop_En+1)^0,c
  6379   00030C  0E00               	movlw	0
  6380   00030E  6E43               	movwf	_E_stop_En^0,c
  6381   000310  EF5F  F004         	goto	i1l4013
  6382   000314                     i1l3857:
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;LAB4.c: 334:                       E_stop_En=0;
  6386   000314  05BA               	decf	_Numpad_en& (0+255),w,b
  6387   000316  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6388   000318  A4D8               	btfss	status,2,c
  6389   00031A  EF91  F001         	goto	i1u281_21
  6390   00031E  EF93  F001         	goto	i1u281_20
  6391   000322                     i1u281_21:
  6392   000322  EF5F  F004         	goto	i1l4013
  6393   000326                     i1u281_20:
  6394   000326                     
  6395                           ; BSR set to: 0
  6396                           ;LAB4.c: 335:                     };LAB4.c: 336:                   break;
  6397   000326  0E00               	movlw	0
  6398   000328  6FE3               	movwf	(_num+1)& (0+255),b
  6399   00032A  0E05               	movlw	5
  6400   00032C  6FE2               	movwf	_num& (0+255),b
  6401                           
  6402                           ;LAB4.c: 337:               case 9:
  6403   00032E  0E00               	movlw	0
  6404   000330  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6405   000332  0E00               	movlw	0
  6406   000334  6FB8               	movwf	_Borrado& (0+255),b
  6407                           
  6408                           ;LAB4.c: 338:                   if (Numpad_en==1)
  6409   000336  0E00               	movlw	0
  6410   000338  6E48               	movwf	(_back_l_En+1)^0,c
  6411   00033A  0E00               	movlw	0
  6412   00033C  6E47               	movwf	_back_l_En^0,c
  6413                           
  6414                           ;LAB4.c: 339:                     {
  6415   00033E  0E00               	movlw	0
  6416   000340  6E46               	movwf	(_reset_En+1)^0,c
  6417   000342  0E00               	movlw	0
  6418   000344  6E45               	movwf	_reset_En^0,c
  6419                           
  6420                           ;LAB4.c: 340:                       num=7;
  6421   000346  0E00               	movlw	0
  6422   000348  6E44               	movwf	(_E_stop_En+1)^0,c
  6423   00034A  0E00               	movlw	0
  6424   00034C  6E43               	movwf	_E_stop_En^0,c
  6425   00034E  EF5F  F004         	goto	i1l4013
  6426   000352                     i1l3861:
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;LAB4.c: 345:                     }
  6430   000352  05BA               	decf	_Numpad_en& (0+255),w,b
  6431   000354  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6432   000356  A4D8               	btfss	status,2,c
  6433   000358  EFB0  F001         	goto	i1u282_21
  6434   00035C  EFB2  F001         	goto	i1u282_20
  6435   000360                     i1u282_21:
  6436   000360  EF5F  F004         	goto	i1l4013
  6437   000364                     i1u282_20:
  6438   000364                     
  6439                           ; BSR set to: 0
  6440                           ;LAB4.c: 346: ;LAB4.c: 347:                   break;
  6441   000364  0E00               	movlw	0
  6442   000366  6FE3               	movwf	(_num+1)& (0+255),b
  6443   000368  0E06               	movlw	6
  6444   00036A  6FE2               	movwf	_num& (0+255),b
  6445                           
  6446                           ;LAB4.c: 348:               case 10:
  6447   00036C  0E00               	movlw	0
  6448   00036E  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6449   000370  0E00               	movlw	0
  6450   000372  6FB8               	movwf	_Borrado& (0+255),b
  6451                           
  6452                           ;LAB4.c: 349:                   if (Numpad_en==1)
  6453   000374  0E00               	movlw	0
  6454   000376  6E48               	movwf	(_back_l_En+1)^0,c
  6455   000378  0E00               	movlw	0
  6456   00037A  6E47               	movwf	_back_l_En^0,c
  6457                           
  6458                           ;LAB4.c: 350:                     {
  6459   00037C  0E00               	movlw	0
  6460   00037E  6E46               	movwf	(_reset_En+1)^0,c
  6461   000380  0E00               	movlw	0
  6462   000382  6E45               	movwf	_reset_En^0,c
  6463                           
  6464                           ;LAB4.c: 351:                       num=8;
  6465   000384  0E00               	movlw	0
  6466   000386  6E44               	movwf	(_E_stop_En+1)^0,c
  6467   000388  0E00               	movlw	0
  6468   00038A  6E43               	movwf	_E_stop_En^0,c
  6469   00038C  EF5F  F004         	goto	i1l4013
  6470   000390                     i1l3865:
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;LAB4.c: 355:                       E_stop_En=0;
  6474   000390  05BA               	decf	_Numpad_en& (0+255),w,b
  6475   000392  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6476   000394  A4D8               	btfss	status,2,c
  6477   000396  EFCF  F001         	goto	i1u283_21
  6478   00039A  EFD1  F001         	goto	i1u283_20
  6479   00039E                     i1u283_21:
  6480   00039E  EF5F  F004         	goto	i1l4013
  6481   0003A2                     i1u283_20:
  6482   0003A2                     
  6483                           ; BSR set to: 0
  6484                           ;LAB4.c: 356:                     };LAB4.c: 357: 
  6485   0003A2  0E00               	movlw	0
  6486   0003A4  6FE3               	movwf	(_num+1)& (0+255),b
  6487   0003A6  0E07               	movlw	7
  6488   0003A8  6FE2               	movwf	_num& (0+255),b
  6489                           
  6490                           ;LAB4.c: 358:                   break;
  6491   0003AA  0E00               	movlw	0
  6492   0003AC  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6493   0003AE  0E00               	movlw	0
  6494   0003B0  6FB8               	movwf	_Borrado& (0+255),b
  6495                           
  6496                           ;LAB4.c: 359:               case 11:
  6497   0003B2  0E00               	movlw	0
  6498   0003B4  6E48               	movwf	(_back_l_En+1)^0,c
  6499   0003B6  0E00               	movlw	0
  6500   0003B8  6E47               	movwf	_back_l_En^0,c
  6501                           
  6502                           ;LAB4.c: 360:                   if (Numpad_en==1)
  6503   0003BA  0E00               	movlw	0
  6504   0003BC  6E46               	movwf	(_reset_En+1)^0,c
  6505   0003BE  0E00               	movlw	0
  6506   0003C0  6E45               	movwf	_reset_En^0,c
  6507                           
  6508                           ;LAB4.c: 361:                     {
  6509   0003C2  0E00               	movlw	0
  6510   0003C4  6E44               	movwf	(_E_stop_En+1)^0,c
  6511   0003C6  0E00               	movlw	0
  6512   0003C8  6E43               	movwf	_E_stop_En^0,c
  6513   0003CA  EF5F  F004         	goto	i1l4013
  6514   0003CE                     i1l3869:
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;LAB4.c: 366:                       E_stop_En=0;
  6518   0003CE  05BA               	decf	_Numpad_en& (0+255),w,b
  6519   0003D0  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6520   0003D2  A4D8               	btfss	status,2,c
  6521   0003D4  EFEE  F001         	goto	i1u284_21
  6522   0003D8  EFF0  F001         	goto	i1u284_20
  6523   0003DC                     i1u284_21:
  6524   0003DC  EF5F  F004         	goto	i1l4013
  6525   0003E0                     i1u284_20:
  6526   0003E0                     
  6527                           ; BSR set to: 0
  6528                           ;LAB4.c: 367: ;LAB4.c: 368:                     }
  6529   0003E0  0E00               	movlw	0
  6530   0003E2  6FE3               	movwf	(_num+1)& (0+255),b
  6531   0003E4  0E08               	movlw	8
  6532   0003E6  6FE2               	movwf	_num& (0+255),b
  6533                           
  6534                           ;LAB4.c: 369: 
  6535   0003E8  0E00               	movlw	0
  6536   0003EA  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6537   0003EC  0E00               	movlw	0
  6538   0003EE  6FB8               	movwf	_Borrado& (0+255),b
  6539                           
  6540                           ;LAB4.c: 370:                   break;
  6541   0003F0  0E00               	movlw	0
  6542   0003F2  6E48               	movwf	(_back_l_En+1)^0,c
  6543   0003F4  0E00               	movlw	0
  6544   0003F6  6E47               	movwf	_back_l_En^0,c
  6545                           
  6546                           ;LAB4.c: 371:               case 14:
  6547   0003F8  0E00               	movlw	0
  6548   0003FA  6E46               	movwf	(_reset_En+1)^0,c
  6549   0003FC  0E00               	movlw	0
  6550   0003FE  6E45               	movwf	_reset_En^0,c
  6551                           
  6552                           ;LAB4.c: 372:                   if (Numpad_en==1)
  6553   000400  0E00               	movlw	0
  6554   000402  6E44               	movwf	(_E_stop_En+1)^0,c
  6555   000404  0E00               	movlw	0
  6556   000406  6E43               	movwf	_E_stop_En^0,c
  6557   000408  EF5F  F004         	goto	i1l4013
  6558   00040C                     i1l3873:
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;LAB4.c: 377:                       reset_En=0;
  6562   00040C  05BA               	decf	_Numpad_en& (0+255),w,b
  6563   00040E  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6564   000410  A4D8               	btfss	status,2,c
  6565   000412  EF0D  F002         	goto	i1u285_21
  6566   000416  EF0F  F002         	goto	i1u285_20
  6567   00041A                     i1u285_21:
  6568   00041A  EF5F  F004         	goto	i1l4013
  6569   00041E                     i1u285_20:
  6570   00041E                     
  6571                           ; BSR set to: 0
  6572                           ;LAB4.c: 378:                       E_stop_En=0;;LAB4.c: 379:                     }
  6573   00041E  0E00               	movlw	0
  6574   000420  6FE3               	movwf	(_num+1)& (0+255),b
  6575   000422  0E09               	movlw	9
  6576   000424  6FE2               	movwf	_num& (0+255),b
  6577                           
  6578                           ;LAB4.c: 380: 
  6579   000426  0E00               	movlw	0
  6580   000428  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6581   00042A  0E00               	movlw	0
  6582   00042C  6FB8               	movwf	_Borrado& (0+255),b
  6583                           
  6584                           ;LAB4.c: 381:                   break;
  6585   00042E  0E00               	movlw	0
  6586   000430  6E48               	movwf	(_back_l_En+1)^0,c
  6587   000432  0E00               	movlw	0
  6588   000434  6E47               	movwf	_back_l_En^0,c
  6589                           
  6590                           ;LAB4.c: 382: 
  6591   000436  0E00               	movlw	0
  6592   000438  6E46               	movwf	(_reset_En+1)^0,c
  6593   00043A  0E00               	movlw	0
  6594   00043C  6E45               	movwf	_reset_En^0,c
  6595                           
  6596                           ;LAB4.c: 383:               case 8:
  6597   00043E  0E00               	movlw	0
  6598   000440  6E44               	movwf	(_E_stop_En+1)^0,c
  6599   000442  0E00               	movlw	0
  6600   000444  6E43               	movwf	_E_stop_En^0,c
  6601   000446  EF5F  F004         	goto	i1l4013
  6602   00044A                     i1l3877:
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;LAB4.c: 389:                   Lcd_Write_String(" ");
  6606   00044A  05BA               	decf	_Numpad_en& (0+255),w,b
  6607   00044C  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6608   00044E  A4D8               	btfss	status,2,c
  6609   000450  EF2C  F002         	goto	i1u286_21
  6610   000454  EF2E  F002         	goto	i1u286_20
  6611   000458                     i1u286_21:
  6612   000458  EF5F  F004         	goto	i1l4013
  6613   00045C                     i1u286_20:
  6614   00045C                     
  6615                           ; BSR set to: 0
  6616                           ;LAB4.c: 390:                   Lcd_Set_Cursor(2,12);;LAB4.c: 391:                   Lcd
      +                          _Blink();
  6617   00045C  0E00               	movlw	0
  6618   00045E  6FE3               	movwf	(_num+1)& (0+255),b
  6619   000460  0E00               	movlw	0
  6620   000462  6FE2               	movwf	_num& (0+255),b
  6621                           
  6622                           ;LAB4.c: 392:                   result=0;
  6623   000464  0E00               	movlw	0
  6624   000466  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6625   000468  0E00               	movlw	0
  6626   00046A  6FB8               	movwf	_Borrado& (0+255),b
  6627                           
  6628                           ;LAB4.c: 393:                   digito=0;
  6629   00046C  0E00               	movlw	0
  6630   00046E  6E48               	movwf	(_back_l_En+1)^0,c
  6631   000470  0E00               	movlw	0
  6632   000472  6E47               	movwf	_back_l_En^0,c
  6633                           
  6634                           ;LAB4.c: 394:                   Borrado=1;
  6635   000474  0E00               	movlw	0
  6636   000476  6E46               	movwf	(_reset_En+1)^0,c
  6637   000478  0E00               	movlw	0
  6638   00047A  6E45               	movwf	_reset_En^0,c
  6639                           
  6640                           ;LAB4.c: 395:                   back_l_En=0;
  6641   00047C  0E00               	movlw	0
  6642   00047E  6E44               	movwf	(_E_stop_En+1)^0,c
  6643   000480  0E00               	movlw	0
  6644   000482  6E43               	movwf	_E_stop_En^0,c
  6645   000484  EF5F  F004         	goto	i1l4013
  6646   000488                     i1l3881:
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;LAB4.c: 401:               case 4:
  6650   000488  0449               	decf	_Borrado_En^0,w,c
  6651   00048A  104A               	iorwf	(_Borrado_En+1)^0,w,c
  6652   00048C  A4D8               	btfss	status,2,c
  6653   00048E  EF4B  F002         	goto	i1u287_21
  6654   000492  EF4D  F002         	goto	i1u287_20
  6655   000496                     i1u287_21:
  6656   000496  EF5F  F004         	goto	i1l4013
  6657   00049A                     i1u287_20:
  6658   00049A                     
  6659                           ; BSR set to: 0
  6660                           ;LAB4.c: 402: ;LAB4.c: 403:                 if(ok_en==1)
  6661   00049A  0E0C               	movlw	12
  6662   00049C  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  6663   00049E  0E02               	movlw	2
  6664   0004A0  ECEE  F00D         	call	i1_Lcd_Set_Cursor
  6665   0004A4                     
  6666                           ;LAB4.c: 404:                   {
  6667   0004A4  0E2C               	movlw	low (STR_20+15)
  6668   0004A6  6E06               	movwf	i1Lcd_Write_String@a^0,c
  6669   0004A8  0E7F               	movlw	high (STR_20+15)
  6670   0004AA  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  6671   0004AC  EC0E  F011         	call	i1_Lcd_Write_String	;wreg free
  6672   0004B0                     
  6673                           ;LAB4.c: 405:                   if(state==1)
  6674   0004B0  0E0D               	movlw	13
  6675   0004B2  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  6676   0004B4  0E02               	movlw	2
  6677   0004B6  ECEE  F00D         	call	i1_Lcd_Set_Cursor
  6678                           
  6679                           ;LAB4.c: 406:                   {
  6680   0004BA  0E2C               	movlw	low (STR_20+15)
  6681   0004BC  6E06               	movwf	i1Lcd_Write_String@a^0,c
  6682   0004BE  0E7F               	movlw	high (STR_20+15)
  6683   0004C0  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  6684   0004C2  EC0E  F011         	call	i1_Lcd_Write_String	;wreg free
  6685   0004C6                     
  6686                           ;LAB4.c: 407:                     if (result>0 && result<=59 )
  6687   0004C6  0E0C               	movlw	12
  6688   0004C8  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  6689   0004CA  0E02               	movlw	2
  6690   0004CC  ECEE  F00D         	call	i1_Lcd_Set_Cursor
  6691   0004D0                     
  6692                           ;LAB4.c: 408:                       {
  6693   0004D0  EC72  F013         	call	i1_Lcd_Blink	;wreg free
  6694   0004D4                     
  6695                           ;LAB4.c: 409:                         re_pcs=result;
  6696   0004D4  0E00               	movlw	0
  6697   0004D6  0100               	movlb	0	; () banked
  6698   0004D8  6FB5               	movwf	(_result+1)& (0+255),b
  6699   0004DA  0E00               	movlw	0
  6700   0004DC  6FB4               	movwf	_result& (0+255),b
  6701   0004DE                     
  6702                           ; BSR set to: 0
  6703                           ;LAB4.c: 410:                         Numpad_en=0;
  6704   0004DE  0E00               	movlw	0
  6705   0004E0  6FB3               	movwf	(_digito+1)& (0+255),b
  6706   0004E2  0E00               	movlw	0
  6707   0004E4  6FB2               	movwf	_digito& (0+255),b
  6708   0004E6                     
  6709                           ; BSR set to: 0
  6710                           ;LAB4.c: 411: 
  6711   0004E6  0E00               	movlw	0
  6712   0004E8  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6713   0004EA  0E01               	movlw	1
  6714   0004EC  6FB8               	movwf	_Borrado& (0+255),b
  6715   0004EE                     
  6716                           ; BSR set to: 0
  6717                           ;LAB4.c: 412:                         count_En=1;
  6718   0004EE  0E00               	movlw	0
  6719   0004F0  6E48               	movwf	(_back_l_En+1)^0,c
  6720   0004F2  0E00               	movlw	0
  6721   0004F4  6E47               	movwf	_back_l_En^0,c
  6722   0004F6                     
  6723                           ; BSR set to: 0
  6724                           ;LAB4.c: 413:                         ok_en=0;
  6725   0004F6  0E00               	movlw	0
  6726   0004F8  6E46               	movwf	(_reset_En+1)^0,c
  6727   0004FA  0E00               	movlw	0
  6728   0004FC  6E45               	movwf	_reset_En^0,c
  6729   0004FE                     
  6730                           ; BSR set to: 0
  6731                           ;LAB4.c: 414:                         state++;
  6732   0004FE  0E00               	movlw	0
  6733   000500  6E44               	movwf	(_E_stop_En+1)^0,c
  6734   000502  0E00               	movlw	0
  6735   000504  6E43               	movwf	_E_stop_En^0,c
  6736   000506  EF5F  F004         	goto	i1l4013
  6737   00050A                     i1l3905:
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;LAB4.c: 420:                         Lcd_Write_String("numero");
  6741   00050A  043F               	decf	_ok_en^0,w,c
  6742   00050C  1040               	iorwf	(_ok_en+1)^0,w,c
  6743   00050E  A4D8               	btfss	status,2,c
  6744   000510  EF8C  F002         	goto	i1u288_21
  6745   000514  EF8E  F002         	goto	i1u288_20
  6746   000518                     i1u288_21:
  6747   000518  EF79  F003         	goto	i1l197
  6748   00051C                     i1u288_20:
  6749   00051C                     
  6750                           ; BSR set to: 0
  6751                           ;LAB4.c: 421:                         Lcd_Set_Cursor(2,1);;LAB4.c: 422:                 
      +                                  Lcd_Write_String("invalido");
  6752   00051C  05BE               	decf	_state& (0+255),w,b
  6753   00051E  11BF               	iorwf	(_state+1)& (0+255),w,b
  6754   000520  A4D8               	btfss	status,2,c
  6755   000522  EF95  F002         	goto	i1u289_21
  6756   000526  EF97  F002         	goto	i1u289_20
  6757   00052A                     i1u289_21:
  6758   00052A  EF21  F003         	goto	i1l3957
  6759   00052E                     i1u289_20:
  6760   00052E                     
  6761                           ; BSR set to: 0
  6762                           ;LAB4.c: 423:                         _delay((unsigned long)((2000)*(8000000UL/4000.0)))
      +                          ;;LAB4.c: 424: 
  6763   00052E  BFB5               	btfsc	(_result+1)& (0+255),7,b
  6764   000530  EFA2  F002         	goto	i1u290_21
  6765   000534  51B5               	movf	(_result+1)& (0+255),w,b
  6766   000536  E108               	bnz	i1u290_20
  6767   000538  05B4               	decf	_result& (0+255),w,b
  6768   00053A  A0D8               	btfss	status,0,c
  6769   00053C  EFA2  F002         	goto	i1u290_21
  6770   000540  EFA4  F002         	goto	i1u290_20
  6771   000544                     i1u290_21:
  6772   000544  EFC6  F002         	goto	i1l3919
  6773   000548                     i1u290_20:
  6774   000548                     
  6775                           ; BSR set to: 0
  6776   000548  BFB5               	btfsc	(_result+1)& (0+255),7,b
  6777   00054A  EFB2  F002         	goto	i1u291_20
  6778   00054E  51B5               	movf	(_result+1)& (0+255),w,b
  6779   000550  E107               	bnz	i1u291_21
  6780   000552  0E3C               	movlw	60
  6781   000554  5DB4               	subwf	_result& (0+255),w,b
  6782   000556  B0D8               	btfsc	status,0,c
  6783   000558  EFB0  F002         	goto	i1u291_21
  6784   00055C  EFB2  F002         	goto	i1u291_20
  6785   000560                     i1u291_21:
  6786   000560  EFC6  F002         	goto	i1l3919
  6787   000564                     i1u291_20:
  6788   000564                     
  6789                           ; BSR set to: 0
  6790                           ;LAB4.c: 425:                         Enter_en=0;;LAB4.c: 426:                         N
      +                          umpad_en=0;
  6791   000564  C0B4  F0E0         	movff	_result,_re_pcs
  6792   000568  C0B5  F0E1         	movff	_result+1,_re_pcs+1
  6793   00056C                     
  6794                           ; BSR set to: 0
  6795                           ;LAB4.c: 427:                         Keypad_en=0;
  6796   00056C  0E00               	movlw	0
  6797   00056E  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  6798   000570  0E00               	movlw	0
  6799   000572  6FBA               	movwf	_Numpad_en& (0+255),b
  6800                           
  6801                           ;LAB4.c: 429:                         Borrado_En=0;
  6802   000574  0E00               	movlw	0
  6803   000576  6FB7               	movwf	(_count_En+1)& (0+255),b
  6804   000578  0E01               	movlw	1
  6805   00057A  6FB6               	movwf	_count_En& (0+255),b
  6806                           
  6807                           ;LAB4.c: 430:                         count_En=0;
  6808   00057C  0E00               	movlw	0
  6809   00057E  6E40               	movwf	(_ok_en+1)^0,c
  6810   000580  0E00               	movlw	0
  6811   000582  6E3F               	movwf	_ok_en^0,c
  6812   000584                     
  6813                           ; BSR set to: 0
  6814                           ;LAB4.c: 431:                         result=0;
  6815   000584  4BBE               	infsnz	_state& (0+255),f,b
  6816   000586  2BBF               	incf	(_state+1)& (0+255),f,b
  6817                           
  6818                           ;LAB4.c: 432:                         digito=0;
  6819   000588  EF6D  F003         	goto	i1l201
  6820   00058C                     i1l3919:
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;LAB4.c: 434:                         times_1=0;;LAB4.c: 435:                         ch
      +                          eck =0;
  6824   00058C  EC6B  F013         	call	i1_Lcd_Clear	;wreg free
  6825   000590                     
  6826                           ;LAB4.c: 436:                         ok_en=0;
  6827   000590  0E01               	movlw	1
  6828   000592  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  6829   000594  0E01               	movlw	1
  6830   000596  ECEE  F00D         	call	i1_Lcd_Set_Cursor
  6831   00059A                     
  6832                           ;LAB4.c: 437:                         state=1;
  6833   00059A  0E78               	movlw	low (STR_3+8)
  6834   00059C  6E06               	movwf	i1Lcd_Write_String@a^0,c
  6835   00059E  0E7F               	movlw	high (STR_3+8)
  6836   0005A0  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  6837   0005A2  EC0E  F011         	call	i1_Lcd_Write_String	;wreg free
  6838   0005A6                     
  6839                           ;LAB4.c: 438: 
  6840   0005A6  0E01               	movlw	1
  6841   0005A8  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  6842   0005AA  0E02               	movlw	2
  6843   0005AC  ECEE  F00D         	call	i1_Lcd_Set_Cursor
  6844   0005B0                     
  6845                           ;LAB4.c: 439:                       }
  6846   0005B0  0EEE               	movlw	low STR_15
  6847   0005B2  6E06               	movwf	i1Lcd_Write_String@a^0,c
  6848   0005B4  0E7F               	movlw	high STR_15
  6849   0005B6  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  6850   0005B8  EC0E  F011         	call	i1_Lcd_Write_String	;wreg free
  6851   0005BC                     
  6852                           ;LAB4.c: 440:                   }
  6853   0005BC  0E15               	movlw	21
  6854   0005BE  6E33               	movwf	(??_LOW_PRIORITY+1)^0,c
  6855   0005C0  0E4B               	movlw	75
  6856   0005C2  6E32               	movwf	??_LOW_PRIORITY^0,c
  6857   0005C4  0EBE               	movlw	190
  6858   0005C6                     i1u329_27:
  6859   0005C6  2EE8               	decfsz	wreg,f,c
  6860   0005C8  D7FE               	bra	i1u329_27
  6861   0005CA  2E32               	decfsz	??_LOW_PRIORITY^0,f,c
  6862   0005CC  D7FC               	bra	i1u329_27
  6863   0005CE  2E33               	decfsz	(??_LOW_PRIORITY+1)^0,f,c
  6864   0005D0  D7FA               	bra	i1u329_27
  6865   0005D2  D000               	nop2	
  6866   0005D4                     
  6867                           ;LAB4.c: 442:                   {
  6868   0005D4  0E00               	movlw	0
  6869   0005D6  0100               	movlb	0	; () banked
  6870   0005D8  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  6871   0005DA  0E00               	movlw	0
  6872   0005DC  6FBC               	movwf	_Enter_en& (0+255),b
  6873   0005DE                     
  6874                           ; BSR set to: 0
  6875                           ;LAB4.c: 443: 
  6876   0005DE  0E00               	movlw	0
  6877   0005E0  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  6878   0005E2  0E00               	movlw	0
  6879   0005E4  6FBA               	movwf	_Numpad_en& (0+255),b
  6880   0005E6                     
  6881                           ; BSR set to: 0
  6882                           ;LAB4.c: 444:                     ok_en=0;
  6883   0005E6  0E00               	movlw	0
  6884   0005E8  6E4C               	movwf	(_Keypad_en+1)^0,c
  6885   0005EA  0E00               	movlw	0
  6886   0005EC  6E4B               	movwf	_Keypad_en^0,c
  6887   0005EE                     
  6888                           ; BSR set to: 0
  6889                           ;LAB4.c: 445:                     Enter_en=0;
  6890   0005EE  0E00               	movlw	0
  6891   0005F0  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6892   0005F2  0E00               	movlw	0
  6893   0005F4  6FB8               	movwf	_Borrado& (0+255),b
  6894   0005F6                     
  6895                           ; BSR set to: 0
  6896                           ;LAB4.c: 446:                     Numpad_en=0;
  6897   0005F6  0E00               	movlw	0
  6898   0005F8  6E4A               	movwf	(_Borrado_En+1)^0,c
  6899   0005FA  0E00               	movlw	0
  6900   0005FC  6E49               	movwf	_Borrado_En^0,c
  6901   0005FE                     
  6902                           ; BSR set to: 0
  6903                           ;LAB4.c: 447:                     Keypad_en=0;
  6904   0005FE  0E00               	movlw	0
  6905   000600  6FB7               	movwf	(_count_En+1)& (0+255),b
  6906   000602  0E00               	movlw	0
  6907   000604  6FB6               	movwf	_count_En& (0+255),b
  6908   000606                     
  6909                           ; BSR set to: 0
  6910                           ;LAB4.c: 448:                     Borrado=0;
  6911   000606  0E00               	movlw	0
  6912   000608  6FB5               	movwf	(_result+1)& (0+255),b
  6913   00060A  0E00               	movlw	0
  6914   00060C  6FB4               	movwf	_result& (0+255),b
  6915   00060E                     
  6916                           ; BSR set to: 0
  6917                           ;LAB4.c: 449:                     Borrado_En=0;
  6918   00060E  0E00               	movlw	0
  6919   000610  6FB3               	movwf	(_digito+1)& (0+255),b
  6920   000612  0E00               	movlw	0
  6921   000614  6FB2               	movwf	_digito& (0+255),b
  6922   000616                     
  6923                           ; BSR set to: 0
  6924                           ;LAB4.c: 450:                     count_En=0;
  6925   000616  0E00               	movlw	0
  6926   000618  6FB1               	movwf	(_times+1)& (0+255),b
  6927   00061A  0E00               	movlw	0
  6928   00061C  6FB0               	movwf	_times& (0+255),b
  6929   00061E                     
  6930                           ; BSR set to: 0
  6931                           ;LAB4.c: 451:                     result=0;
  6932   00061E  0E00               	movlw	0
  6933   000620  6FAF               	movwf	(_times_1+1)& (0+255),b
  6934   000622  0E00               	movlw	0
  6935   000624  6FAE               	movwf	_times_1& (0+255),b
  6936   000626                     
  6937                           ; BSR set to: 0
  6938                           ;LAB4.c: 452:                     digito=0;
  6939   000626  0E00               	movlw	0
  6940   000628  6FAD               	movwf	(_check+1)& (0+255),b
  6941   00062A  0E00               	movlw	0
  6942   00062C  6FAC               	movwf	_check& (0+255),b
  6943   00062E                     
  6944                           ; BSR set to: 0
  6945                           ;LAB4.c: 453:                     times=0;
  6946   00062E  0E00               	movlw	0
  6947   000630  6E40               	movwf	(_ok_en+1)^0,c
  6948   000632  0E00               	movlw	0
  6949   000634  6E3F               	movwf	_ok_en^0,c
  6950   000636                     
  6951                           ; BSR set to: 0
  6952                           ;LAB4.c: 454:                     times_1=0;
  6953   000636  0E00               	movlw	0
  6954   000638  6FBF               	movwf	(_state+1)& (0+255),b
  6955   00063A  0E01               	movlw	1
  6956   00063C  6FBE               	movwf	_state& (0+255),b
  6957   00063E  EF6D  F003         	goto	i1l201
  6958   000642                     i1l3957:
  6959                           
  6960                           ; BSR set to: 0
  6961   000642  0E03               	movlw	3
  6962   000644  19BE               	xorwf	_state& (0+255),w,b
  6963   000646  11BF               	iorwf	(_state+1)& (0+255),w,b
  6964   000648  A4D8               	btfss	status,2,c
  6965   00064A  EF29  F003         	goto	i1u292_21
  6966   00064E  EF2B  F003         	goto	i1u292_20
  6967   000652                     i1u292_21:
  6968   000652  EF6D  F003         	goto	i1l201
  6969   000656                     i1u292_20:
  6970   000656                     
  6971                           ; BSR set to: 0
  6972                           ;LAB4.c: 459:                     LATE=0b111;;LAB4.c: 461:                     LATDbits.
      +                          LATD1=0;
  6973   000656  0E00               	movlw	0
  6974   000658  6E40               	movwf	(_ok_en+1)^0,c
  6975   00065A  0E00               	movlw	0
  6976   00065C  6E3F               	movwf	_ok_en^0,c
  6977                           
  6978                           ;LAB4.c: 462:                     LATDbits.LATD2=0;
  6979   00065E  0E00               	movlw	0
  6980   000660  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  6981   000662  0E00               	movlw	0
  6982   000664  6FBC               	movwf	_Enter_en& (0+255),b
  6983                           
  6984                           ;LAB4.c: 463:                     LATDbits.LATD3=0;
  6985   000666  0E00               	movlw	0
  6986   000668  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  6987   00066A  0E00               	movlw	0
  6988   00066C  6FBA               	movwf	_Numpad_en& (0+255),b
  6989                           
  6990                           ;LAB4.c: 464:                   }
  6991   00066E  0E00               	movlw	0
  6992   000670  6E4C               	movwf	(_Keypad_en+1)^0,c
  6993   000672  0E00               	movlw	0
  6994   000674  6E4B               	movwf	_Keypad_en^0,c
  6995                           
  6996                           ;LAB4.c: 465:                   back_l_En=0;
  6997   000676  0E00               	movlw	0
  6998   000678  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6999   00067A  0E00               	movlw	0
  7000   00067C  6FB8               	movwf	_Borrado& (0+255),b
  7001                           
  7002                           ;LAB4.c: 466:                   reset_En=0;
  7003   00067E  0E00               	movlw	0
  7004   000680  6E4A               	movwf	(_Borrado_En+1)^0,c
  7005   000682  0E00               	movlw	0
  7006   000684  6E49               	movwf	_Borrado_En^0,c
  7007                           
  7008                           ;LAB4.c: 467:                   E_stop_En=0;
  7009   000686  0E00               	movlw	0
  7010   000688  6FB7               	movwf	(_count_En+1)& (0+255),b
  7011   00068A  0E00               	movlw	0
  7012   00068C  6FB6               	movwf	_count_En& (0+255),b
  7013                           
  7014                           ;LAB4.c: 468: 
  7015   00068E  0E00               	movlw	0
  7016   000690  6FB5               	movwf	(_result+1)& (0+255),b
  7017   000692  0E00               	movlw	0
  7018   000694  6FB4               	movwf	_result& (0+255),b
  7019                           
  7020                           ;LAB4.c: 469:                   }
  7021   000696  0E00               	movlw	0
  7022   000698  6FB3               	movwf	(_digito+1)& (0+255),b
  7023   00069A  0E00               	movlw	0
  7024   00069C  6FB2               	movwf	_digito& (0+255),b
  7025                           
  7026                           ;LAB4.c: 470:                   ok_flag=1;
  7027   00069E  0E00               	movlw	0
  7028   0006A0  6FB1               	movwf	(_times+1)& (0+255),b
  7029   0006A2  0E00               	movlw	0
  7030   0006A4  6FB0               	movwf	_times& (0+255),b
  7031                           
  7032                           ;LAB4.c: 471:                   break;
  7033   0006A6  0E00               	movlw	0
  7034   0006A8  6FAF               	movwf	(_times_1+1)& (0+255),b
  7035   0006AA  0E00               	movlw	0
  7036   0006AC  6FAE               	movwf	_times_1& (0+255),b
  7037                           
  7038                           ;LAB4.c: 472: 
  7039   0006AE  0E00               	movlw	0
  7040   0006B0  6FAD               	movwf	(_check+1)& (0+255),b
  7041   0006B2  0E00               	movlw	0
  7042   0006B4  6FAC               	movwf	_check& (0+255),b
  7043                           
  7044                           ;LAB4.c: 473:               case 12:
  7045   0006B6  0E00               	movlw	0
  7046   0006B8  6FBF               	movwf	(_state+1)& (0+255),b
  7047   0006BA  0E01               	movlw	1
  7048   0006BC  6FBE               	movwf	_state& (0+255),b
  7049                           
  7050                           ;LAB4.c: 474:                     contador=0;
  7051   0006BE  0E00               	movlw	0
  7052   0006C0  6FE7               	movwf	(_contador+1)& (0+255),b
  7053   0006C2  0E00               	movlw	0
  7054   0006C4  6FE6               	movwf	_contador& (0+255),b
  7055                           
  7056                           ;LAB4.c: 475:                     contador_dec=0;
  7057   0006C6  0E00               	movlw	0
  7058   0006C8  6FE5               	movwf	(_contador_dec+1)& (0+255),b
  7059   0006CA  0E00               	movlw	0
  7060   0006CC  6FE4               	movwf	_contador_dec& (0+255),b
  7061                           
  7062                           ;LAB4.c: 476:                     LATE=0b111;
  7063   0006CE  0E07               	movlw	7
  7064   0006D0  6E8D               	movwf	141,c	;volatile
  7065   0006D2                     
  7066                           ; BSR set to: 0
  7067                           ;LAB4.c: 477:                     LATDbits.LATD0=0;
  7068   0006D2  908C               	bcf	140,0,c	;volatile
  7069   0006D4                     
  7070                           ; BSR set to: 0
  7071                           ;LAB4.c: 478:                     LATDbits.LATD1=0;
  7072   0006D4  928C               	bcf	140,1,c	;volatile
  7073   0006D6                     
  7074                           ; BSR set to: 0
  7075                           ;LAB4.c: 479:                     LATDbits.LATD2=0;
  7076   0006D6  948C               	bcf	140,2,c	;volatile
  7077   0006D8                     
  7078                           ; BSR set to: 0
  7079                           ;LAB4.c: 480:                     LATDbits.LATD3=0;
  7080   0006D8  968C               	bcf	140,3,c	;volatile
  7081   0006DA                     i1l201:
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;LAB4.c: 482:                     reset_En=1;
  7085   0006DA  0E00               	movlw	0
  7086   0006DC  6E48               	movwf	(_back_l_En+1)^0,c
  7087   0006DE  0E00               	movlw	0
  7088   0006E0  6E47               	movwf	_back_l_En^0,c
  7089                           
  7090                           ;LAB4.c: 483:                     E_stop_En=0;
  7091   0006E2  0E00               	movlw	0
  7092   0006E4  6E46               	movwf	(_reset_En+1)^0,c
  7093   0006E6  0E00               	movlw	0
  7094   0006E8  6E45               	movwf	_reset_En^0,c
  7095                           
  7096                           ;LAB4.c: 484:                   break;
  7097   0006EA  0E00               	movlw	0
  7098   0006EC  6E44               	movwf	(_E_stop_En+1)^0,c
  7099   0006EE  0E00               	movlw	0
  7100   0006F0  6E43               	movwf	_E_stop_En^0,c
  7101   0006F2                     i1l197:
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;LAB4.c: 487:                 {
  7105   0006F2  0E00               	movlw	0
  7106   0006F4  6E42               	movwf	(_ok_flag+1)^0,c
  7107   0006F6  0E01               	movlw	1
  7108   0006F8  6E41               	movwf	_ok_flag^0,c
  7109                           
  7110                           ;LAB4.c: 488: 
  7111   0006FA  EF5F  F004         	goto	i1l4013
  7112   0006FE                     i1l3969:
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;LAB4.c: 491:                   Lcd_Write_String("Parada De");
  7116   0006FE  0E00               	movlw	0
  7117   000700  6FE7               	movwf	(_contador+1)& (0+255),b
  7118   000702  0E00               	movlw	0
  7119   000704  6FE6               	movwf	_contador& (0+255),b
  7120                           
  7121                           ;LAB4.c: 492:                   Lcd_Set_Cursor(2,1);
  7122   000706  0E00               	movlw	0
  7123   000708  6FE5               	movwf	(_contador_dec+1)& (0+255),b
  7124   00070A  0E00               	movlw	0
  7125   00070C  6FE4               	movwf	_contador_dec& (0+255),b
  7126                           
  7127                           ;LAB4.c: 493:                   Lcd_Write_String("Emrgencia");
  7128   00070E  0E07               	movlw	7
  7129   000710  6E8D               	movwf	141,c	;volatile
  7130   000712                     
  7131                           ; BSR set to: 0
  7132                           ;LAB4.c: 494: 
  7133   000712  908C               	bcf	140,0,c	;volatile
  7134   000714                     
  7135                           ; BSR set to: 0
  7136                           ;LAB4.c: 495:                   E_stop_En=1;
  7137   000714  928C               	bcf	140,1,c	;volatile
  7138   000716                     
  7139                           ; BSR set to: 0
  7140                           ;LAB4.c: 496:                 }
  7141   000716  948C               	bcf	140,2,c	;volatile
  7142   000718                     
  7143                           ; BSR set to: 0
  7144                           ;LAB4.c: 497: 
  7145   000718  968C               	bcf	140,3,c	;volatile
  7146   00071A                     
  7147                           ; BSR set to: 0
  7148                           ;LAB4.c: 498: 
  7149   00071A  C0B4  F0E0         	movff	_result,_re_pcs
  7150   00071E  C0B5  F0E1         	movff	_result+1,_re_pcs+1
  7151                           
  7152                           ;LAB4.c: 499: 
  7153   000722  0E00               	movlw	0
  7154   000724  6E46               	movwf	(_reset_En+1)^0,c
  7155   000726  0E01               	movlw	1
  7156   000728  6E45               	movwf	_reset_En^0,c
  7157                           
  7158                           ;LAB4.c: 500:                   break;
  7159   00072A  0E00               	movlw	0
  7160   00072C  6E44               	movwf	(_E_stop_En+1)^0,c
  7161   00072E  0E00               	movlw	0
  7162   000730  6E43               	movwf	_E_stop_En^0,c
  7163                           
  7164                           ;LAB4.c: 501: 
  7165   000732  EF5F  F004         	goto	i1l4013
  7166   000736                     i1l3981:
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;LAB4.c: 503:                     Enter_en=0;
  7170   000736  0E02               	movlw	2
  7171   000738  19BE               	xorwf	_state& (0+255),w,b
  7172   00073A  11BF               	iorwf	(_state+1)& (0+255),w,b
  7173   00073C  A4D8               	btfss	status,2,c
  7174   00073E  EFA3  F003         	goto	i1u293_21
  7175   000742  EFA5  F003         	goto	i1u293_20
  7176   000746                     i1u293_21:
  7177   000746  EF5F  F004         	goto	i1l4013
  7178   00074A                     i1u293_20:
  7179   00074A                     
  7180                           ; BSR set to: 0
  7181                           ;LAB4.c: 504:                     Numpad_en=0;;LAB4.c: 506:                     Borrado=
      +                          0;
  7182   00074A  EC6B  F013         	call	i1_Lcd_Clear	;wreg free
  7183   00074E                     
  7184                           ;LAB4.c: 507:                     Borrado_En=0;
  7185   00074E  0E01               	movlw	1
  7186   000750  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  7187   000752  0E01               	movlw	1
  7188   000754  ECEE  F00D         	call	i1_Lcd_Set_Cursor
  7189   000758                     
  7190                           ;LAB4.c: 508:                     count_En=0;
  7191   000758  0EDA               	movlw	low STR_16
  7192   00075A  6E06               	movwf	i1Lcd_Write_String@a^0,c
  7193   00075C  0E7F               	movlw	high STR_16
  7194   00075E  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  7195   000760  EC0E  F011         	call	i1_Lcd_Write_String	;wreg free
  7196   000764                     
  7197                           ;LAB4.c: 509:                     result=0;
  7198   000764  0E01               	movlw	1
  7199   000766  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  7200   000768  0E02               	movlw	2
  7201   00076A  ECEE  F00D         	call	i1_Lcd_Set_Cursor
  7202   00076E                     
  7203                           ;LAB4.c: 510:                     digito=0;
  7204   00076E  0ED0               	movlw	low STR_17
  7205   000770  6E06               	movwf	i1Lcd_Write_String@a^0,c
  7206   000772  0E7F               	movlw	high STR_17
  7207   000774  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  7208   000776  EC0E  F011         	call	i1_Lcd_Write_String	;wreg free
  7209   00077A                     
  7210                           ;LAB4.c: 512:                     times_1=0;
  7211   00077A  0E00               	movlw	0
  7212   00077C  6E44               	movwf	(_E_stop_En+1)^0,c
  7213   00077E  0E01               	movlw	1
  7214   000780  6E43               	movwf	_E_stop_En^0,c
  7215   000782  EF5F  F004         	goto	i1l4013
  7216   000786                     i1l3995:
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;LAB4.c: 520:                     LATDbits.LATD2=0;
  7220   000786  0E00               	movlw	0
  7221   000788  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  7222   00078A  0E00               	movlw	0
  7223   00078C  6FBC               	movwf	_Enter_en& (0+255),b
  7224                           
  7225                           ;LAB4.c: 521:                     LATDbits.LATD3=0;
  7226   00078E  0E00               	movlw	0
  7227   000790  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  7228   000792  0E00               	movlw	0
  7229   000794  6FBA               	movwf	_Numpad_en& (0+255),b
  7230                           
  7231                           ;LAB4.c: 522: 
  7232   000796  0E00               	movlw	0
  7233   000798  6E4C               	movwf	(_Keypad_en+1)^0,c
  7234   00079A  0E00               	movlw	0
  7235   00079C  6E4B               	movwf	_Keypad_en^0,c
  7236                           
  7237                           ;LAB4.c: 523:                   break;
  7238   00079E  0E00               	movlw	0
  7239   0007A0  6FB9               	movwf	(_Borrado+1)& (0+255),b
  7240   0007A2  0E00               	movlw	0
  7241   0007A4  6FB8               	movwf	_Borrado& (0+255),b
  7242                           
  7243                           ;LAB4.c: 524:               case 16:
  7244   0007A6  0E00               	movlw	0
  7245   0007A8  6E4A               	movwf	(_Borrado_En+1)^0,c
  7246   0007AA  0E00               	movlw	0
  7247   0007AC  6E49               	movwf	_Borrado_En^0,c
  7248                           
  7249                           ;LAB4.c: 525:                   back_l_En=1;
  7250   0007AE  0E00               	movlw	0
  7251   0007B0  6FB7               	movwf	(_count_En+1)& (0+255),b
  7252   0007B2  0E00               	movlw	0
  7253   0007B4  6FB6               	movwf	_count_En& (0+255),b
  7254                           
  7255                           ;LAB4.c: 526:                   LATAbits.LA3=~LATAbits.LA3;
  7256   0007B6  0E00               	movlw	0
  7257   0007B8  6FB5               	movwf	(_result+1)& (0+255),b
  7258   0007BA  0E00               	movlw	0
  7259   0007BC  6FB4               	movwf	_result& (0+255),b
  7260                           
  7261                           ;LAB4.c: 527: 
  7262   0007BE  0E00               	movlw	0
  7263   0007C0  6FB3               	movwf	(_digito+1)& (0+255),b
  7264   0007C2  0E00               	movlw	0
  7265   0007C4  6FB2               	movwf	_digito& (0+255),b
  7266                           
  7267                           ;LAB4.c: 528:                   break;
  7268   0007C6  0E00               	movlw	0
  7269   0007C8  6FB1               	movwf	(_times+1)& (0+255),b
  7270   0007CA  0E00               	movlw	0
  7271   0007CC  6FB0               	movwf	_times& (0+255),b
  7272                           
  7273                           ;LAB4.c: 529:               default:
  7274   0007CE  0E00               	movlw	0
  7275   0007D0  6FAF               	movwf	(_times_1+1)& (0+255),b
  7276   0007D2  0E00               	movlw	0
  7277   0007D4  6FAE               	movwf	_times_1& (0+255),b
  7278                           
  7279                           ;LAB4.c: 530:                 return;
  7280   0007D6  0E00               	movlw	0
  7281   0007D8  6FAD               	movwf	(_check+1)& (0+255),b
  7282   0007DA  0E00               	movlw	0
  7283   0007DC  6FAC               	movwf	_check& (0+255),b
  7284                           
  7285                           ;LAB4.c: 531:            }
  7286   0007DE  0E00               	movlw	0
  7287   0007E0  6FBF               	movwf	(_state+1)& (0+255),b
  7288   0007E2  0E01               	movlw	1
  7289   0007E4  6FBE               	movwf	_state& (0+255),b
  7290                           
  7291                           ;LAB4.c: 532: 
  7292   0007E6  0E00               	movlw	0
  7293   0007E8  6FE7               	movwf	(_contador+1)& (0+255),b
  7294   0007EA  0E00               	movlw	0
  7295   0007EC  6FE6               	movwf	_contador& (0+255),b
  7296                           
  7297                           ;LAB4.c: 533:         }
  7298   0007EE  0E00               	movlw	0
  7299   0007F0  6FE5               	movwf	(_contador_dec+1)& (0+255),b
  7300   0007F2  0E00               	movlw	0
  7301   0007F4  6FE4               	movwf	_contador_dec& (0+255),b
  7302                           
  7303                           ;LAB4.c: 534: 
  7304   0007F6  0E07               	movlw	7
  7305   0007F8  6E8D               	movwf	141,c	;volatile
  7306   0007FA                     
  7307                           ; BSR set to: 0
  7308                           ;LAB4.c: 535:           if(Numpad_en==1 && Borrado==0 && back_l_En==0 && reset_En==0 && 
      +                          ok_flag==0)
  7309   0007FA  908C               	bcf	140,0,c	;volatile
  7310   0007FC                     
  7311                           ; BSR set to: 0
  7312                           ;LAB4.c: 536:           {
  7313   0007FC  928C               	bcf	140,1,c	;volatile
  7314   0007FE                     
  7315                           ; BSR set to: 0
  7316                           ;LAB4.c: 537:             sprintf(num_str, "%d", num);
  7317   0007FE  948C               	bcf	140,2,c	;volatile
  7318   000800                     
  7319                           ; BSR set to: 0
  7320                           ;LAB4.c: 538:             Enter_en=1;
  7321   000800  968C               	bcf	140,3,c	;volatile
  7322                           
  7323                           ;LAB4.c: 540: 
  7324   000802  EF5F  F004         	goto	i1l4013
  7325   000806                     i1l4005:
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;LAB4.c: 542:         _delay((unsigned long)((100)*(8000000UL/4000.0)));
  7329   000806  0E00               	movlw	0
  7330   000808  6E48               	movwf	(_back_l_En+1)^0,c
  7331   00080A  0E01               	movlw	1
  7332   00080C  6E47               	movwf	_back_l_En^0,c
  7333   00080E                     
  7334                           ; BSR set to: 0
  7335                           ;LAB4.c: 543: 
  7336   00080E  B689               	btfsc	137,3,c	;volatile
  7337   000810  EF0C  F004         	goto	i1u294_21
  7338   000814  EF0F  F004         	goto	i1u294_20
  7339   000818                     i1u294_21:
  7340   000818  0E01               	movlw	1
  7341   00081A  EF10  F004         	goto	i1u294_26
  7342   00081E                     i1u294_20:
  7343   00081E  0E00               	movlw	0
  7344   000820                     i1u294_26:
  7345   000820  0AFF               	xorlw	255
  7346   000822  6E32               	movwf	??_LOW_PRIORITY^0,c
  7347   000824  4632               	rlncf	??_LOW_PRIORITY^0,f,c
  7348   000826  4632               	rlncf	??_LOW_PRIORITY^0,f,c
  7349   000828  4632               	rlncf	??_LOW_PRIORITY^0,f,c
  7350   00082A  5089               	movf	137,w,c	;volatile
  7351   00082C  1832               	xorwf	??_LOW_PRIORITY^0,w,c
  7352   00082E  0BF7               	andlw	-9
  7353   000830  1832               	xorwf	??_LOW_PRIORITY^0,w,c
  7354   000832  6E89               	movwf	137,c	;volatile
  7355                           
  7356                           ;LAB4.c: 545: 
  7357   000834  EF5F  F004         	goto	i1l4013
  7358   000838                     i1l4011:
  7359                           
  7360                           ; BSR set to: 0
  7361   000838  504D               	movf	_Tecla^0,w,c
  7362                           
  7363                           ; Switch size 1, requested type "simple"
  7364                           ; Number of cases is 16, Range of values is 1 to 16
  7365                           ; switch strategies available:
  7366                           ; Name         Instructions Cycles
  7367                           ; simple_byte           49    25 (average)
  7368                           ;	Chosen strategy is simple_byte
  7369   00083A  0A01               	xorlw	1	; case 1
  7370   00083C  B4D8               	btfsc	status,2,c
  7371   00083E  EF12  F001         	goto	i1l3841
  7372   000842  0A03               	xorlw	3	; case 2
  7373   000844  B4D8               	btfsc	status,2,c
  7374   000846  EF31  F001         	goto	i1l3845
  7375   00084A  0A01               	xorlw	1	; case 3
  7376   00084C  B4D8               	btfsc	status,2,c
  7377   00084E  EF4C  F001         	goto	i1l3849
  7378   000852  0A07               	xorlw	7	; case 4
  7379   000854  B4D8               	btfsc	status,2,c
  7380   000856  EF85  F002         	goto	i1l3905
  7381   00085A  0A01               	xorlw	1	; case 5
  7382   00085C  B4D8               	btfsc	status,2,c
  7383   00085E  EF6B  F001         	goto	i1l3853
  7384   000862  0A03               	xorlw	3	; case 6
  7385   000864  B4D8               	btfsc	status,2,c
  7386   000866  EF8A  F001         	goto	i1l3857
  7387   00086A  0A01               	xorlw	1	; case 7
  7388   00086C  B4D8               	btfsc	status,2,c
  7389   00086E  EFA9  F001         	goto	i1l3861
  7390   000872  0A0F               	xorlw	15	; case 8
  7391   000874  B4D8               	btfsc	status,2,c
  7392   000876  EF44  F002         	goto	i1l3881
  7393   00087A  0A01               	xorlw	1	; case 9
  7394   00087C  B4D8               	btfsc	status,2,c
  7395   00087E  EFC8  F001         	goto	i1l3865
  7396   000882  0A03               	xorlw	3	; case 10
  7397   000884  B4D8               	btfsc	status,2,c
  7398   000886  EFE7  F001         	goto	i1l3869
  7399   00088A  0A01               	xorlw	1	; case 11
  7400   00088C  B4D8               	btfsc	status,2,c
  7401   00088E  EF06  F002         	goto	i1l3873
  7402   000892  0A07               	xorlw	7	; case 12
  7403   000894  B4D8               	btfsc	status,2,c
  7404   000896  EF7F  F003         	goto	i1l3969
  7405   00089A  0A01               	xorlw	1	; case 13
  7406   00089C  B4D8               	btfsc	status,2,c
  7407   00089E  EF9B  F003         	goto	i1l3981
  7408   0008A2  0A03               	xorlw	3	; case 14
  7409   0008A4  B4D8               	btfsc	status,2,c
  7410   0008A6  EF25  F002         	goto	i1l3877
  7411   0008AA  0A01               	xorlw	1	; case 15
  7412   0008AC  B4D8               	btfsc	status,2,c
  7413   0008AE  EFC3  F003         	goto	i1l3995
  7414   0008B2  0A1F               	xorlw	31	; case 16
  7415   0008B4  B4D8               	btfsc	status,2,c
  7416   0008B6  EF03  F004         	goto	i1l4005
  7417   0008BA  EFD2  F004         	goto	i1l209
  7418   0008BE                     i1l4013:
  7419                           
  7420                           ;LAB4.c: 552:      INTCONbits.RBIF=1;
  7421   0008BE  0100               	movlb	0	; () banked
  7422   0008C0  05BA               	decf	_Numpad_en& (0+255),w,b
  7423   0008C2  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  7424   0008C4  A4D8               	btfss	status,2,c
  7425   0008C6  EF67  F004         	goto	i1u295_21
  7426   0008CA  EF69  F004         	goto	i1u295_20
  7427   0008CE                     i1u295_21:
  7428   0008CE  EF9F  F004         	goto	i1l4027
  7429   0008D2                     i1u295_20:
  7430   0008D2                     
  7431                           ; BSR set to: 0
  7432   0008D2  51B8               	movf	_Borrado& (0+255),w,b
  7433   0008D4  11B9               	iorwf	(_Borrado+1)& (0+255),w,b
  7434   0008D6  A4D8               	btfss	status,2,c
  7435   0008D8  EF70  F004         	goto	i1u296_21
  7436   0008DC  EF72  F004         	goto	i1u296_20
  7437   0008E0                     i1u296_21:
  7438   0008E0  EF9F  F004         	goto	i1l4027
  7439   0008E4                     i1u296_20:
  7440   0008E4                     
  7441                           ; BSR set to: 0
  7442   0008E4  5047               	movf	_back_l_En^0,w,c
  7443   0008E6  1048               	iorwf	(_back_l_En+1)^0,w,c
  7444   0008E8  A4D8               	btfss	status,2,c
  7445   0008EA  EF79  F004         	goto	i1u297_21
  7446   0008EE  EF7B  F004         	goto	i1u297_20
  7447   0008F2                     i1u297_21:
  7448   0008F2  EF9F  F004         	goto	i1l4027
  7449   0008F6                     i1u297_20:
  7450   0008F6                     
  7451                           ; BSR set to: 0
  7452   0008F6  5045               	movf	_reset_En^0,w,c
  7453   0008F8  1046               	iorwf	(_reset_En+1)^0,w,c
  7454   0008FA  A4D8               	btfss	status,2,c
  7455   0008FC  EF82  F004         	goto	i1u298_21
  7456   000900  EF84  F004         	goto	i1u298_20
  7457   000904                     i1u298_21:
  7458   000904  EF9F  F004         	goto	i1l4027
  7459   000908                     i1u298_20:
  7460   000908                     
  7461                           ; BSR set to: 0
  7462   000908  5041               	movf	_ok_flag^0,w,c
  7463   00090A  1042               	iorwf	(_ok_flag+1)^0,w,c
  7464   00090C  A4D8               	btfss	status,2,c
  7465   00090E  EF8B  F004         	goto	i1u299_21
  7466   000912  EF8D  F004         	goto	i1u299_20
  7467   000916                     i1u299_21:
  7468   000916  EF9F  F004         	goto	i1l4027
  7469   00091A                     i1u299_20:
  7470   00091A                     
  7471                           ; BSR set to: 0
  7472                           ;LAB4.c: 553: ;LAB4.c: 554:      Numpad_en=0;
  7473   00091A  0ED6               	movlw	low _num_str
  7474   00091C  6E1F               	movwf	i1sprintf@s^0,c
  7475   00091E  6A20               	clrf	(i1sprintf@s+1)^0,c
  7476   000920  0E6D               	movlw	low (STR_5+13)
  7477   000922  6E21               	movwf	i1sprintf@fmt^0,c
  7478   000924  0E7F               	movlw	high (STR_5+13)
  7479   000926  6E22               	movwf	(i1sprintf@fmt+1)^0,c
  7480   000928  C0E2  F023         	movff	_num,?i1_sprintf+4
  7481   00092C  C0E3  F024         	movff	_num+1,?i1_sprintf+5
  7482   000930  EC43  F012         	call	i1_sprintf	;wreg free
  7483   000934                     
  7484                           ;LAB4.c: 555:      Borrado=0;
  7485   000934  0E00               	movlw	0
  7486   000936  0100               	movlb	0	; () banked
  7487   000938  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  7488   00093A  0E01               	movlw	1
  7489   00093C  6FBC               	movwf	_Enter_en& (0+255),b
  7490   00093E                     i1l4027:
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;LAB4.c: 558:      LATE=0b110;
  7494   00093E  0EF0               	movlw	240
  7495   000940  6E8A               	movwf	138,c	;volatile
  7496   000942                     
  7497                           ; BSR set to: 0
  7498                           ;LAB4.c: 559:      LATAbits.LA3=1;
  7499   000942  0E02               	movlw	2
  7500   000944  6E33               	movwf	(??_LOW_PRIORITY+1)^0,c
  7501   000946  0E04               	movlw	4
  7502   000948  6E32               	movwf	??_LOW_PRIORITY^0,c
  7503   00094A  0EBA               	movlw	186
  7504   00094C                     i1u330_27:
  7505   00094C  2EE8               	decfsz	wreg,f,c
  7506   00094E  D7FE               	bra	i1u330_27
  7507   000950  2E32               	decfsz	??_LOW_PRIORITY^0,f,c
  7508   000952  D7FC               	bra	i1u330_27
  7509   000954  2E33               	decfsz	(??_LOW_PRIORITY+1)^0,f,c
  7510   000956  D7FA               	bra	i1u330_27
  7511   000958  D000               	nop2	
  7512   00095A                     i1l4031:
  7513                           
  7514                           ;LAB4.c: 567: 
  7515   00095A  0443               	decf	_E_stop_En^0,w,c
  7516   00095C  1044               	iorwf	(_E_stop_En+1)^0,w,c
  7517   00095E  A4D8               	btfss	status,2,c
  7518   000960  EFB4  F004         	goto	i1u300_21
  7519   000964  EFB6  F004         	goto	i1u300_20
  7520   000968                     i1u300_21:
  7521   000968  EFD1  F004         	goto	i1l211
  7522   00096C                     i1u300_20:
  7523   00096C                     
  7524                           ;LAB4.c: 568: ;LAB4.c: 569: 
  7525   00096C  80F2               	bsf	242,0,c	;volatile
  7526   00096E                     
  7527                           ;LAB4.c: 571: 
  7528   00096E  0E00               	movlw	0
  7529   000970  0100               	movlb	0	; () banked
  7530   000972  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  7531   000974  0E00               	movlw	0
  7532   000976  6FBA               	movwf	_Numpad_en& (0+255),b
  7533                           
  7534                           ;LAB4.c: 572:   }
  7535   000978  0E00               	movlw	0
  7536   00097A  6FB9               	movwf	(_Borrado+1)& (0+255),b
  7537   00097C  0E00               	movlw	0
  7538   00097E  6FB8               	movwf	_Borrado& (0+255),b
  7539   000980  0E00               	movlw	0
  7540   000982  6E48               	movwf	(_back_l_En+1)^0,c
  7541   000984  0E00               	movlw	0
  7542   000986  6E47               	movwf	_back_l_En^0,c
  7543   000988  0E00               	movlw	0
  7544   00098A  6E46               	movwf	(_reset_En+1)^0,c
  7545   00098C  0E00               	movlw	0
  7546   00098E  6E45               	movwf	_reset_En^0,c
  7547   000990  0E06               	movlw	6
  7548   000992  6E8D               	movwf	141,c	;volatile
  7549   000994                     
  7550                           ; BSR set to: 0
  7551   000994  8689               	bsf	137,3,c	;volatile
  7552   000996  0E00               	movlw	0
  7553   000998  6FB7               	movwf	(_count_En+1)& (0+255),b
  7554   00099A  0E00               	movlw	0
  7555   00099C  6FB6               	movwf	_count_En& (0+255),b
  7556   00099E  EFD2  F004         	goto	i1l209
  7557   0009A2                     i1l211:
  7558   0009A2  90F2               	bcf	242,0,c	;volatile
  7559   0009A4                     i1l209:
  7560   0009A4  C03E  FFF5         	movff	??_LOW_PRIORITY+12,tablat
  7561   0009A8  C03D  FFF8         	movff	??_LOW_PRIORITY+11,tblptru
  7562   0009AC  C03C  FFF7         	movff	??_LOW_PRIORITY+10,tblptrh
  7563   0009B0  C03B  FFF6         	movff	??_LOW_PRIORITY+9,tblptrl
  7564   0009B4  C03A  FFDA         	movff	??_LOW_PRIORITY+8,fsr2h
  7565   0009B8  C039  FFD9         	movff	??_LOW_PRIORITY+7,fsr2l
  7566   0009BC  C038  FFE2         	movff	??_LOW_PRIORITY+6,fsr1h
  7567   0009C0  C037  FFE1         	movff	??_LOW_PRIORITY+5,fsr1l
  7568   0009C4  C036  FFE0         	movff	??_LOW_PRIORITY+4,bsr
  7569   0009C8  C035  FFE8         	movff	??_LOW_PRIORITY+3,wreg
  7570   0009CC  C034  FFD8         	movff	??_LOW_PRIORITY+2,status
  7571   0009D0  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7572   0009D2  0010               	retfie	
  7573   0009D4                     __end_of_LOW_PRIORITY:
  7574                           	callstack 0
  7575                           
  7576 ;; *************** function i1_sprintf *****************
  7577 ;; Defined at:
  7578 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  s               2   30[COMRAM] PTR unsigned char 
  7581 ;;		 -> re_pcs_str(20), counted_pcs_str(20), main@countdown(20), num_str(10), 
  7582 ;;  fmt             2   32[COMRAM] PTR const unsigned char 
  7583 ;;		 -> STR_18(3), STR_7(13), STR_6(12), STR_5(16), 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  f              12   37[COMRAM] struct _IO_FILE
  7586 ;;  ret             2    0        int 
  7587 ;;  ap              1   36[COMRAM] PTR void [1]
  7588 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  2   30[COMRAM] int 
  7591 ;; Registers used:
  7592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7598 ;;      Params:         6       0       0       0       0       0       0       0       0
  7599 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7601 ;;      Totals:        19       0       0       0       0       0       0       0       0
  7602 ;;Total ram usage:       19 bytes
  7603 ;; Hardware stack levels used: 1
  7604 ;; Hardware stack levels required when called: 5
  7605 ;; This function calls:
  7606 ;;		i1_vfprintf
  7607 ;; This function is called by:
  7608 ;;		_LOW_PRIORITY
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text28
  7613   002486                     __ptext28:
  7614                           	callstack 0
  7615   002486                     i1_sprintf:
  7616                           	callstack 19
  7617   002486  0E23               	movlw	low (?i1_sprintf+4)
  7618   002488  6E25               	movwf	i1sprintf@ap^0,c
  7619   00248A  C01F  F026         	movff	i1sprintf@s,i1sprintf@f
  7620   00248E  C020  F027         	movff	i1sprintf@s+1,i1sprintf@f+1
  7621   002492  0E00               	movlw	0
  7622   002494  6E2A               	movwf	(i1sprintf@f+4)^0,c
  7623   002496  0E00               	movlw	0
  7624   002498  6E29               	movwf	(i1sprintf@f+3)^0,c
  7625   00249A  0E00               	movlw	0
  7626   00249C  6E31               	movwf	(i1sprintf@f+11)^0,c
  7627   00249E  0E00               	movlw	0
  7628   0024A0  6E30               	movwf	(i1sprintf@f+10)^0,c
  7629   0024A2  0E26               	movlw	low i1sprintf@f
  7630   0024A4  6E19               	movwf	i1vfprintf@fp^0,c
  7631   0024A6  C021  F01A         	movff	i1sprintf@fmt,i1vfprintf@fmt
  7632   0024AA  C022  F01B         	movff	i1sprintf@fmt+1,i1vfprintf@fmt+1
  7633   0024AE  0E25               	movlw	low i1sprintf@ap
  7634   0024B0  6E1C               	movwf	i1vfprintf@ap^0,c
  7635   0024B2  EC22  F012         	call	i1_vfprintf	;wreg free
  7636   0024B6  5029               	movf	(i1sprintf@f+3)^0,w,c
  7637   0024B8  241F               	addwf	i1sprintf@s^0,w,c
  7638   0024BA  6ED9               	movwf	fsr2l,c
  7639   0024BC  502A               	movf	(i1sprintf@f+4)^0,w,c
  7640   0024BE  2020               	addwfc	(i1sprintf@s+1)^0,w,c
  7641   0024C0  6EDA               	movwf	fsr2h,c
  7642   0024C2  6ADF               	clrf	indf2,c
  7643   0024C4  0012               	return		;funcret
  7644   0024C6                     __end_ofi1_sprintf:
  7645                           	callstack 0
  7646                           
  7647 ;; *************** function i1_vfprintf *****************
  7648 ;; Defined at:
  7649 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  7652 ;;		 -> i1sprintf@f(12), sprintf@f(12), 
  7653 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
  7654 ;;		 -> STR_18(3), STR_7(13), STR_6(12), STR_5(16), 
  7655 ;;  ap              1   27[COMRAM] PTR PTR void 
  7656 ;;		 -> i1sprintf@ap(1), sprintf@ap(1), 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;  cfmt            2   28[COMRAM] PTR unsigned char 
  7659 ;;		 -> STR_18(3), STR_7(13), STR_6(12), STR_5(16), 
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  2   24[COMRAM] int 
  7662 ;; Registers used:
  7663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7669 ;;      Params:         4       0       0       0       0       0       0       0       0
  7670 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7672 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7673 ;;Total ram usage:        6 bytes
  7674 ;; Hardware stack levels used: 1
  7675 ;; Hardware stack levels required when called: 4
  7676 ;; This function calls:
  7677 ;;		i1_vfpfcnvrt
  7678 ;; This function is called by:
  7679 ;;		i1_sprintf
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text29
  7684   002444                     __ptext29:
  7685                           	callstack 0
  7686   002444                     i1_vfprintf:
  7687                           	callstack 19
  7688   002444                     
  7689                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7690   002444  C01A  F01D         	movff	i1vfprintf@fmt,i1vfprintf@cfmt
  7691   002448  C01B  F01E         	movff	i1vfprintf@fmt+1,i1vfprintf@cfmt+1
  7692                           
  7693                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7694   00244C  EF30  F012         	goto	i1l3239
  7695   002450                     i1l3237:
  7696                           
  7697                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7698   002450  C019  F00C         	movff	i1vfprintf@fp,i1vfpfcnvrt@fp
  7699   002454  0E1D               	movlw	low i1vfprintf@cfmt
  7700   002456  6E0D               	movwf	i1vfpfcnvrt@fmt^0,c
  7701   002458  C01C  F00E         	movff	i1vfprintf@ap,i1vfpfcnvrt@ap
  7702   00245C  ECEF  F00B         	call	i1_vfpfcnvrt	;wreg free
  7703   002460                     i1l3239:
  7704                           
  7705                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7706   002460  C01D  FFF6         	movff	i1vfprintf@cfmt,tblptrl
  7707   002464  C01E  FFF7         	movff	i1vfprintf@cfmt+1,tblptrh
  7708   002468                     	if	0	;tblptru may be non-zero
  7709   002468                     	endif
  7710   002468                     	if	0	;tblptru may be non-zero
  7711   002468                     	endif
  7712   002468  0008               	tblrd		*
  7713   00246A  50F5               	movf	tablat,w,c
  7714   00246C  0900               	iorlw	0
  7715   00246E  A4D8               	btfss	status,2,c
  7716   002470  EF3C  F012         	goto	i1u230_21
  7717   002474  EF3E  F012         	goto	i1u230_20
  7718   002478                     i1u230_21:
  7719   002478  EF28  F012         	goto	i1l3237
  7720   00247C                     i1u230_20:
  7721   00247C                     
  7722                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7723   00247C  0E00               	movlw	0
  7724   00247E  6E1A               	movwf	(?i1_vfprintf+1)^0,c
  7725   002480  0E00               	movlw	0
  7726   002482  6E19               	movwf	?i1_vfprintf^0,c
  7727   002484  0012               	return		;funcret
  7728   002486                     __end_ofi1_vfprintf:
  7729                           	callstack 0
  7730                           
  7731 ;; *************** function i1_vfpfcnvrt *****************
  7732 ;; Defined at:
  7733 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  7736 ;;		 -> i1sprintf@f(12), sprintf@f(12), 
  7737 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  7738 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
  7739 ;;  ap              1   13[COMRAM] PTR PTR void 
  7740 ;;		 -> i1sprintf@ap(1), sprintf@ap(1), 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  convarg         4   19[COMRAM] struct .
  7743 ;;  cp              2   17[COMRAM] PTR unsigned char 
  7744 ;;		 -> STR_18(3), STR_7(13), STR_6(12), STR_5(16), 
  7745 ;;  c               1   23[COMRAM] unsigned char 
  7746 ;;  done            1   16[COMRAM] _Bool 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7756 ;;      Params:         3       0       0       0       0       0       0       0       0
  7757 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7758 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7759 ;;      Totals:        13       0       0       0       0       0       0       0       0
  7760 ;;Total ram usage:       13 bytes
  7761 ;; Hardware stack levels used: 1
  7762 ;; Hardware stack levels required when called: 3
  7763 ;; This function calls:
  7764 ;;		i1___awdiv
  7765 ;;		i1___awmod
  7766 ;;		i1_abs
  7767 ;;		i1_fputc
  7768 ;; This function is called by:
  7769 ;;		i1_vfprintf
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text30
  7774   0017DE                     __ptext30:
  7775                           	callstack 0
  7776   0017DE                     i1_vfpfcnvrt:
  7777                           	callstack 19
  7778   0017DE                     
  7779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7780   0017DE  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7781   0017E0  6ED9               	movwf	fsr2l,c
  7782   0017E2  6ADA               	clrf	fsr2h,c
  7783   0017E4  CFDE FFF6          	movff	postinc2,tblptrl
  7784   0017E8  CFDD FFF7          	movff	postdec2,tblptrh
  7785   0017EC                     	if	0	;tblptru may be non-zero
  7786   0017EC                     	endif
  7787   0017EC                     	if	0	;tblptru may be non-zero
  7788   0017EC                     	endif
  7789   0017EC  0008               	tblrd		*
  7790   0017EE  50F5               	movf	tablat,w,c
  7791   0017F0  0A25               	xorlw	37
  7792   0017F2  A4D8               	btfss	status,2,c
  7793   0017F4  EFFE  F00B         	goto	i1u204_21
  7794   0017F8  EF00  F00C         	goto	i1u204_20
  7795   0017FC                     i1u204_21:
  7796   0017FC  EFCE  F00C         	goto	i1l3007
  7797   001800                     i1u204_20:
  7798   001800                     
  7799                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7800   001800  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7801   001802  6ED9               	movwf	fsr2l,c
  7802   001804  6ADA               	clrf	fsr2h,c
  7803   001806  2ADE               	incf	postinc2,f,c
  7804   001808  0E00               	movlw	0
  7805   00180A  22DD               	addwfc	postdec2,f,c
  7806   00180C                     
  7807                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7808   00180C  0E00               	movlw	0
  7809   00180E  0100               	movlb	0	; () banked
  7810   001810  6FA9               	movwf	(_width+1)& (0+255),b
  7811   001812  0E00               	movlw	0
  7812   001814  6FA8               	movwf	_width& (0+255),b
  7813   001816  C0A8  F0C0         	movff	_width,_flags
  7814   00181A                     
  7815                           ; BSR set to: 0
  7816                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7817   00181A  69AA               	setf	_prec& (0+255),b
  7818   00181C  69AB               	setf	(_prec+1)& (0+255),b
  7819   00181E                     
  7820                           ; BSR set to: 0
  7821                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  7822   00181E  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7823   001820  6ED9               	movwf	fsr2l,c
  7824   001822  6ADA               	clrf	fsr2h,c
  7825   001824  CFDE F012          	movff	postinc2,i1vfpfcnvrt@cp
  7826   001828  CFDD F013          	movff	postdec2,i1vfpfcnvrt@cp+1
  7827   00182C                     
  7828                           ; BSR set to: 0
  7829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7830   00182C  C012  FFF6         	movff	i1vfpfcnvrt@cp,tblptrl
  7831   001830  C013  FFF7         	movff	i1vfpfcnvrt@cp+1,tblptrh
  7832   001834                     	if	0	;tblptru may be non-zero
  7833   001834                     	endif
  7834   001834                     	if	0	;tblptru may be non-zero
  7835   001834                     	endif
  7836   001834  0008               	tblrd		*
  7837   001836  50F5               	movf	tablat,w,c
  7838   001838  0A64               	xorlw	100
  7839   00183A  B4D8               	btfsc	status,2,c
  7840   00183C  EF22  F00C         	goto	i1u205_21
  7841   001840  EF24  F00C         	goto	i1u205_20
  7842   001844                     i1u205_21:
  7843   001844  EF32  F00C         	goto	i1l2977
  7844   001848                     i1u205_20:
  7845   001848                     
  7846                           ; BSR set to: 0
  7847   001848  C012  FFF6         	movff	i1vfpfcnvrt@cp,tblptrl
  7848   00184C  C013  FFF7         	movff	i1vfpfcnvrt@cp+1,tblptrh
  7849   001850                     	if	0	;tblptru may be non-zero
  7850   001850                     	endif
  7851   001850                     	if	0	;tblptru may be non-zero
  7852   001850                     	endif
  7853   001850  0008               	tblrd		*
  7854   001852  50F5               	movf	tablat,w,c
  7855   001854  0A69               	xorlw	105
  7856   001856  A4D8               	btfss	status,2,c
  7857   001858  EF30  F00C         	goto	i1u206_21
  7858   00185C  EF32  F00C         	goto	i1u206_20
  7859   001860                     i1u206_21:
  7860   001860  EFC6  F00C         	goto	i1l3003
  7861   001864                     i1u206_20:
  7862   001864                     i1l2977:
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7866   001864  500E               	movf	i1vfpfcnvrt@ap^0,w,c
  7867   001866  6ED9               	movwf	fsr2l,c
  7868   001868  6ADA               	clrf	fsr2h,c
  7869   00186A  0E02               	movlw	2
  7870   00186C  26DF               	addwf	indf2,f,c
  7871   00186E  5CDF               	subwf	indf2,w,c
  7872   001870  6ED9               	movwf	fsr2l,c
  7873   001872  6ADA               	clrf	fsr2h,c
  7874   001874  CFDE F014          	movff	postinc2,i1vfpfcnvrt@convarg
  7875   001878  CFDE F015          	movff	postinc2,i1vfpfcnvrt@convarg+1
  7876   00187C                     
  7877                           ; BSR set to: 0
  7878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  7879   00187C  0E01               	movlw	1
  7880   00187E  2412               	addwf	i1vfpfcnvrt@cp^0,w,c
  7881   001880  6E0F               	movwf	??i1_vfpfcnvrt^0,c
  7882   001882  0E00               	movlw	0
  7883   001884  2013               	addwfc	(i1vfpfcnvrt@cp+1)^0,w,c
  7884   001886  6E10               	movwf	(??i1_vfpfcnvrt+1)^0,c
  7885   001888  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7886   00188A  6ED9               	movwf	fsr2l,c
  7887   00188C  6ADA               	clrf	fsr2h,c
  7888   00188E  C00F  FFDE         	movff	??i1_vfpfcnvrt,postinc2
  7889   001892  C010  FFDD         	movff	??i1_vfpfcnvrt+1,postdec2
  7890   001896                     
  7891                           ; BSR set to: 0
  7892                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  7893   001896  0E20               	movlw	32
  7894   001898  6E18               	movwf	i1vfpfcnvrt@c^0,c
  7895                           
  7896                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  7897   00189A  BE15               	btfsc	(i1vfpfcnvrt@convarg+1)^0,7,c
  7898   00189C  EF52  F00C         	goto	i1u207_21
  7899   0018A0  EF55  F00C         	goto	i1u207_20
  7900   0018A4                     i1u207_21:
  7901   0018A4  0E01               	movlw	1
  7902   0018A6  EF56  F00C         	goto	i1u208_20
  7903   0018AA                     i1u207_20:
  7904   0018AA  0E00               	movlw	0
  7905   0018AC                     i1u208_20:
  7906   0018AC  6E11               	movwf	i1vfpfcnvrt@done^0,c
  7907   0018AE                     i1l2983:
  7908                           
  7909                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  7910   0018AE  0618               	decf	i1vfpfcnvrt@c^0,f,c
  7911   0018B0  0E00               	movlw	low _dbuf
  7912   0018B2  2418               	addwf	i1vfpfcnvrt@c^0,w,c
  7913   0018B4  6ED9               	movwf	fsr2l,c
  7914   0018B6  6ADA               	clrf	fsr2h,c
  7915   0018B8  0E01               	movlw	high _dbuf
  7916   0018BA  22DA               	addwfc	fsr2h,f,c
  7917   0018BC  C014  F002         	movff	i1vfpfcnvrt@convarg,i1___awmod@dividend
  7918   0018C0  C015  F003         	movff	i1vfpfcnvrt@convarg+1,i1___awmod@dividend+1
  7919   0018C4  0E00               	movlw	0
  7920   0018C6  6E05               	movwf	(i1___awmod@divisor+1)^0,c
  7921   0018C8  0E0A               	movlw	10
  7922   0018CA  6E04               	movwf	i1___awmod@divisor^0,c
  7923   0018CC  EC30  F010         	call	i1___awmod	;wreg free
  7924   0018D0  C002  F008         	movff	?i1___awmod,i1abs@a
  7925   0018D4  C003  F009         	movff	?i1___awmod+1,i1abs@a+1
  7926   0018D8  ECD9  F012         	call	i1_abs	;wreg free
  7927   0018DC  5008               	movf	?i1_abs^0,w,c
  7928   0018DE  0F30               	addlw	48
  7929   0018E0  6EDF               	movwf	indf2,c
  7930   0018E2                     
  7931                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  7932   0018E2  C014  F002         	movff	i1vfpfcnvrt@convarg,i1___awdiv@dividend
  7933   0018E6  C015  F003         	movff	i1vfpfcnvrt@convarg+1,i1___awdiv@dividend+1
  7934   0018EA  0E00               	movlw	0
  7935   0018EC  6E05               	movwf	(i1___awdiv@divisor+1)^0,c
  7936   0018EE  0E0A               	movlw	10
  7937   0018F0  6E04               	movwf	i1___awdiv@divisor^0,c
  7938   0018F2  ECBA  F00E         	call	i1___awdiv	;wreg free
  7939   0018F6  C002  F014         	movff	?i1___awdiv,i1vfpfcnvrt@convarg
  7940   0018FA  C003  F015         	movff	?i1___awdiv+1,i1vfpfcnvrt@convarg+1
  7941   0018FE                     
  7942                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  7943   0018FE  5014               	movf	i1vfpfcnvrt@convarg^0,w,c
  7944   001900  1015               	iorwf	(i1vfpfcnvrt@convarg+1)^0,w,c
  7945   001902  B4D8               	btfsc	status,2,c
  7946   001904  EF86  F00C         	goto	i1u209_21
  7947   001908  EF88  F00C         	goto	i1u209_20
  7948   00190C                     i1u209_21:
  7949   00190C  EF90  F00C         	goto	i1l2991
  7950   001910                     i1u209_20:
  7951   001910  5018               	movf	i1vfpfcnvrt@c^0,w,c
  7952   001912  A4D8               	btfss	status,2,c
  7953   001914  EF8E  F00C         	goto	i1u210_21
  7954   001918  EF90  F00C         	goto	i1u210_20
  7955   00191C                     i1u210_21:
  7956   00191C  EF57  F00C         	goto	i1l2983
  7957   001920                     i1u210_20:
  7958   001920                     i1l2991:
  7959                           
  7960                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  7961   001920  5018               	movf	i1vfpfcnvrt@c^0,w,c
  7962   001922  B4D8               	btfsc	status,2,c
  7963   001924  EF96  F00C         	goto	i1u211_21
  7964   001928  EF98  F00C         	goto	i1u211_20
  7965   00192C                     i1u211_21:
  7966   00192C  EFBB  F00C         	goto	i1l3001
  7967   001930                     i1u211_20:
  7968   001930  5011               	movf	i1vfpfcnvrt@done^0,w,c
  7969   001932  B4D8               	btfsc	status,2,c
  7970   001934  EF9E  F00C         	goto	i1u212_21
  7971   001938  EFA0  F00C         	goto	i1u212_20
  7972   00193C                     i1u212_21:
  7973   00193C  EFBB  F00C         	goto	i1l3001
  7974   001940                     i1u212_20:
  7975   001940                     
  7976                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  7977   001940  0618               	decf	i1vfpfcnvrt@c^0,f,c
  7978   001942  0E00               	movlw	low _dbuf
  7979   001944  2418               	addwf	i1vfpfcnvrt@c^0,w,c
  7980   001946  6ED9               	movwf	fsr2l,c
  7981   001948  6ADA               	clrf	fsr2h,c
  7982   00194A  0E01               	movlw	high _dbuf
  7983   00194C  22DA               	addwfc	fsr2h,f,c
  7984   00194E  0E2D               	movlw	45
  7985   001950  6EDF               	movwf	indf2,c
  7986   001952  EFBB  F00C         	goto	i1l3001
  7987   001956                     i1l2997:
  7988                           
  7989                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  7990   001956  0E00               	movlw	low _dbuf
  7991   001958  2418               	addwf	i1vfpfcnvrt@c^0,w,c
  7992   00195A  6ED9               	movwf	fsr2l,c
  7993   00195C  6ADA               	clrf	fsr2h,c
  7994   00195E  0E01               	movlw	high _dbuf
  7995   001960  22DA               	addwfc	fsr2h,f,c
  7996   001962  50DF               	movf	indf2,w,c
  7997   001964  6E0F               	movwf	??i1_vfpfcnvrt^0,c
  7998   001966  500F               	movf	??i1_vfpfcnvrt^0,w,c
  7999   001968  6E02               	movwf	i1fputc@c^0,c
  8000   00196A  6A03               	clrf	(i1fputc@c+1)^0,c
  8001   00196C  C00C  F004         	movff	i1vfpfcnvrt@fp,i1fputc@fp
  8002   001970  EC7A  F00F         	call	i1_fputc	;wreg free
  8003   001974  2A18               	incf	i1vfpfcnvrt@c^0,f,c
  8004   001976                     i1l3001:
  8005                           
  8006                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  8007   001976  0E20               	movlw	32
  8008   001978  1818               	xorwf	i1vfpfcnvrt@c^0,w,c
  8009   00197A  A4D8               	btfss	status,2,c
  8010   00197C  EFC2  F00C         	goto	i1u213_21
  8011   001980  EFC4  F00C         	goto	i1u213_20
  8012   001984                     i1u213_21:
  8013   001984  EFAB  F00C         	goto	i1l2997
  8014   001988                     i1u213_20:
  8015   001988  EFDF  F00C         	goto	i1l1153
  8016   00198C                     i1l3003:
  8017                           
  8018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  8019   00198C  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  8020   00198E  6ED9               	movwf	fsr2l,c
  8021   001990  6ADA               	clrf	fsr2h,c
  8022   001992  2ADE               	incf	postinc2,f,c
  8023   001994  0E00               	movlw	0
  8024   001996  22DD               	addwfc	postdec2,f,c
  8025   001998  EFDF  F00C         	goto	i1l1153
  8026   00199C                     i1l3007:
  8027                           
  8028                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  8029   00199C  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  8030   00199E  6ED9               	movwf	fsr2l,c
  8031   0019A0  6ADA               	clrf	fsr2h,c
  8032   0019A2  CFDE FFF6          	movff	postinc2,tblptrl
  8033   0019A6  CFDD FFF7          	movff	postdec2,tblptrh
  8034   0019AA                     	if	0	;tblptru may be non-zero
  8035   0019AA                     	endif
  8036   0019AA                     	if	0	;tblptru may be non-zero
  8037   0019AA                     	endif
  8038   0019AA  0008               	tblrd		*
  8039   0019AC  50F5               	movf	tablat,w,c
  8040   0019AE  6E02               	movwf	i1fputc@c^0,c
  8041   0019B0  6A03               	clrf	(i1fputc@c+1)^0,c
  8042   0019B2  C00C  F004         	movff	i1vfpfcnvrt@fp,i1fputc@fp
  8043   0019B6  EC7A  F00F         	call	i1_fputc	;wreg free
  8044   0019BA  EFC6  F00C         	goto	i1l3003
  8045   0019BE                     i1l1153:
  8046   0019BE  0012               	return		;funcret
  8047   0019C0                     __end_ofi1_vfpfcnvrt:
  8048                           	callstack 0
  8049                           
  8050 ;; *************** function i1_fputc *****************
  8051 ;; Defined at:
  8052 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;  c               2    1[COMRAM] int 
  8055 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  8056 ;;		 -> i1sprintf@f(12), sprintf@f(12), 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  2    1[COMRAM] int 
  8061 ;; Registers used:
  8062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8068 ;;      Params:         3       0       0       0       0       0       0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8070 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8071 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8072 ;;Total ram usage:        8 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; Hardware stack levels required when called: 2
  8075 ;; This function calls:
  8076 ;;		i1_putch
  8077 ;; This function is called by:
  8078 ;;		i1_vfpfcnvrt
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text31
  8083   001EF4                     __ptext31:
  8084                           	callstack 0
  8085   001EF4                     i1_fputc:
  8086                           	callstack 19
  8087   001EF4  5004               	movf	i1fputc@fp^0,w,c
  8088   001EF6  B4D8               	btfsc	status,2,c
  8089   001EF8  EF80  F00F         	goto	i1u186_21
  8090   001EFC  EF82  F00F         	goto	i1u186_20
  8091   001F00                     i1u186_21:
  8092   001F00  EF8A  F00F         	goto	i1l2865
  8093   001F04                     i1u186_20:
  8094   001F04  5004               	movf	i1fputc@fp^0,w,c
  8095   001F06  A4D8               	btfss	status,2,c
  8096   001F08  EF88  F00F         	goto	i1u187_21
  8097   001F0C  EF8A  F00F         	goto	i1u187_20
  8098   001F10                     i1u187_21:
  8099   001F10  EF8F  F00F         	goto	i1l2867
  8100   001F14                     i1u187_20:
  8101   001F14                     i1l2865:
  8102   001F14  5002               	movf	i1fputc@c^0,w,c
  8103   001F16  EC7D  F013         	call	i1_putch
  8104   001F1A  EFD6  F00F         	goto	i1l1178
  8105   001F1E                     i1l2867:
  8106   001F1E  5004               	movf	i1fputc@fp^0,w,c
  8107   001F20  6ED9               	movwf	fsr2l,c
  8108   001F22  6ADA               	clrf	fsr2h,c
  8109   001F24  0E0A               	movlw	10
  8110   001F26  26D9               	addwf	fsr2l,f,c
  8111   001F28  50DE               	movf	postinc2,w,c
  8112   001F2A  10DE               	iorwf	postinc2,w,c
  8113   001F2C  B4D8               	btfsc	status,2,c
  8114   001F2E  EF9B  F00F         	goto	i1u188_21
  8115   001F32  EF9D  F00F         	goto	i1u188_20
  8116   001F36                     i1u188_21:
  8117   001F36  EFB6  F00F         	goto	i1l2871
  8118   001F3A                     i1u188_20:
  8119   001F3A  5004               	movf	i1fputc@fp^0,w,c
  8120   001F3C  6ED9               	movwf	fsr2l,c
  8121   001F3E  6ADA               	clrf	fsr2h,c
  8122   001F40  0E0A               	movlw	10
  8123   001F42  26D9               	addwf	fsr2l,f,c
  8124   001F44  5004               	movf	i1fputc@fp^0,w,c
  8125   001F46  6EE1               	movwf	fsr1l,c
  8126   001F48  6AE2               	clrf	fsr1h,c
  8127   001F4A  0E03               	movlw	3
  8128   001F4C  26E1               	addwf	fsr1l,f,c
  8129   001F4E  50DE               	movf	postinc2,w,c
  8130   001F50  5CE6               	subwf	postinc1,w,c
  8131   001F52  50E6               	movf	postinc1,w,c
  8132   001F54  0A80               	xorlw	128
  8133   001F56  6E09               	movwf	(??i1_fputc+4)^0,c
  8134   001F58  50DE               	movf	postinc2,w,c
  8135   001F5A  0A80               	xorlw	128
  8136   001F5C  5809               	subwfb	(??i1_fputc+4)^0,w,c
  8137   001F5E  B0D8               	btfsc	status,0,c
  8138   001F60  EFB4  F00F         	goto	i1u189_21
  8139   001F64  EFB6  F00F         	goto	i1u189_20
  8140   001F68                     i1u189_21:
  8141   001F68  EFD6  F00F         	goto	i1l1178
  8142   001F6C                     i1u189_20:
  8143   001F6C                     i1l2871:
  8144   001F6C  5004               	movf	i1fputc@fp^0,w,c
  8145   001F6E  6ED9               	movwf	fsr2l,c
  8146   001F70  6ADA               	clrf	fsr2h,c
  8147   001F72  0E03               	movlw	3
  8148   001F74  26D9               	addwf	fsr2l,f,c
  8149   001F76  CFDE F005          	movff	postinc2,??i1_fputc
  8150   001F7A  CFDD F006          	movff	postdec2,??i1_fputc+1
  8151   001F7E  5004               	movf	i1fputc@fp^0,w,c
  8152   001F80  6ED9               	movwf	fsr2l,c
  8153   001F82  6ADA               	clrf	fsr2h,c
  8154   001F84  CFDE F007          	movff	postinc2,??i1_fputc+2
  8155   001F88  CFDD F008          	movff	postdec2,??i1_fputc+3
  8156   001F8C  5005               	movf	??i1_fputc^0,w,c
  8157   001F8E  2407               	addwf	(??i1_fputc+2)^0,w,c
  8158   001F90  6ED9               	movwf	fsr2l,c
  8159   001F92  5006               	movf	(??i1_fputc+1)^0,w,c
  8160   001F94  2008               	addwfc	(??i1_fputc+3)^0,w,c
  8161   001F96  6EDA               	movwf	fsr2h,c
  8162   001F98  C002  FFDF         	movff	i1fputc@c,indf2
  8163   001F9C  5004               	movf	i1fputc@fp^0,w,c
  8164   001F9E  6ED9               	movwf	fsr2l,c
  8165   001FA0  6ADA               	clrf	fsr2h,c
  8166   001FA2  0E03               	movlw	3
  8167   001FA4  26D9               	addwf	fsr2l,f,c
  8168   001FA6  2ADE               	incf	postinc2,f,c
  8169   001FA8  0E00               	movlw	0
  8170   001FAA  22DD               	addwfc	postdec2,f,c
  8171   001FAC                     i1l1178:
  8172   001FAC  0012               	return		;funcret
  8173   001FAE                     __end_ofi1_fputc:
  8174                           	callstack 0
  8175                           
  8176 ;; *************** function i1_putch *****************
  8177 ;; Defined at:
  8178 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  c               1    wreg     unsigned char 
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;  c               1  (no storage) unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      void 
  8185 ;; Registers used:
  8186 ;;		wreg
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0
  8193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8195 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8196 ;;Total ram usage:        0 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; Hardware stack levels required when called: 1
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		i1_fputc
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text32
  8207   0026FA                     __ptext32:
  8208                           	callstack 0
  8209   0026FA                     i1_putch:
  8210                           	callstack 19
  8211   0026FA  0012               	return		;funcret
  8212   0026FC                     __end_ofi1_putch:
  8213                           	callstack 0
  8214                           
  8215 ;; *************** function i1_abs *****************
  8216 ;; Defined at:
  8217 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  a               2    7[COMRAM] int 
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;		None
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  2    7[COMRAM] int 
  8224 ;; Registers used:
  8225 ;;		wreg, status,2, status,0
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8231 ;;      Params:         2       0       0       0       0       0       0       0       0
  8232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8233 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8234 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8235 ;;Total ram usage:        4 bytes
  8236 ;; Hardware stack levels used: 1
  8237 ;; Hardware stack levels required when called: 1
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		i1_vfpfcnvrt
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text33
  8246   0025B2                     __ptext33:
  8247                           	callstack 0
  8248   0025B2                     i1_abs:
  8249                           	callstack 20
  8250   0025B2  BE09               	btfsc	(i1abs@a+1)^0,7,c
  8251   0025B4  EFDE  F012         	goto	i1u185_21
  8252   0025B8  EFE0  F012         	goto	i1u185_20
  8253   0025BC                     i1u185_21:
  8254   0025BC  EFE6  F012         	goto	i1l1163
  8255   0025C0                     i1u185_20:
  8256   0025C0  C008  F008         	movff	i1abs@a,?i1_abs
  8257   0025C4  C009  F009         	movff	i1abs@a+1,?i1_abs+1
  8258   0025C8  EFF2  F012         	goto	i1l1166
  8259   0025CC                     i1l1163:
  8260   0025CC  C008  F00A         	movff	i1abs@a,??i1_abs
  8261   0025D0  C009  F00B         	movff	i1abs@a+1,??i1_abs+1
  8262   0025D4  1E0A               	comf	??i1_abs^0,f,c
  8263   0025D6  1E0B               	comf	(??i1_abs+1)^0,f,c
  8264   0025D8  4A0A               	infsnz	??i1_abs^0,f,c
  8265   0025DA  2A0B               	incf	(??i1_abs+1)^0,f,c
  8266   0025DC  C00A  F008         	movff	??i1_abs,?i1_abs
  8267   0025E0  C00B  F009         	movff	??i1_abs+1,?i1_abs+1
  8268   0025E4                     i1l1166:
  8269   0025E4  0012               	return		;funcret
  8270   0025E6                     __end_ofi1_abs:
  8271                           	callstack 0
  8272                           
  8273 ;; *************** function i1___awmod *****************
  8274 ;; Defined at:
  8275 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  dividend        2    1[COMRAM] int 
  8278 ;;  divisor         2    3[COMRAM] int 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  sign            1    6[COMRAM] unsigned char 
  8281 ;;  counter         1    5[COMRAM] unsigned char 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  2    1[COMRAM] int 
  8284 ;; Registers used:
  8285 ;;		wreg, status,2, status,0
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8291 ;;      Params:         4       0       0       0       0       0       0       0       0
  8292 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8294 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8295 ;;Total ram usage:        6 bytes
  8296 ;; Hardware stack levels used: 1
  8297 ;; Hardware stack levels required when called: 1
  8298 ;; This function calls:
  8299 ;;		Nothing
  8300 ;; This function is called by:
  8301 ;;		i1_vfpfcnvrt
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text34
  8306   002060                     __ptext34:
  8307                           	callstack 0
  8308   002060                     i1___awmod:
  8309                           	callstack 20
  8310   002060  0E00               	movlw	0
  8311   002062  6E07               	movwf	i1___awmod@sign^0,c
  8312   002064  BE03               	btfsc	(i1___awmod@dividend+1)^0,7,c
  8313   002066  EF39  F010         	goto	i1u179_20
  8314   00206A  EF37  F010         	goto	i1u179_21
  8315   00206E                     i1u179_21:
  8316   00206E  EF3F  F010         	goto	i1l2829
  8317   002072                     i1u179_20:
  8318   002072  6C02               	negf	i1___awmod@dividend^0,c
  8319   002074  1E03               	comf	(i1___awmod@dividend+1)^0,f,c
  8320   002076  B0D8               	btfsc	status,0,c
  8321   002078  2A03               	incf	(i1___awmod@dividend+1)^0,f,c
  8322   00207A  0E01               	movlw	1
  8323   00207C  6E07               	movwf	i1___awmod@sign^0,c
  8324   00207E                     i1l2829:
  8325   00207E  BE05               	btfsc	(i1___awmod@divisor+1)^0,7,c
  8326   002080  EF46  F010         	goto	i1u180_20
  8327   002084  EF44  F010         	goto	i1u180_21
  8328   002088                     i1u180_21:
  8329   002088  EF4A  F010         	goto	i1l2833
  8330   00208C                     i1u180_20:
  8331   00208C  6C04               	negf	i1___awmod@divisor^0,c
  8332   00208E  1E05               	comf	(i1___awmod@divisor+1)^0,f,c
  8333   002090  B0D8               	btfsc	status,0,c
  8334   002092  2A05               	incf	(i1___awmod@divisor+1)^0,f,c
  8335   002094                     i1l2833:
  8336   002094  5004               	movf	i1___awmod@divisor^0,w,c
  8337   002096  1005               	iorwf	(i1___awmod@divisor+1)^0,w,c
  8338   002098  B4D8               	btfsc	status,2,c
  8339   00209A  EF51  F010         	goto	i1u181_21
  8340   00209E  EF53  F010         	goto	i1u181_20
  8341   0020A2                     i1u181_21:
  8342   0020A2  EF77  F010         	goto	i1l2849
  8343   0020A6                     i1u181_20:
  8344   0020A6  0E01               	movlw	1
  8345   0020A8  6E06               	movwf	i1___awmod@counter^0,c
  8346   0020AA  EF5B  F010         	goto	i1l2839
  8347   0020AE                     i1l2837:
  8348   0020AE  90D8               	bcf	status,0,c
  8349   0020B0  3604               	rlcf	i1___awmod@divisor^0,f,c
  8350   0020B2  3605               	rlcf	(i1___awmod@divisor+1)^0,f,c
  8351   0020B4  2A06               	incf	i1___awmod@counter^0,f,c
  8352   0020B6                     i1l2839:
  8353   0020B6  AE05               	btfss	(i1___awmod@divisor+1)^0,7,c
  8354   0020B8  EF60  F010         	goto	i1u182_21
  8355   0020BC  EF62  F010         	goto	i1u182_20
  8356   0020C0                     i1u182_21:
  8357   0020C0  EF57  F010         	goto	i1l2837
  8358   0020C4                     i1u182_20:
  8359   0020C4                     i1l2841:
  8360   0020C4  5004               	movf	i1___awmod@divisor^0,w,c
  8361   0020C6  5C02               	subwf	i1___awmod@dividend^0,w,c
  8362   0020C8  5005               	movf	(i1___awmod@divisor+1)^0,w,c
  8363   0020CA  5803               	subwfb	(i1___awmod@dividend+1)^0,w,c
  8364   0020CC  A0D8               	btfss	status,0,c
  8365   0020CE  EF6B  F010         	goto	i1u183_21
  8366   0020D2  EF6D  F010         	goto	i1u183_20
  8367   0020D6                     i1u183_21:
  8368   0020D6  EF71  F010         	goto	i1l2845
  8369   0020DA                     i1u183_20:
  8370   0020DA  5004               	movf	i1___awmod@divisor^0,w,c
  8371   0020DC  5E02               	subwf	i1___awmod@dividend^0,f,c
  8372   0020DE  5005               	movf	(i1___awmod@divisor+1)^0,w,c
  8373   0020E0  5A03               	subwfb	(i1___awmod@dividend+1)^0,f,c
  8374   0020E2                     i1l2845:
  8375   0020E2  90D8               	bcf	status,0,c
  8376   0020E4  3205               	rrcf	(i1___awmod@divisor+1)^0,f,c
  8377   0020E6  3204               	rrcf	i1___awmod@divisor^0,f,c
  8378   0020E8  2E06               	decfsz	i1___awmod@counter^0,f,c
  8379   0020EA  EF62  F010         	goto	i1l2841
  8380   0020EE                     i1l2849:
  8381   0020EE  5007               	movf	i1___awmod@sign^0,w,c
  8382   0020F0  B4D8               	btfsc	status,2,c
  8383   0020F2  EF7D  F010         	goto	i1u184_21
  8384   0020F6  EF7F  F010         	goto	i1u184_20
  8385   0020FA                     i1u184_21:
  8386   0020FA  EF83  F010         	goto	i1l2853
  8387   0020FE                     i1u184_20:
  8388   0020FE  6C02               	negf	i1___awmod@dividend^0,c
  8389   002100  1E03               	comf	(i1___awmod@dividend+1)^0,f,c
  8390   002102  B0D8               	btfsc	status,0,c
  8391   002104  2A03               	incf	(i1___awmod@dividend+1)^0,f,c
  8392   002106                     i1l2853:
  8393   002106  C002  F002         	movff	i1___awmod@dividend,?i1___awmod
  8394   00210A  C003  F003         	movff	i1___awmod@dividend+1,?i1___awmod+1
  8395   00210E  0012               	return		;funcret
  8396   002110                     __end_ofi1___awmod:
  8397                           	callstack 0
  8398                           
  8399 ;; *************** function i1___awdiv *****************
  8400 ;; Defined at:
  8401 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  dividend        2    1[COMRAM] int 
  8404 ;;  divisor         2    3[COMRAM] int 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  quotient        2    7[COMRAM] int 
  8407 ;;  sign            1    6[COMRAM] unsigned char 
  8408 ;;  counter         1    5[COMRAM] unsigned char 
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  2    1[COMRAM] int 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8418 ;;      Params:         4       0       0       0       0       0       0       0       0
  8419 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8421 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8422 ;;Total ram usage:        8 bytes
  8423 ;; Hardware stack levels used: 1
  8424 ;; Hardware stack levels required when called: 1
  8425 ;; This function calls:
  8426 ;;		Nothing
  8427 ;; This function is called by:
  8428 ;;		i1_vfpfcnvrt
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text35
  8433   001D74                     __ptext35:
  8434                           	callstack 0
  8435   001D74                     i1___awdiv:
  8436                           	callstack 20
  8437   001D74  0E00               	movlw	0
  8438   001D76  6E07               	movwf	i1___awdiv@sign^0,c
  8439   001D78  BE05               	btfsc	(i1___awdiv@divisor+1)^0,7,c
  8440   001D7A  EFC3  F00E         	goto	i1u173_20
  8441   001D7E  EFC1  F00E         	goto	i1u173_21
  8442   001D82                     i1u173_21:
  8443   001D82  EFC9  F00E         	goto	i1l2785
  8444   001D86                     i1u173_20:
  8445   001D86  6C04               	negf	i1___awdiv@divisor^0,c
  8446   001D88  1E05               	comf	(i1___awdiv@divisor+1)^0,f,c
  8447   001D8A  B0D8               	btfsc	status,0,c
  8448   001D8C  2A05               	incf	(i1___awdiv@divisor+1)^0,f,c
  8449   001D8E  0E01               	movlw	1
  8450   001D90  6E07               	movwf	i1___awdiv@sign^0,c
  8451   001D92                     i1l2785:
  8452   001D92  BE03               	btfsc	(i1___awdiv@dividend+1)^0,7,c
  8453   001D94  EFD0  F00E         	goto	i1u174_20
  8454   001D98  EFCE  F00E         	goto	i1u174_21
  8455   001D9C                     i1u174_21:
  8456   001D9C  EFD6  F00E         	goto	i1l2791
  8457   001DA0                     i1u174_20:
  8458   001DA0  6C02               	negf	i1___awdiv@dividend^0,c
  8459   001DA2  1E03               	comf	(i1___awdiv@dividend+1)^0,f,c
  8460   001DA4  B0D8               	btfsc	status,0,c
  8461   001DA6  2A03               	incf	(i1___awdiv@dividend+1)^0,f,c
  8462   001DA8  0E01               	movlw	1
  8463   001DAA  1A07               	xorwf	i1___awdiv@sign^0,f,c
  8464   001DAC                     i1l2791:
  8465   001DAC  0E00               	movlw	0
  8466   001DAE  6E09               	movwf	(i1___awdiv@quotient+1)^0,c
  8467   001DB0  0E00               	movlw	0
  8468   001DB2  6E08               	movwf	i1___awdiv@quotient^0,c
  8469   001DB4  5004               	movf	i1___awdiv@divisor^0,w,c
  8470   001DB6  1005               	iorwf	(i1___awdiv@divisor+1)^0,w,c
  8471   001DB8  B4D8               	btfsc	status,2,c
  8472   001DBA  EFE1  F00E         	goto	i1u175_21
  8473   001DBE  EFE3  F00E         	goto	i1u175_20
  8474   001DC2                     i1u175_21:
  8475   001DC2  EF0B  F00F         	goto	i1l2813
  8476   001DC6                     i1u175_20:
  8477   001DC6  0E01               	movlw	1
  8478   001DC8  6E06               	movwf	i1___awdiv@counter^0,c
  8479   001DCA  EFEB  F00E         	goto	i1l2799
  8480   001DCE                     i1l2797:
  8481   001DCE  90D8               	bcf	status,0,c
  8482   001DD0  3604               	rlcf	i1___awdiv@divisor^0,f,c
  8483   001DD2  3605               	rlcf	(i1___awdiv@divisor+1)^0,f,c
  8484   001DD4  2A06               	incf	i1___awdiv@counter^0,f,c
  8485   001DD6                     i1l2799:
  8486   001DD6  AE05               	btfss	(i1___awdiv@divisor+1)^0,7,c
  8487   001DD8  EFF0  F00E         	goto	i1u176_21
  8488   001DDC  EFF2  F00E         	goto	i1u176_20
  8489   001DE0                     i1u176_21:
  8490   001DE0  EFE7  F00E         	goto	i1l2797
  8491   001DE4                     i1u176_20:
  8492   001DE4                     i1l2801:
  8493   001DE4  90D8               	bcf	status,0,c
  8494   001DE6  3608               	rlcf	i1___awdiv@quotient^0,f,c
  8495   001DE8  3609               	rlcf	(i1___awdiv@quotient+1)^0,f,c
  8496   001DEA  5004               	movf	i1___awdiv@divisor^0,w,c
  8497   001DEC  5C02               	subwf	i1___awdiv@dividend^0,w,c
  8498   001DEE  5005               	movf	(i1___awdiv@divisor+1)^0,w,c
  8499   001DF0  5803               	subwfb	(i1___awdiv@dividend+1)^0,w,c
  8500   001DF2  A0D8               	btfss	status,0,c
  8501   001DF4  EFFE  F00E         	goto	i1u177_21
  8502   001DF8  EF00  F00F         	goto	i1u177_20
  8503   001DFC                     i1u177_21:
  8504   001DFC  EF05  F00F         	goto	i1l2809
  8505   001E00                     i1u177_20:
  8506   001E00  5004               	movf	i1___awdiv@divisor^0,w,c
  8507   001E02  5E02               	subwf	i1___awdiv@dividend^0,f,c
  8508   001E04  5005               	movf	(i1___awdiv@divisor+1)^0,w,c
  8509   001E06  5A03               	subwfb	(i1___awdiv@dividend+1)^0,f,c
  8510   001E08  8008               	bsf	i1___awdiv@quotient^0,0,c
  8511   001E0A                     i1l2809:
  8512   001E0A  90D8               	bcf	status,0,c
  8513   001E0C  3205               	rrcf	(i1___awdiv@divisor+1)^0,f,c
  8514   001E0E  3204               	rrcf	i1___awdiv@divisor^0,f,c
  8515   001E10  2E06               	decfsz	i1___awdiv@counter^0,f,c
  8516   001E12  EFF2  F00E         	goto	i1l2801
  8517   001E16                     i1l2813:
  8518   001E16  5007               	movf	i1___awdiv@sign^0,w,c
  8519   001E18  B4D8               	btfsc	status,2,c
  8520   001E1A  EF11  F00F         	goto	i1u178_21
  8521   001E1E  EF13  F00F         	goto	i1u178_20
  8522   001E22                     i1u178_21:
  8523   001E22  EF17  F00F         	goto	i1l2817
  8524   001E26                     i1u178_20:
  8525   001E26  6C08               	negf	i1___awdiv@quotient^0,c
  8526   001E28  1E09               	comf	(i1___awdiv@quotient+1)^0,f,c
  8527   001E2A  B0D8               	btfsc	status,0,c
  8528   001E2C  2A09               	incf	(i1___awdiv@quotient+1)^0,f,c
  8529   001E2E                     i1l2817:
  8530   001E2E  C008  F002         	movff	i1___awdiv@quotient,?i1___awdiv
  8531   001E32  C009  F003         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
  8532   001E36  0012               	return		;funcret
  8533   001E38                     __end_ofi1___awdiv:
  8534                           	callstack 0
  8535                           
  8536 ;; *************** function i1_Lcd_Write_String *****************
  8537 ;; Defined at:
  8538 ;;		line 104 in file "lcd.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  a               2    5[COMRAM] PTR const unsigned char 
  8541 ;;		 -> STR_28(2), STR_27(2), STR_26(2), STR_25(2), 
  8542 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_21(17), 
  8543 ;;		 -> STR_20(17), STR_19(17), STR_17(10), STR_16(10), 
  8544 ;;		 -> STR_15(9), STR_14(7), STR_13(2), STR_12(2), 
  8545 ;;		 -> STR_11(15), STR_10(14), STR_9(10), STR_8(7), 
  8546 ;;		 -> re_pcs_str(20), counted_pcs_str(20), main@countdown(20), num_str(10), 
  8547 ;;		 -> STR_4(12), STR_3(15), STR_2(16), STR_1(15), 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  i               2    9[COMRAM] int 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8559 ;;      Params:         2       0       0       0       0       0       0       0       0
  8560 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8561 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8562 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8563 ;;Total ram usage:        6 bytes
  8564 ;; Hardware stack levels used: 1
  8565 ;; Hardware stack levels required when called: 3
  8566 ;; This function calls:
  8567 ;;		i1_Lcd_Write_Char
  8568 ;; This function is called by:
  8569 ;;		_LOW_PRIORITY
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text36
  8574   00221C                     __ptext36:
  8575                           	callstack 0
  8576   00221C                     i1_Lcd_Write_String:
  8577                           	callstack 21
  8578   00221C                     
  8579                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  8580   00221C  0E00               	movlw	0
  8581   00221E  6E0B               	movwf	(i1Lcd_Write_String@i+1)^0,c
  8582   002220  0E00               	movlw	0
  8583   002222  6E0A               	movwf	i1Lcd_Write_String@i^0,c
  8584   002224  EF2E  F011         	goto	i1l3547
  8585   002228                     i1l3543:
  8586                           
  8587                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  8588   002228  500A               	movf	i1Lcd_Write_String@i^0,w,c
  8589   00222A  2406               	addwf	i1Lcd_Write_String@a^0,w,c
  8590   00222C  6E08               	movwf	??i1_Lcd_Write_String^0,c
  8591   00222E  500B               	movf	(i1Lcd_Write_String@i+1)^0,w,c
  8592   002230  2007               	addwfc	(i1Lcd_Write_String@a+1)^0,w,c
  8593   002232  6E09               	movwf	(??i1_Lcd_Write_String+1)^0,c
  8594   002234  C008  FFF6         	movff	??i1_Lcd_Write_String,tblptrl
  8595   002238  C009  FFF7         	movff	??i1_Lcd_Write_String+1,tblptrh
  8596   00223C  6AF8               	clrf	tblptru,c
  8597   00223E  0E07               	movlw	(high __ramtop+-1)
  8598   002240  64F7               	cpfsgt	tblptrh,c
  8599   002242  D003               	bra	i1u244_27
  8600   002244  0008               	tblrd		*
  8601   002246  50F5               	movf	tablat,w,c
  8602   002248  D005               	bra	i1u244_20
  8603   00224A                     i1u244_27:
  8604   00224A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8605   00224E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8606   002252  50E7               	movf	indf1,w,c
  8607   002254                     i1u244_20:
  8608   002254  ECA2  F012         	call	i1_Lcd_Write_Char
  8609   002258  4A0A               	infsnz	i1Lcd_Write_String@i^0,f,c
  8610   00225A  2A0B               	incf	(i1Lcd_Write_String@i+1)^0,f,c
  8611   00225C                     i1l3547:
  8612   00225C  500A               	movf	i1Lcd_Write_String@i^0,w,c
  8613   00225E  2406               	addwf	i1Lcd_Write_String@a^0,w,c
  8614   002260  6E08               	movwf	??i1_Lcd_Write_String^0,c
  8615   002262  500B               	movf	(i1Lcd_Write_String@i+1)^0,w,c
  8616   002264  2007               	addwfc	(i1Lcd_Write_String@a+1)^0,w,c
  8617   002266  6E09               	movwf	(??i1_Lcd_Write_String+1)^0,c
  8618   002268  C008  FFF6         	movff	??i1_Lcd_Write_String,tblptrl
  8619   00226C  C009  FFF7         	movff	??i1_Lcd_Write_String+1,tblptrh
  8620   002270  6AF8               	clrf	tblptru,c
  8621   002272  0E07               	movlw	(high __ramtop+-1)
  8622   002274  64F7               	cpfsgt	tblptrh,c
  8623   002276  D003               	bra	i1u245_27
  8624   002278  0008               	tblrd		*
  8625   00227A  50F5               	movf	tablat,w,c
  8626   00227C  D005               	bra	i1u245_20
  8627   00227E                     i1u245_27:
  8628   00227E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8629   002282  CFF7 FFE2          	movff	tblptrh,fsr1h
  8630   002286  50E7               	movf	indf1,w,c
  8631   002288                     i1u245_20:
  8632   002288  0900               	iorlw	0
  8633   00228A  A4D8               	btfss	status,2,c
  8634   00228C  EF4A  F011         	goto	i1u246_21
  8635   002290  EF4C  F011         	goto	i1u246_20
  8636   002294                     i1u246_21:
  8637   002294  EF14  F011         	goto	i1l3543
  8638   002298                     i1u246_20:
  8639   002298  0012               	return		;funcret
  8640   00229A                     __end_ofi1_Lcd_Write_String:
  8641                           	callstack 0
  8642                           
  8643 ;; *************** function i1_Lcd_Write_Char *****************
  8644 ;; Defined at:
  8645 ;;		line 88 in file "lcd.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  a               1    wreg     unsigned char 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  a               1    4[COMRAM] unsigned char 
  8650 ;;  y               1    3[COMRAM] unsigned char 
  8651 ;;  temp            1    2[COMRAM] unsigned char 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, status,2, status,0, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8661 ;;      Params:         0       0       0       0       0       0       0       0       0
  8662 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8664 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8665 ;;Total ram usage:        3 bytes
  8666 ;; Hardware stack levels used: 1
  8667 ;; Hardware stack levels required when called: 2
  8668 ;; This function calls:
  8669 ;;		i1_Lcd_Port
  8670 ;; This function is called by:
  8671 ;;		i1_Lcd_Write_String
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text37
  8676   002544                     __ptext37:
  8677                           	callstack 0
  8678   002544                     i1_Lcd_Write_Char:
  8679                           	callstack 21
  8680                           
  8681                           ;incstack = 0
  8682                           ;i1Lcd_Write_Char@a stored from wreg
  8683   002544  6E05               	movwf	i1Lcd_Write_Char@a^0,c
  8684   002546                     
  8685                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  8686   002546  5005               	movf	i1Lcd_Write_Char@a^0,w,c
  8687   002548  0B0F               	andlw	15
  8688   00254A  6E03               	movwf	i1Lcd_Write_Char@temp^0,c
  8689                           
  8690                           ;lcd.c: 92:     y = a&0xF0;
  8691   00254C  5005               	movf	i1Lcd_Write_Char@a^0,w,c
  8692   00254E  0BF0               	andlw	240
  8693   002550  6E04               	movwf	i1Lcd_Write_Char@y^0,c
  8694   002552                     
  8695                           ;lcd.c: 93:     LATAbits.LA4 = 1;
  8696   002552  8889               	bsf	137,4,c	;volatile
  8697   002554                     
  8698                           ;lcd.c: 94:     Lcd_Port(y>>4);
  8699   002554  3804               	swapf	i1Lcd_Write_Char@y^0,w,c
  8700   002556  0B0F               	andlw	15
  8701   002558  ECAF  F011         	call	i1_Lcd_Port
  8702   00255C                     
  8703                           ;lcd.c: 95:     LATAbits.LA5 = 1;
  8704   00255C  8A89               	bsf	137,5,c	;volatile
  8705   00255E                     
  8706                           ;lcd.c: 96:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  8707   00255E  0E1A               	movlw	26
  8708   002560                     i1u331_27:
  8709   002560  2EE8               	decfsz	wreg,f,c
  8710   002562  D7FE               	bra	i1u331_27
  8711   002564  D000               	nop2	
  8712   002566                     
  8713                           ;lcd.c: 97:     LATAbits.LA5 = 0;
  8714   002566  9A89               	bcf	137,5,c	;volatile
  8715   002568                     
  8716                           ;lcd.c: 98:     Lcd_Port(temp);
  8717   002568  5003               	movf	i1Lcd_Write_Char@temp^0,w,c
  8718   00256A  ECAF  F011         	call	i1_Lcd_Port
  8719   00256E                     
  8720                           ;lcd.c: 99:     LATAbits.LA5 = 1;
  8721   00256E  8A89               	bsf	137,5,c	;volatile
  8722   002570                     
  8723                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  8724   002570  0E1A               	movlw	26
  8725   002572                     i1u332_27:
  8726   002572  2EE8               	decfsz	wreg,f,c
  8727   002574  D7FE               	bra	i1u332_27
  8728   002576  D000               	nop2	
  8729   002578                     
  8730                           ;lcd.c: 101:     LATAbits.LA5 = 0;
  8731   002578  9A89               	bcf	137,5,c	;volatile
  8732   00257A  0012               	return		;funcret
  8733   00257C                     __end_ofi1_Lcd_Write_Char:
  8734                           	callstack 0
  8735                           
  8736 ;; *************** function i1_Lcd_Set_Cursor *****************
  8737 ;; Defined at:
  8738 ;;		line 26 in file "lcd.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  a               1    wreg     unsigned char 
  8741 ;;  b               1    4[COMRAM] unsigned char 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  a               1    5[COMRAM] unsigned char 
  8744 ;;  temp            1    8[COMRAM] unsigned char 
  8745 ;;  y               1    7[COMRAM] unsigned char 
  8746 ;;  z               1    6[COMRAM] unsigned char 
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0, cstack
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8756 ;;      Params:         1       0       0       0       0       0       0       0       0
  8757 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8759 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8760 ;;Total ram usage:        5 bytes
  8761 ;; Hardware stack levels used: 1
  8762 ;; Hardware stack levels required when called: 3
  8763 ;; This function calls:
  8764 ;;		i1_Lcd_Cmd
  8765 ;; This function is called by:
  8766 ;;		_LOW_PRIORITY
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text38
  8771   001BDC                     __ptext38:
  8772                           	callstack 0
  8773   001BDC                     i1_Lcd_Set_Cursor:
  8774                           	callstack 21
  8775                           
  8776                           ;incstack = 0
  8777                           ;i1Lcd_Set_Cursor@a stored from wreg
  8778   001BDC  6E06               	movwf	i1Lcd_Set_Cursor@a^0,c
  8779   001BDE                     
  8780                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  8781   001BDE  0406               	decf	i1Lcd_Set_Cursor@a^0,w,c
  8782   001BE0  A4D8               	btfss	status,2,c
  8783   001BE2  EFF5  F00D         	goto	i1u240_21
  8784   001BE6  EFF7  F00D         	goto	i1u240_20
  8785   001BEA                     i1u240_21:
  8786   001BEA  EF08  F00E         	goto	i1l3517
  8787   001BEE                     i1u240_20:
  8788   001BEE                     
  8789                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  8790   001BEE  5005               	movf	i1Lcd_Set_Cursor@b^0,w,c
  8791   001BF0  0F7F               	addlw	127
  8792   001BF2  6E09               	movwf	i1Lcd_Set_Cursor@temp^0,c
  8793                           
  8794                           ;lcd.c: 32:         z = temp>>4;
  8795   001BF4  3809               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  8796   001BF6  0B0F               	andlw	15
  8797   001BF8  6E07               	movwf	i1Lcd_Set_Cursor@z^0,c
  8798                           
  8799                           ;lcd.c: 33:         y = temp & 0x0F;
  8800   001BFA  5009               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  8801   001BFC  0B0F               	andlw	15
  8802   001BFE  6E08               	movwf	i1Lcd_Set_Cursor@y^0,c
  8803   001C00                     
  8804                           ;lcd.c: 34:         Lcd_Cmd(z);
  8805   001C00  5007               	movf	i1Lcd_Set_Cursor@z^0,w,c
  8806   001C02  EC2A  F013         	call	i1_Lcd_Cmd
  8807   001C06                     
  8808                           ;lcd.c: 35:         Lcd_Cmd(y);
  8809   001C06  5008               	movf	i1Lcd_Set_Cursor@y^0,w,c
  8810   001C08  EC2A  F013         	call	i1_Lcd_Cmd
  8811                           
  8812                           ;lcd.c: 36:     }
  8813   001C0C  EF56  F00E         	goto	i1l257
  8814   001C10                     i1l3517:
  8815   001C10  0E02               	movlw	2
  8816   001C12  1806               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  8817   001C14  A4D8               	btfss	status,2,c
  8818   001C16  EF0F  F00E         	goto	i1u241_21
  8819   001C1A  EF11  F00E         	goto	i1u241_20
  8820   001C1E                     i1u241_21:
  8821   001C1E  EF22  F00E         	goto	i1l3525
  8822   001C22                     i1u241_20:
  8823   001C22                     
  8824                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  8825   001C22  5005               	movf	i1Lcd_Set_Cursor@b^0,w,c
  8826   001C24  0FBF               	addlw	191
  8827   001C26  6E09               	movwf	i1Lcd_Set_Cursor@temp^0,c
  8828                           
  8829                           ;lcd.c: 40:         z = temp>>4;
  8830   001C28  3809               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  8831   001C2A  0B0F               	andlw	15
  8832   001C2C  6E07               	movwf	i1Lcd_Set_Cursor@z^0,c
  8833                           
  8834                           ;lcd.c: 41:         y = temp & 0x0F;
  8835   001C2E  5009               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  8836   001C30  0B0F               	andlw	15
  8837   001C32  6E08               	movwf	i1Lcd_Set_Cursor@y^0,c
  8838   001C34                     
  8839                           ;lcd.c: 42:         Lcd_Cmd(z);
  8840   001C34  5007               	movf	i1Lcd_Set_Cursor@z^0,w,c
  8841   001C36  EC2A  F013         	call	i1_Lcd_Cmd
  8842   001C3A                     
  8843                           ;lcd.c: 43:         Lcd_Cmd(y);
  8844   001C3A  5008               	movf	i1Lcd_Set_Cursor@y^0,w,c
  8845   001C3C  EC2A  F013         	call	i1_Lcd_Cmd
  8846                           
  8847                           ;lcd.c: 44:     }
  8848   001C40  EF56  F00E         	goto	i1l257
  8849   001C44                     i1l3525:
  8850   001C44  0E03               	movlw	3
  8851   001C46  1806               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  8852   001C48  A4D8               	btfss	status,2,c
  8853   001C4A  EF29  F00E         	goto	i1u242_21
  8854   001C4E  EF2B  F00E         	goto	i1u242_20
  8855   001C52                     i1u242_21:
  8856   001C52  EF3C  F00E         	goto	i1l3533
  8857   001C56                     i1u242_20:
  8858   001C56                     
  8859                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  8860   001C56  5005               	movf	i1Lcd_Set_Cursor@b^0,w,c
  8861   001C58  0F93               	addlw	147
  8862   001C5A  6E09               	movwf	i1Lcd_Set_Cursor@temp^0,c
  8863                           
  8864                           ;lcd.c: 48:         z = temp>>4;
  8865   001C5C  3809               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  8866   001C5E  0B0F               	andlw	15
  8867   001C60  6E07               	movwf	i1Lcd_Set_Cursor@z^0,c
  8868                           
  8869                           ;lcd.c: 49:         y = temp & 0x0F;
  8870   001C62  5009               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  8871   001C64  0B0F               	andlw	15
  8872   001C66  6E08               	movwf	i1Lcd_Set_Cursor@y^0,c
  8873   001C68                     
  8874                           ;lcd.c: 50:         Lcd_Cmd(z);
  8875   001C68  5007               	movf	i1Lcd_Set_Cursor@z^0,w,c
  8876   001C6A  EC2A  F013         	call	i1_Lcd_Cmd
  8877   001C6E                     
  8878                           ;lcd.c: 51:         Lcd_Cmd(y);
  8879   001C6E  5008               	movf	i1Lcd_Set_Cursor@y^0,w,c
  8880   001C70  EC2A  F013         	call	i1_Lcd_Cmd
  8881                           
  8882                           ;lcd.c: 52:     }
  8883   001C74  EF56  F00E         	goto	i1l257
  8884   001C78                     i1l3533:
  8885   001C78  0E04               	movlw	4
  8886   001C7A  1806               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  8887   001C7C  A4D8               	btfss	status,2,c
  8888   001C7E  EF43  F00E         	goto	i1u243_21
  8889   001C82  EF45  F00E         	goto	i1u243_20
  8890   001C86                     i1u243_21:
  8891   001C86  EF56  F00E         	goto	i1l253
  8892   001C8A                     i1u243_20:
  8893   001C8A                     
  8894                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  8895   001C8A  5005               	movf	i1Lcd_Set_Cursor@b^0,w,c
  8896   001C8C  0FD3               	addlw	211
  8897   001C8E  6E09               	movwf	i1Lcd_Set_Cursor@temp^0,c
  8898                           
  8899                           ;lcd.c: 56:         z = temp>>4;
  8900   001C90  3809               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  8901   001C92  0B0F               	andlw	15
  8902   001C94  6E07               	movwf	i1Lcd_Set_Cursor@z^0,c
  8903                           
  8904                           ;lcd.c: 57:         y = temp & 0x0F;
  8905   001C96  5009               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  8906   001C98  0B0F               	andlw	15
  8907   001C9A  6E08               	movwf	i1Lcd_Set_Cursor@y^0,c
  8908   001C9C                     
  8909                           ;lcd.c: 58:         Lcd_Cmd(z);
  8910   001C9C  5007               	movf	i1Lcd_Set_Cursor@z^0,w,c
  8911   001C9E  EC2A  F013         	call	i1_Lcd_Cmd
  8912   001CA2                     
  8913                           ;lcd.c: 59:         Lcd_Cmd(y);
  8914   001CA2  5008               	movf	i1Lcd_Set_Cursor@y^0,w,c
  8915   001CA4  EC2A  F013         	call	i1_Lcd_Cmd
  8916   001CA8  EF56  F00E         	goto	i1l257
  8917   001CAC                     i1l253:
  8918   001CAC                     i1l257:
  8919   001CAC  0012               	return		;funcret
  8920   001CAE                     __end_ofi1_Lcd_Set_Cursor:
  8921                           	callstack 0
  8922                           
  8923 ;; *************** function i1_Lcd_Clear *****************
  8924 ;; Defined at:
  8925 ;;		line 20 in file "lcd.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		wreg, status,2, cstack
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8942 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used: 1
  8945 ;; Hardware stack levels required when called: 3
  8946 ;; This function calls:
  8947 ;;		i1_Lcd_Cmd
  8948 ;; This function is called by:
  8949 ;;		_LOW_PRIORITY
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text39
  8954   0026D6                     __ptext39:
  8955                           	callstack 0
  8956   0026D6                     i1_Lcd_Clear:
  8957                           	callstack 21
  8958   0026D6                     
  8959                           ;lcd.c: 22:     Lcd_Cmd(0);
  8960   0026D6  0E00               	movlw	0
  8961   0026D8  EC2A  F013         	call	i1_Lcd_Cmd
  8962                           
  8963                           ;lcd.c: 23:     Lcd_Cmd(1);
  8964   0026DC  0E01               	movlw	1
  8965   0026DE  EC2A  F013         	call	i1_Lcd_Cmd
  8966   0026E2  0012               	return		;funcret
  8967   0026E4                     __end_ofi1_Lcd_Clear:
  8968                           	callstack 0
  8969                           
  8970 ;; *************** function i1_Lcd_Blink *****************
  8971 ;; Defined at:
  8972 ;;		line 123 in file "lcd.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;		None
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;		None
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      void 
  8979 ;; Registers used:
  8980 ;;		wreg, status,2, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8986 ;;      Params:         0       0       0       0       0       0       0       0       0
  8987 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8989 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8990 ;;Total ram usage:        0 bytes
  8991 ;; Hardware stack levels used: 1
  8992 ;; Hardware stack levels required when called: 3
  8993 ;; This function calls:
  8994 ;;		i1_Lcd_Cmd
  8995 ;; This function is called by:
  8996 ;;		_LOW_PRIORITY
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text40
  9001   0026E4                     __ptext40:
  9002                           	callstack 0
  9003   0026E4                     i1_Lcd_Blink:
  9004                           	callstack 21
  9005   0026E4                     
  9006                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  9007   0026E4  0E00               	movlw	0
  9008   0026E6  EC2A  F013         	call	i1_Lcd_Cmd
  9009                           
  9010                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  9011   0026EA  0E0F               	movlw	15
  9012   0026EC  EC2A  F013         	call	i1_Lcd_Cmd
  9013   0026F0  0012               	return		;funcret
  9014   0026F2                     __end_ofi1_Lcd_Blink:
  9015                           	callstack 0
  9016                           
  9017 ;; *************** function i1_Lcd_Cmd *****************
  9018 ;; Defined at:
  9019 ;;		line 11 in file "lcd.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;  a               1    wreg     unsigned char 
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;  a               1    3[COMRAM] unsigned char 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, cstack
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9033 ;;      Params:         0       0       0       0       0       0       0       0       0
  9034 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9035 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9036 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9037 ;;Total ram usage:        2 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; Hardware stack levels required when called: 2
  9040 ;; This function calls:
  9041 ;;		i1_Lcd_Port
  9042 ;; This function is called by:
  9043 ;;		i1_Lcd_Clear
  9044 ;;		i1_Lcd_Set_Cursor
  9045 ;;		i1_Lcd_Blink
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text41
  9050   002654                     __ptext41:
  9051                           	callstack 0
  9052   002654                     i1_Lcd_Cmd:
  9053                           	callstack 21
  9054                           
  9055                           ;incstack = 0
  9056                           ;i1Lcd_Cmd@a stored from wreg
  9057   002654  6E04               	movwf	i1Lcd_Cmd@a^0,c
  9058   002656                     
  9059                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATAbits.LA4 = 0;
  9060   002656  9889               	bcf	137,4,c	;volatile
  9061   002658                     
  9062                           ;lcd.c: 14:     Lcd_Port(a);
  9063   002658  5004               	movf	i1Lcd_Cmd@a^0,w,c
  9064   00265A  ECAF  F011         	call	i1_Lcd_Port
  9065   00265E                     
  9066                           ;lcd.c: 15:     LATAbits.LA5 = 1;
  9067   00265E  8A89               	bsf	137,5,c	;volatile
  9068   002660                     
  9069                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  9070   002660  0E0B               	movlw	11
  9071   002662  6E03               	movwf	??i1_Lcd_Cmd^0,c
  9072   002664  0E62               	movlw	98
  9073   002666                     i1u333_27:
  9074   002666  2EE8               	decfsz	wreg,f,c
  9075   002668  D7FE               	bra	i1u333_27
  9076   00266A  2E03               	decfsz	??i1_Lcd_Cmd^0,f,c
  9077   00266C  D7FC               	bra	i1u333_27
  9078   00266E  D000               	nop2	
  9079   002670                     
  9080                           ;lcd.c: 17:     LATAbits.LA5 = 0;
  9081   002670  9A89               	bcf	137,5,c	;volatile
  9082   002672  0012               	return		;funcret
  9083   002674                     __end_ofi1_Lcd_Cmd:
  9084                           	callstack 0
  9085                           
  9086 ;; *************** function i1_Lcd_Port *****************
  9087 ;; Defined at:
  9088 ;;		line 3 in file "lcd.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;  a               1    wreg     unsigned char 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  a               1    1[COMRAM] unsigned char 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9102 ;;      Params:         0       0       0       0       0       0       0       0       0
  9103 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9105 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9106 ;;Total ram usage:        1 bytes
  9107 ;; Hardware stack levels used: 1
  9108 ;; Hardware stack levels required when called: 1
  9109 ;; This function calls:
  9110 ;;		Nothing
  9111 ;; This function is called by:
  9112 ;;		i1_Lcd_Cmd
  9113 ;;		i1_Lcd_Write_Char
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           	psect	text42
  9118   00235E                     __ptext42:
  9119                           	callstack 0
  9120   00235E                     i1_Lcd_Port:
  9121                           	callstack 21
  9122                           
  9123                           ;incstack = 0
  9124                           ;i1Lcd_Port@a stored from wreg
  9125   00235E  6E02               	movwf	i1Lcd_Port@a^0,c
  9126   002360                     
  9127                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  9128   002360  A002               	btfss	i1Lcd_Port@a^0,0,c
  9129   002362  EFB5  F011         	goto	i1u200_21
  9130   002366  EFB7  F011         	goto	i1u200_20
  9131   00236A                     i1u200_21:
  9132   00236A  EFBA  F011         	goto	i1l226
  9133   00236E                     i1u200_20:
  9134   00236E  888C               	bsf	140,4,c	;volatile
  9135   002370  EFBB  F011         	goto	i1l2951
  9136   002374                     i1l226:
  9137   002374  988C               	bcf	140,4,c	;volatile
  9138   002376                     i1l2951:
  9139                           
  9140                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  9141   002376  A202               	btfss	i1Lcd_Port@a^0,1,c
  9142   002378  EFC0  F011         	goto	i1u201_21
  9143   00237C  EFC2  F011         	goto	i1u201_20
  9144   002380                     i1u201_21:
  9145   002380  EFC5  F011         	goto	i1l230
  9146   002384                     i1u201_20:
  9147   002384  8A8C               	bsf	140,5,c	;volatile
  9148   002386  EFC6  F011         	goto	i1l2955
  9149   00238A                     i1l230:
  9150   00238A  9A8C               	bcf	140,5,c	;volatile
  9151   00238C                     i1l2955:
  9152                           
  9153                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  9154   00238C  A402               	btfss	i1Lcd_Port@a^0,2,c
  9155   00238E  EFCB  F011         	goto	i1u202_21
  9156   002392  EFCD  F011         	goto	i1u202_20
  9157   002396                     i1u202_21:
  9158   002396  EFD0  F011         	goto	i1l234
  9159   00239A                     i1u202_20:
  9160   00239A  8C8C               	bsf	140,6,c	;volatile
  9161   00239C  EFD1  F011         	goto	i1l2959
  9162   0023A0                     i1l234:
  9163   0023A0  9C8C               	bcf	140,6,c	;volatile
  9164   0023A2                     i1l2959:
  9165                           
  9166                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  9167   0023A2  A602               	btfss	i1Lcd_Port@a^0,3,c
  9168   0023A4  EFD6  F011         	goto	i1u203_21
  9169   0023A8  EFD8  F011         	goto	i1u203_20
  9170   0023AC                     i1u203_21:
  9171   0023AC  EFDB  F011         	goto	i1l238
  9172   0023B0                     i1u203_20:
  9173   0023B0  8E8C               	bsf	140,7,c	;volatile
  9174   0023B2  EFDC  F011         	goto	i1l241
  9175   0023B6                     i1l238:
  9176   0023B6  9E8C               	bcf	140,7,c	;volatile
  9177   0023B8                     i1l241:
  9178   0023B8  0012               	return		;funcret
  9179   0023BA                     __end_ofi1_Lcd_Port:
  9180                           	callstack 0
  9181                           
  9182 ;; *************** function _HIGH_PRIORITY_i *****************
  9183 ;; Defined at:
  9184 ;;		line 35 in file "blinky.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;		None
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;		None
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      void 
  9191 ;; Registers used:
  9192 ;;		wreg, status,2, status,0
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9198 ;;      Params:         0       0       0       0       0       0       0       0       0
  9199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9200 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9201 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9202 ;;Total ram usage:        1 bytes
  9203 ;; Hardware stack levels used: 1
  9204 ;; This function calls:
  9205 ;;		Nothing
  9206 ;; This function is called by:
  9207 ;;		Interrupt level 2
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           	psect	intcode
  9212   000008                     __pintcode:
  9213                           	callstack 0
  9214   000008                     _HIGH_PRIORITY_i:
  9215                           	callstack 19
  9216                           
  9217                           ;incstack = 0
  9218   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9219   00000A  ED63  F012         	call	int_func,f	;refresh shadow registers
  9220                           
  9221                           	psect	intcode_body
  9222   0024C6                     __pintcode_body:
  9223                           	callstack 19
  9224   0024C6                     int_func:
  9225                           	callstack 19
  9226   0024C6  0006               	pop		; remove dummy address from shadow register refresh
  9227   0024C8                     
  9228                           ;blinky.c: 37:     if(INTCONbits.TMR0IF==1)
  9229   0024C8  A4F2               	btfss	242,2,c	;volatile
  9230   0024CA  EF69  F012         	goto	i2u150_41
  9231   0024CE  EF6B  F012         	goto	i2u150_40
  9232   0024D2                     i2u150_41:
  9233   0024D2  EF81  F012         	goto	i2l434
  9234   0024D6                     i2u150_40:
  9235   0024D6                     
  9236                           ;blinky.c: 38:     {;blinky.c: 39:       LATAbits.LATA1=~LATAbits.LATA1;
  9237   0024D6  B289               	btfsc	137,1,c	;volatile
  9238   0024D8  EF70  F012         	goto	i2u151_41
  9239   0024DC  EF73  F012         	goto	i2u151_40
  9240   0024E0                     i2u151_41:
  9241   0024E0  0E01               	movlw	1
  9242   0024E2  EF74  F012         	goto	i2u151_46
  9243   0024E6                     i2u151_40:
  9244   0024E6  0E00               	movlw	0
  9245   0024E8                     i2u151_46:
  9246   0024E8  0AFF               	xorlw	255
  9247   0024EA  6E01               	movwf	??_HIGH_PRIORITY_i^0,c
  9248   0024EC  4601               	rlncf	??_HIGH_PRIORITY_i^0,f,c
  9249   0024EE  5089               	movf	137,w,c	;volatile
  9250   0024F0  1801               	xorwf	??_HIGH_PRIORITY_i^0,w,c
  9251   0024F2  0BFD               	andlw	-3
  9252   0024F4  1801               	xorwf	??_HIGH_PRIORITY_i^0,w,c
  9253   0024F6  6E89               	movwf	137,c	;volatile
  9254   0024F8                     
  9255                           ;blinky.c: 41:       TMR0H=0b10000101;
  9256   0024F8  0E85               	movlw	133
  9257   0024FA  6ED7               	movwf	215,c	;volatile
  9258   0024FC                     
  9259                           ;blinky.c: 42:       TMR0L=0b11101101;
  9260   0024FC  0EED               	movlw	237
  9261   0024FE  6ED6               	movwf	214,c	;volatile
  9262   002500                     
  9263                           ;blinky.c: 43:       INTCONbits.TMR0IF=0;
  9264   002500  94F2               	bcf	242,2,c	;volatile
  9265   002502                     i2l434:
  9266   002502  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9267   002504  0011               	retfie		f
  9268   002506                     __end_of_HIGH_PRIORITY_i:
  9269                           	callstack 0
  9270                           
  9271                           	psect	rparam
  9272   000000                     
  9273                           	psect	temp
  9274   00004F                     btemp:
  9275                           	callstack 0
  9276   00004F                     	ds	1
  9277   000000                     int$flags	set	btemp
  9278   000000                     wtemp8	set	btemp+1
  9279   000000                     ttemp5	set	btemp+1
  9280   000000                     ttemp6	set	btemp+4
  9281   000000                     ttemp7	set	btemp+8
  9282                           
  9283                           	psect	config
  9284                           
  9285                           ;Config register CONFIG2L @ 0x300002
  9286                           ;	unspecified, using default values
  9287                           ;	Power-up Timer Enable bit
  9288                           ;	PWRT = 0x1, unprogrammed default
  9289                           ;	Brown-out Reset Enable bits
  9290                           ;	BOR = 0x3, unprogrammed default
  9291                           ;	Brown-out Reset Voltage bits
  9292                           ;	BORV = 0x3, unprogrammed default
  9293                           ;	USB Voltage Regulator Enable bit
  9294                           ;	VREGEN = 0x0, unprogrammed default
  9295   300002                     	org	3145730
  9296   300002  1F                 	db	31
  9297                           
  9298                           ;Config register CONFIG2H @ 0x300003
  9299                           ;	Watchdog Timer Enable bit
  9300                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9301                           ;	Watchdog Timer Postscale Select bits
  9302                           ;	WDTPS = 0xF, unprogrammed default
  9303   300003                     	org	3145731
  9304   300003  1E                 	db	30
  9305                           
  9306                           ;Config register CONFIG4L @ 0x300006
  9307                           ;	Stack Full/Underflow Reset Enable bit
  9308                           ;	STVREN = 0x1, unprogrammed default
  9309                           ;	Single-Supply ICSP Enable bit
  9310                           ;	LVP = OFF, Single-Supply ICSP disabled
  9311                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9312                           ;	ICPRT = 0x0, unprogrammed default
  9313                           ;	Extended Instruction Set Enable bit
  9314                           ;	XINST = 0x0, unprogrammed default
  9315                           ;	Background Debugger Enable bit
  9316                           ;	DEBUG = 0x1, unprogrammed default
  9317   300006                     	org	3145734
  9318   300006  81                 	db	129
  9319                           
  9320                           ; Padding undefined space
  9321   300007                     	org	3145735
  9322   300007  FF                 	db	255
  9323                           tosu	equ	0xFFF
  9324                           tosh	equ	0xFFE
  9325                           tosl	equ	0xFFD
  9326                           stkptr	equ	0xFFC
  9327                           pclatu	equ	0xFFB
  9328                           pclath	equ	0xFFA
  9329                           pcl	equ	0xFF9
  9330                           tblptru	equ	0xFF8
  9331                           tblptrh	equ	0xFF7
  9332                           tblptrl	equ	0xFF6
  9333                           tablat	equ	0xFF5
  9334                           prodh	equ	0xFF4
  9335                           prodl	equ	0xFF3
  9336                           indf0	equ	0xFEF
  9337                           postinc0	equ	0xFEE
  9338                           postdec0	equ	0xFED
  9339                           preinc0	equ	0xFEC
  9340                           plusw0	equ	0xFEB
  9341                           fsr0h	equ	0xFEA
  9342                           fsr0l	equ	0xFE9
  9343                           wreg	equ	0xFE8
  9344                           indf1	equ	0xFE7
  9345                           postinc1	equ	0xFE6
  9346                           postdec1	equ	0xFE5
  9347                           preinc1	equ	0xFE4
  9348                           plusw1	equ	0xFE3
  9349                           fsr1h	equ	0xFE2
  9350                           fsr1l	equ	0xFE1
  9351                           bsr	equ	0xFE0
  9352                           indf2	equ	0xFDF
  9353                           postinc2	equ	0xFDE
  9354                           postdec2	equ	0xFDD
  9355                           preinc2	equ	0xFDC
  9356                           plusw2	equ	0xFDB
  9357                           fsr2h	equ	0xFDA
  9358                           fsr2l	equ	0xFD9
  9359                           status	equ	0xFD8

Data Sizes:
    Strings     225
    Constant    72
    Data        7
    BSS         131
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      78
    BANK0           160     72     142
    BANK1           256      0      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i1sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    i1sprintf@f$.$source	PTR const unsigned char  size(2) Largest target is 0

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(2) Largest target is 8
		 -> figura_1(CODE[8]), figura_2(CODE[8]), figura_3(CODE[8]), figura_4(CODE[8]), 
		 -> figura_5(CODE[8]), figura_6(CODE[8]), figura_7(CODE[8]), figura_8(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> counted_pcs_str(BANK1[20]), main@countdown(BANK0[20]), num_str(BANK0[10]), re_pcs_str(BANK0[20]), 
		 -> STR_1(CODE[15]), STR_10(CODE[14]), STR_11(CODE[15]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[7]), STR_15(CODE[9]), STR_16(CODE[10]), 
		 -> STR_17(CODE[10]), STR_19(CODE[17]), STR_2(CODE[16]), STR_20(CODE[17]), 
		 -> STR_21(CODE[17]), STR_22(CODE[2]), STR_23(CODE[2]), STR_24(CODE[2]), 
		 -> STR_25(CODE[2]), STR_26(CODE[2]), STR_27(CODE[2]), STR_28(CODE[2]), 
		 -> STR_3(CODE[15]), STR_4(CODE[12]), STR_8(CODE[7]), STR_9(CODE[10]), 

    RGB_BCD@contador	PTR int  size(1) Largest target is 2
		 -> contador(BANK0[2]), 

    RGB_BCD@contador_dec	PTR int  size(1) Largest target is 2
		 -> contador_dec(BANK0[2]), 

    RGB_BCD@re_pcs	PTR int  size(1) Largest target is 2
		 -> re_pcs(BANK0[2]), 

    S1508$buffer	PTR unsigned char  size(2) Largest target is 0

    S1508$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_18(CODE[3]), STR_5(CODE[16]), STR_6(CODE[12]), STR_7(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> counted_pcs_str(BANK1[20]), main@countdown(BANK0[20]), num_str(BANK0[10]), re_pcs_str(BANK0[20]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_18(CODE[3]), STR_5(CODE[16]), STR_6(CODE[12]), STR_7(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_18(CODE[3]), STR_5(CODE[16]), STR_6(CODE[12]), STR_7(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_18(CODE[3]), STR_5(CODE[16]), STR_6(CODE[12]), STR_7(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LOW_PRIORITY in COMRAM

    _LOW_PRIORITY->i1_sprintf
    i1_sprintf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt
    i1_vfpfcnvrt->i1_abs
    i1_abs->i1___awmod
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Blink->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _HIGH_PRIORITY_i in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Welcome->_Lcd_CGRAM_CreateChar
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Blink->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _LOW_PRIORITY in BANK0

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LOW_PRIORITY in BANK1

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LOW_PRIORITY in BANK2

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LOW_PRIORITY in BANK3

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LOW_PRIORITY in BANK4

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LOW_PRIORITY in BANK5

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LOW_PRIORITY in BANK6

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LOW_PRIORITY in BANK7

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   21428
                                             48 BANK0     24    24      0
                          _Lcd_Blink
                          _Lcd_Clear
                           _Lcd_Init
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _RGB_BCD
                            _Welcome
                             ___wmul
                             _blinky
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    3711
                                             29 BANK0     19    13      6
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4    2947
                                             23 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3    2586
                                             10 BANK0     13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _blinky                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     463
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Welcome                                              7     7      0    9656
                                             19 BANK0      7     7      0
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    2316
                                              4 BANK0      6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    4040
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     308
                                              3 BANK0      1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_CGRAM_Init                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_CGRAM_CreateChar                                15    13      2    1528
                                              4 BANK0     15    13      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_CGRAM_Close                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _RGB_BCD                                              7     2      5     480
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_NoBlink                                          0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Blink                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _LOW_PRIORITY                                        13    13      0    3661
                                             49 COMRAM    13    13      0
                        i1_Lcd_Blink
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (7) i1_sprintf                                           21    15      6    2185
                                             30 COMRAM    19    13      6
                         i1_vfprintf
 ---------------------------------------------------------------------------------
 (8) i1_vfprintf                                           6     2      4    1934
                                             24 COMRAM     6     2      4
                        i1_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (9) i1_vfpfcnvrt                                         13    10      3    1734
                                             11 COMRAM    13    10      3
                          i1___awdiv
                          i1___awmod
                              i1_abs
                            i1_fputc
 ---------------------------------------------------------------------------------
 (10) i1_fputc                                             8     5      3     330
                                              1 COMRAM     8     5      3
                            i1_putch
 ---------------------------------------------------------------------------------
 (11) i1_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (10) i1_abs                                               4     2      2      92
                                              7 COMRAM     4     2      2
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i1___awdiv                                           8     4      4     352
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_String                                   6     4      2     424
                                              5 COMRAM     6     4      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Write_Char                                     3     3      0     178
                                              2 COMRAM     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Set_Cursor                                     5     4      1     832
                                              4 COMRAM     5     4      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Blink                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Cmd                                            2     2      0     110
                                              2 COMRAM     2     2      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (9) i1_Lcd_Port                                           1     1      0      88
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HIGH_PRIORITY_i                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Blink
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_NoBlink
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _RGB_BCD
   _Welcome
     _Lcd_CGRAM_Close
       _Lcd_Cmd
     _Lcd_CGRAM_CreateChar
       _Lcd_Write_Char
     _Lcd_CGRAM_Init
       _Lcd_Cmd
     _Lcd_Clear
     _Lcd_Init
     _Lcd_Set_Cursor
     _Lcd_Shift_Left
       _Lcd_Cmd
     _Lcd_Shift_Right
       _Lcd_Cmd
     _Lcd_Write_Char
     _Lcd_Write_String
   ___wmul
   _blinky
   _sprintf
     ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _LOW_PRIORITY (ROOT)
   i1_Lcd_Blink
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Clear
     i1_Lcd_Cmd
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port
   i1_sprintf
     i1_vfprintf
       i1_vfpfcnvrt
         i1___awdiv
         i1___awmod
         i1_abs
           i1___awmod (ARG)
         i1_fputc
           i1_putch

 _HIGH_PRIORITY_i (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      34       7       20.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      4E       1       83.0%
BITBIGSFRhhl        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFRhhhlhh     19      0       0      21        0.0%
BITBIGSFRhhhll       E      0       0      24        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRllh         6      0       0      28        0.0%
BITBIGSFRlhh         4      0       0      26        0.0%
BITBIGSFRhhhlhl      2      0       0      23        0.0%
BITBIGSFRhhhlhh      1      0       0      22        0.0%
BITBIGSFRlhl         1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      30        0.0%
DATA                 0      0     110       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jul 06 19:55:19 2024

                ___awdiv@sign 0065                            bsr 0FE0           __end_ofi1_vfpfcnvrt 19C0  
         ___wmul@multiplicand 0062                           l111 0A22                           l230 232E  
                         l310 15F2                           l241 235C                           l313 26AA  
                         l234 2344                           l226 2318                           l411 1AFC  
                         l244 2632                           l316 26B8                           l260 2196  
                         l253 1BDA                           l238 235A                           l263 2542  
                         l247 269C                           l272 2680                           l281 26C6  
                         l257 1BDA                           l275 268E                           l428 2652  
                         l269 221A                           l437 260C                           l278 26D4  
                         l369 138C                           l681 205E                           l668 1D72  
                         _abs 257C                           _num 00E2                  ___awmod@sign 0065  
                         wreg 0FE8           __end_of_Lcd_NoBlink 26C8         Lcd_CGRAM_CreateChar@i 006B  
                        l1115 2442                          ?_abs 0066                          l1153 17DC  
                        l1163 2598                          l3101 13BA                          l3021 213A  
                        l3013 2110                          l1166 25B0                          l3111 13FA  
                        l3103 13CE                          l3031 216E                          l3023 214C  
                        l3015 211C                          l1159 23FE                          l3121 1416  
                        l3113 13FE                          l3041 218C                          l3033 2174  
                        l3025 2152                          l3017 2122                          l3201 23F4  
                        l1178 1EF2                          l3123 143E                          l3115 1412  
                        l3043 2192                          l3035 217A                          l3027 2162  
                        l3019 2134                          l3051 1B2C                          l3133 145A  
                        l3125 1442                          l3109 13D2                          l3037 2180  
                        l3029 2168                          l3061 1B6E                          l3053 1B38  
                        l3045 1B02                          l3301 0FC6                          l1189 26F8  
                        l3151 14DE                          l3135 1482                          l3127 1456  
                        l3039 2186                          l3071 1BB6                          l3063 1B80  
                        l3055 1B4A                          l3047 1B14                          l3311 1004  
                        l3303 0FE0                          l3161 150E                          l3145 149E  
                        l3137 1486                          l3073 1BC8                          l3065 1B92  
                        l3057 1B5C                          l3049 1B26                          l3081 21D8  
                        l3401 1270                          l3313 1012                          l3305 0FE4  
                        l3171 154E                          l3163 1522                          l3147 14C6  
                        l3139 149A                          l3091 1396                          l3075 1BCE  
                        l3067 1B98                          l3059 1B62                          l3083 21DE  
                        l3411 12CE                          l3403 1276                          l3331 1080  
                        l3315 101E                          l3307 0FF4                          l3251 2650  
                        l4131 0E98                          l4133 1ABE                          l3181 156A  
                        l3173 1552                          l3157 14E2                          l3149 14CA  
                        l3069 1BA4                          l3085 2674                          l3077 2198  
                        l3421 130C                          l3413 12D4                          l3405 129A  
                        l3341 10C8                          l3333 1086                          l3325 104C  
                        l3317 102C                          l3309 0FF8                          l3261 0EEA  
                        l3501 25E6                          l3245 2634                          l2701 1D12  
                        l3183 1592                          l3175 1566                          l3159 150A  
                        l3191 269E                          l3087 2682                          l3079 21A6  
                        l3431 134A                          l3423 1312                          l3415 12EE  
                        l3407 12A8                          l3351 1124                          l3343 10E2  
                        l3335 10AA                          l3327 105C                          l3319 1046  
                        l3271 0F3A                          l3263 0EFA                          l3255 0EC2  
                        l3503 2604                          l3247 2646                          l2711 1D46  
                        l2703 1D20                          l3441 26C8                          l3193 26AC  
                        l3185 1596                          l3169 1526                          l3097 139A  
                        l3089 1392                          l3433 1366                          l3425 1320  
                        l3417 12FC                          l3409 12C4                          l3361 113C  
                        l3353 1128                          l3345 10EC                          l3337 10B8  
                        l3329 1076                          l3273 0F52                          l3265 0F0A  
                        l3257 0ECA                          l3249 264E                          l2713 1D4C  
                        l2705 1D26                          l4129 0BFE                          l3601 0A16  
                        l3443 26BA                          l3099 13B6                          l3435 1374  
                        l3427 1326                          l3419 1302                          l3371 11A0  
                        l3363 114C                          l3355 1138                          l3347 10F2  
                        l3339 10C2                          l3291 0FAE                          l3275 0F5E  
                        l3267 0F1A                          l3259 0EDA                          l2707 1D3C  
                        l2715 1D52                          l2731 1FCE                          l2723 1FAE  
                        l3195 23BA                          l3451 241E                          l3611 0A2E  
                        l3603 0A18                          l2661 2330                          l2653 2302  
                        l3461 19DA                          l3189 15AA                          l3437 1378  
                        l3429 1340                          l3381 11FC                          l3373 11BA  
                        l3365 1166                          l3349 110C                          l3293 0FBE  
                        l3285 0F8C                          l3277 0F6C                          l3269 0F2A  
                        l2717 1D62                          l2709 1D44                          l2741 2006  
                        l2733 1FDC                          l2725 1FB4                          l2901 1624  
                        l3197 23C6                          l3453 2432                          l3445 2400  
                        l3701 0C82                          l3621 0A86                          l3613 0A3A  
                        l3605 0A1A                          l2663 233E                          l2655 2312  
                        l2671 2614                          l3471 1A50                          l3439 1388  
                        l3391 1214                          l3383 1200                          l3375 11C4  
                        l3367 1170                          l3287 0F90                          l3279 0F86  
                        l2719 1D6A                          l2743 2014                          l2751 203E  
                        l2735 1FE4                          l2727 1FC2                          l2911 167A  
                        l2903 1630                          l3199 23D8                          l3447 240E  
                        l3711 0CC2                          l3703 0C8E                          l3631 0AD6  
                        l3623 0AA0                          l3615 0A54                          l3607 0A24  
                        l2665 2346                          l2657 231A                          l2673 261C  
                        l3481 1A82                          l3473 1A5A                          l3465 19F0  
                        l3457 19C0                          l3393 1238                          l3385 1210  
                        l3377 11CA                          l3369 1176                          l3289 0FAA  
                        l2681 1CB4                          l2753 204E                          l2745 202A  
                        l2737 1FF6                          l2729 1FCA                          l2761 1E4A  
                        l2921 1716                          l2913 1692                          l2905 1634  
                        l3449 2416                          l3721 0D36                          l3705 0CA8  
                        l3713 0CC8                          l3641 0B0C                          l3633 0AE4  
                        l3625 0AA4                          l3617 0A5E                          l3609 0A28  
                        l2667 2354                          l2659 2328                          l2675 261E  
                        l3483 1A8A                          l3475 1A6A                          l3467 1A02  
                        l3459 19CC                          l3395 1252                          l3379 11EE  
                        l3299 0FC2                          l2691 1CE4                          l2683 1CC2  
                        l2755 2056                          l2747 2032                          l2739 1FFE  
                        l2763 1E5A                          l2931 1770                          l2923 172A  
                        l2915 16AC                          l2907 1642                          l3731 0D84  
                        l3723 0D52                          l3715 0CE0                          l3707 0CB0  
                        l3643 0B14                          l3635 0AF0                          l3627 0AB0  
                        l3619 0A6C                          l3571 09E8                          l3563 09D8  
                        l2677 2630                          l2669 2612                          l3485 1A92  
                        l3477 1A72                          l3493 1AA2                          l3469 1A10  
                        l3397 125C                          l2693 1CE8                          l2685 1CCA  
                        l2749 2038                          l2773 257C                          l2765 1E64  
                        l2933 178E                          l2925 173A                          l2917 16C4  
                        l2909 165E                          l2941 17BA                          l3741 0DB6  
                        l3733 0D98                          l3725 0D5E                          l3717 0CFA  
                        l3709 0CBE                          l3661 0BA2                          l3653 0B5C  
                        l3637 0AFE                          l3629 0ACA                          l3645 0B18  
                        l3581 09F8                          l3573 09EC                          l3565 09DC  
                        l3487 1A9A                          l3479 1A7A                          l3399 1262  
                        l2695 1CF0                          l2687 1CCE                          l2679 1CAE  
                        l2775 258C                          l2767 1E80                          l2759 1E38  
                        l2927 174A                          l2935 1792                          l2919 16FA  
                        l3751 0E1C                          l3743 0DD0                          l3735 0D9C  
                        l3727 0D6C                          l3719 0CFE                          l3671 0BD4  
                        l3663 0BAC                          l3655 0B6E                          l3647 0B2A  
                        l3639 0B02                          l3591 0A0A                          l3583 09FA  
                        l3575 09EE                          l3567 09E0                          l2881 251A  
                        l2697 1D02                          l2689 1CDC                          l2769 1EB2  
                        l2929 175A                          l2937 17A8                          l3761 0E60  
                        l3753 0E20                          l3745 0DDA                          l3737 0DA6  
                        l3729 0D78                          l3673 0BDC                          l3665 0BB6  
                        l3657 0B78                          l3681 0C14                          l3649 0B3C  
                        l3593 0A0C                          l3585 09FC                          l3577 09F2  
                        l3569 09E4                          l2891 2536                          l2883 2522  
                        l2875 2690                          l2699 1D0A                          l3763 0E6E  
                        l3755 0E3A                          l3747 0DE8                          l3739 0DAA  
                        l3683 0C20                          l3667 0BC2                          l3659 0B84  
                        l3595 0A0E                          l3587 0A00                          l3579 09F6  
                        l2893 2538                          l2885 2524                          l2877 250A  
                        l3765 0E76                          l3757 0E46                          l3749 0E02  
                        l3685 0C30                          l3669 0BC6                          l3597 0A12  
                        l3589 0A08                          l2895 2540                          l2887 252C  
                        l2879 2518                          l3759 0E54                          l3695 0C58  
                        l3687 0C4A                          l3679 0BE8                          l3599 0A14  
                        l2889 252E                          l2897 15F4                          l3697 0C72  
                        l3689 0C4E                          l3769 0E80                          l2899 1618  
                        l3699 0C76                          STR_1 7F7F                          STR_2 7F50  
                        STR_3 7F70                          STR_4 7FB8                          STR_5 7F60  
                        STR_6 7FC4                          STR_7 7FAB                          STR_8 7FF7  
                        STR_9 7FE4               ?_Lcd_CGRAM_Init 0001               __end_of_RGB_BCD 1AFE  
                        u2200 221A                          u2201 2216                          u2210 13CA  
                        u2211 13C6                          u2220 140E                          u2140 1B14  
                        u2221 140A                          u2141 1B10                          u2230 1452  
                        u2150 1B4A                          u2310 0FBE                          _LATB 0F8A  
                        u2231 144E                          u2151 1B46                          u2311 0FBA  
                        u1520 2312                          u2240 1496                          u2160 1B80  
                        u2320 0FF4                          u1600 1D3C                          _LATD 0F8C  
                        u1521 230E                          u2241 1492                          u2161 1B7C  
                        u2321 0FF0                          u1601 1D38                          u3017 0A92  
                        _LATE 0F8D                          u1530 2328                          u2250 14DA  
                        u2170 1BB6                          u2330 1138                          u1610 1D62  
                        u1531 2324                          u2251 14D6                          u2171 1BB2  
                        u2331 1134                          u3107 1068                          u1611 1D5E  
                        u3027 0ABC                          u1540 233E                          u2260 151E  
                        u2180 21D4                          u2340 1210                          u1620 1FC2  
                        u1700 1E80                          u2500 0B58                          u1541 233A  
                        u2261 151A                          u2341 120C                          u3117 1092  
                        u1621 1FBE                          u1701 1E7C                          u3037 0C9A  
                        u2501 0B54                          u1550 2354                          u2270 1562  
                        u2190 220A                          u2350 1388                          u1630 1FDC  
                        u1710 1EB2                          u2510 0B6E                          u1551 2350  
                        u2271 155E                          u2351 1384                          u3207 12E0  
                        u3127 10D4                          u1631 1FD8                          u1711 1EAE  
                        u3047 0E0E                          u2511 0B6A                          u2360 19DA  
                        u2280 15A6                          u1560 1CC2                          u1640 1FF6  
                        u1720 258C                          u2520 0C4A                          u2361 19D6  
                        u2281 15A2                          u3217 1332                          u3137 10FE  
                        u1561 1CBE                          u1641 1FF2                          u1721 2588  
                        u3057 0E2C                          u2521 0C46                          u2370 19EC  
                        u1570 1CDC                          u1650 2014                          u2290 23F4  
                        u2530 0CBE                          u2371 19E8                          u3227 212A  
                        u2187 21CA                          u3147 1158                          u3067 0F78  
                        u1571 1CD8                          u1651 2010                          u2291 23F0  
                        u2531 0CBA                          u2380 1A10                          u1580 1D02  
                        u1660 202A                          u1900 1618                          u2540 0CFA  
                        u2381 1A0C                          u3237 2142                          u2197 2200  
                        u3157 1182                          u3077 0F9C                          u1581 1CFE  
                        u1661 2026                          u1901 1614                          u2541 0CF6  
                        u2390 1A50                          u1590 1D20                          u1670 204E  
                        u1910 165E                          u2550 0D98                          u2470 0A54  
                        u2391 1A4C                          u3247 215A                          u3167 11AC  
                        u3087 0FD2                          u1591 1D1C                          u1671 204A  
                        u1911 165A                          u2551 0D94                          u2471 0A50  
                        u1680 1E4A                          u1920 167A                          u2560 0DD0  
                        u2480 0B2A                          u3257 2526                          u3177 11D6  
                        u3097 1038                          u1681 1E46                          u1921 1676  
                        u2561 0DCC                          u2481 0B26                          u1690 1E5A  
                        u1930 16C0                          u2490 0B3C                          u3267 253A  
                        u3187 1244                          u1691 1E56                          u1931 16BA  
                        u2491 0B38                          u1940 16C2                          u3277 19F8  
                        u3197 1282                          u1950 172A                          u3287 2626  
                        u1951 1726                          u1960 173A                          u1961 1736  
                        u1970 174A                          u1971 1746                          u1980 175A  
                        u1981 1756                          u1990 17A4                          u1991 17A0  
             _HIGH_PRIORITY_i 0008                          abs@a 0066             ?_Lcd_Write_String 0064  
                        _dbuf 0100                          _cyan 00EA                          _main 09D8  
                        _azul 00EB                          _prec 00AA                          _rojo 004E  
                        fsr1h 0FE2                          fsr2h 0FDA                          indf1 0FE7  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        btemp 004F                          prodh 0FF4                          prodl 0FF3  
                        start 09D4            ??_Lcd_Write_String 0066               __end_ofi1_fputc 1FAE  
             __end_ofi1_putch 26FC               __end_of_Lcd_Cmd 2634                  ___param_bank 0000  
                  i1_vfprintf 2444                         ??_abs 0068               __end_of_Welcome 138E  
               i1vfpfcnvrt@ap 000E                 i1vfpfcnvrt@cp 0012                 i1vfpfcnvrt@fp 000C  
                       ?_main 0001                i1___awdiv@sign 0007               __end_of___awdiv 1D74  
                       STR_10 7F9D                         STR_11 7F8E                         STR_12 7F2C  
                       STR_20 7F1D                         STR_13 7F2C                         STR_21 7F2E  
                       STR_22 7F2C                         STR_14 7F78                         STR_23 7F2C  
                       STR_15 7FEE                         STR_24 7F2C                         STR_16 7FDA  
                       STR_25 7F2C                         STR_17 7FD0                         STR_26 7F2C  
                       STR_18 7F6D                         STR_27 7F2C                         STR_19 7F3F  
                       STR_28 7F2C               __end_of___awmod 2060              ?_Lcd_CGRAM_Close 0001  
             ___awdiv@divisor 0062                         i1l201 06DA                         i1l211 09A2  
                       i1l140 00B8                         i1l230 238A                         i1l150 012A  
                       i1l142 00CE                         i1l160 019C                         i1l152 0140  
                       i1l144 00E4                         i1l241 23B8                         i1l209 09A4  
                       i1l234 23A0                         i1l226 2374                         i1l139 008A  
                       i1l244 2672                         i1l164 01CC                         i1l156 0170  
                       i1l148 0114                         i1l253 1CAC                         i1l165 020E  
                       i1l238 23B6                         i1l166 01E2                         i1l158 0186  
                       i1l247 26E2                         i1l263 257A                         i1l168 01F8  
                       i1l257 1CAC                         i1l269 2298                         i1l197 06F2  
                       i1l278 26F0                         i1l681 210E                         i2l434 2502  
                       i1l668 1E36             ?i1_Lcd_Set_Cursor 0005               ___awdiv@counter 0064  
                vfpfcnvrt@fmt 006B                         _TMR0H 0FD7                         _TMR0L 0FD6  
                       _PORTB 0F81                         _TRISA 0F92                         _TRISB 0F93  
                       _TRISD 0F95                         _TRISE 0F96                         i1_abs 25B2  
                 ?i1_Lcd_Port 0001                         _Negro 00ED            ??i1_Lcd_Set_Cursor 0006  
                       _Tecla 004D                i1___awmod@sign 0007                    _Borrado_En 0049  
                       _check 00AC                         _flags 00C0                         _ok_en 003F  
                       _fputc 1E38                         _times 00B0                         _verde 00E9  
                       _width 00A8                         _state 00BE                         _putch 26F8  
                       main@i 00A6                         tablat 0FF5                         plusw2 0FDB  
                       ttemp5 0050                         ttemp6 0053                         ttemp7 0057  
                       status 0FD8                         wtemp8 0050               __end_of_sprintf 2444  
            __end_of_Lcd_Init 2198              __end_of_Lcd_Port 235E                   i1_vfpfcnvrt 17DE  
             __initialization 229A                  __end_of_main 0EC2                 i1vfprintf@fmt 001A  
                  i1sprintf@f 0026                    i1sprintf@s 001F                   _Lcd_NoBlink 26BA  
                      ??_main 0090                 __activetblptr 0002                        ?i1_abs 0008  
                   ??_RGB_BCD 0065       __end_of_HIGH_PRIORITY_i 2506       Lcd_CGRAM_CreateChar@add 006A  
              i1vfpfcnvrt@fmt 000D                        ?_fputc 0060              ___awdiv@dividend 0060  
                      ?_putch 0001                        i1l1115 24C4                        i1l1153 19BE  
                      i1l3001 1976                        i1l1163 25CC                        i1l3003 198C  
                      i1l1166 25E4                        i1l3007 199C                        i1l1159 2484  
                      i1l4001 07FE                        i1l1178 1FAC                        i1l3211 2660  
                      i1l4003 0800                        i1l4011 0838                        i1l3213 2670  
                      i1l3205 2656                        i1l3221 255C                        i1l1189 26FA  
                      i1l4021 0908                        i1l4005 0806                        i1l4013 08BE  
                      i1l3207 2658                        i1l3231 2570                        i1l3223 255E  
                      i1l3215 2546                        i1l4023 091A                        i1l4015 08D2  
                      i1l4007 080E                        i1l4031 095A                        i1l3209 265E  
                      i1l3233 2578                        i1l3225 2566                        i1l3217 2552  
                      i1l3241 247C                        i1l4033 096C                        i1l4025 0934  
                      i1l4017 08E4                        i1l3227 2568                        i1l3219 2554  
                      i1l3235 2444                        i1l4035 096E                        i1l4019 08F6  
                      i1l4027 093E                        i1l3229 256E                        i1l3237 2450  
                      i1l4037 0994                        i1l4029 0942                        i1l3511 1BEE  
                      i1l3239 2460                        i1l3521 1C34                        i1l3513 1C00  
                      i1l2801 1DE4                        i1l3507 26D6                        i1l3531 1C6E  
                      i1l3523 1C3A                        i1l3515 1C06                        i1l2811 1E10  
                      i1l2803 1DEA                        i1l3533 1C78                        i1l3525 1C44  
                      i1l3517 1C10                        i1l3509 1BDE                        i1l3541 221C  
                      i1l2805 1E00                        i1l2813 1E16                        i1l2821 2060  
                      i1l3535 1C8A                        i1l3527 1C56                        i1l3519 1C22  
                      i1l3543 2228                        i1l2815 1E26                        i1l2807 1E08  
                      i1l2831 208C                        i1l2823 2064                        i1l3551 2486  
                      i1l3537 1C9C                        i1l3529 1C68                        i1l3545 2258  
                      i1l2817 1E2E                        i1l2809 1E0A                        i1l2841 20C4  
                      i1l2833 2094                        i1l2825 2072                        i1l3553 2492  
                      i1l3801 00FA                        i1l3539 1CA2                        i1l3547 225C  
                      i1l2851 20FE                        i1l2843 20DA                        i1l2835 20A6  
                      i1l2827 207A                        i1l3555 249A                        i1l3811 014E  
                      i1l3803 00FE                        i1l3549 26E4                        i1l2781 1D86  
                      i1l2853 2106                        i1l2845 20E2                        i1l2837 20AE  
                      i1l2829 207E                        i1l2861 1EF4                        i1l3557 24A2  
                      i1l3901 04F6                        i1l3821 0194                        i1l3813 0156  
                      i1l3805 010C                        i1l2951 2376                        i1l2791 1DAC  
                      i1l2783 1D8E                        i1l2847 20E8                        i1l2839 20B6  
                      i1l2871 1F6C                        i1l2863 1F04                        i1l3559 24B6  
                      i1l3911 0548                        i1l3903 04FE                        i1l3831 01DA  
                      i1l3823 01AA                        i1l3815 015A                        i1l3807 0122  
                      i1l2961 23B0                        i1l2953 2384                        i1l2793 1DB4  
                      i1l2785 1D92                        i1l2777 1D74                        i1l2849 20EE  
                      i1l2857 25B2                        i1l2865 1F14                        i1l3921 0590  
                      i1l3913 0564                        i1l3905 050A                        i1l3841 0224  
                      i1l3833 01F0                        i1l3825 01B2                        i1l3817 0168  
                      i1l3809 0138                        i1l2955 238C                        i1l2947 2360  
                      i1l2795 1DC6                        i1l2787 1DA0                        i1l2779 1D78  
                      i1l2859 25C0                        i1l2867 1F1E                        i1l2971 181E  
                      i1l2963 17DE                        i1l3931 05D4                        i1l3923 059A  
                      i1l3915 056C                        i1l3907 051C                        i1l3851 02AA  
                      i1l3843 0236                        i1l3835 0206                        i1l3827 01B6  
                      i1l3819 017E                        i1l2957 239A                        i1l2949 236E  
                      i1l2797 1DCE                        i1l2789 1DA8                        i1l2869 1F3A  
                      i1l2981 1896                        i1l2973 182C                        i1l2965 1800  
                      i1l3941 05FE                        i1l3933 05DE                        i1l3925 05A6  
                      i1l3917 0584                        i1l3909 052E                        i1l3861 0352  
                      i1l3853 02D6                        i1l3845 0262                        i1l3829 01C4  
                      i1l3837 020E                        i1l2959 23A2                        i1l2799 1DD6  
                      i1l2991 1920                        i1l2983 18AE                        i1l2975 1848  
                      i1l2967 180C                        i1l3951 0626                        i1l3943 0606  
                      i1l3935 05E6                        i1l3927 05B0                        i1l3919 058C  
                      i1l3871 03E0                        i1l3863 0364                        i1l3855 02E8  
                      i1l3847 0274                        i1l3791 00A2                        i1l3783 0046  
                      i1l2993 1930                        i1l2985 18E2                        i1l2977 1864  
                      i1l2969 181A                        i1l3961 06D2                        i1l3953 062E  
                      i1l3945 060E                        i1l3937 05EE                        i1l3929 05BC  
                      i1l3881 0488                        i1l3873 040C                        i1l3865 0390  
                      i1l3857 0314                        i1l3849 0298                        i1l3793 00B0  
                      i1l3785 0054                        i1l2995 1940                        i1l2987 18FE  
                      i1l2979 187C                        i1l3971 0712                        i1l3963 06D4  
                      i1l3955 0636                        i1l3947 0616                        i1l3939 05F6  
                      i1l3891 04D0                        i1l3883 049A                        i1l3875 041E  
                      i1l3867 03A2                        i1l3859 0326                        i1l3795 00C6  
                      i1l3787 0066                        i1l2997 1956                        i1l2989 1910  
                      i1l3981 0736                        i1l3973 0714                        i1l3965 06D6  
                      i1l3949 061E                        i1l3957 0642                        i1l3893 04D4  
                      i1l3885 04A4                        i1l3877 044A                        i1l3869 03CE  
                      i1l3797 00DC                        i1l3789 007A                        i1l2999 1974  
                      i1l3991 076E                        i1l3983 074A                        i1l3975 0716  
                      i1l3967 06D8                        i1l3959 0656                        i1l3895 04DE  
                      i1l3887 04B0                        i1l3879 045C                        i1l3799 00F2  
                      i1l3993 077A                        i1l3985 074E                        i1l3977 0718  
                      i1l3969 06FE                        i1l3897 04E6                        i1l3889 04C6  
                      i1l3995 0786                        i1l3987 0758                        i1l3979 071A  
                      i1l3899 04EE                        i2l2581 2500                        i2l2573 24C8  
                      i1l3997 07FA                        i1l3989 0764                        i2l2575 24D6  
                      i1l3999 07FC                        i2l2577 24F8                        i2l2579 24FC  
                   ??i1_fputc 0005                 main@countdown 0092             ?i1_Lcd_Write_Char 0001  
                   ??i1_putch 0002                     ??_Lcd_Cmd 0061                 vfpfcnvrt@done 006F  
                ?i1_Lcd_Clear 0001                  ?i1_Lcd_Blink 0001                        i1abs@a 0008  
          ??i1_Lcd_Write_Char 0003             __end_ofi1_Lcd_Cmd 2674                  vfprintf@cfmt 007B  
            __end_of_figura_1 7F1D              __end_of_figura_2 7F15              __end_of_figura_3 7F0D  
            __end_of_figura_4 7F05              __end_of_figura_5 7EFD              __end_of_figura_6 7EF5  
            __end_of_figura_7 7EED              __end_of_figura_8 7EE5              __end_of_figura_9 7EDD  
                   ??_Welcome 0073                   ?i1_vfprintf 0019             i1Lcd_Write_Char@a 0005  
Lcd_CGRAM_CreateChar@chardata 0064             i1Lcd_Write_Char@y 0004                        ___wmul 25E6  
                   ??___awdiv 0064                     ??___awmod 0064                        _blanco 00C1  
                      _digito 00B2                        _blinky 2634                        _re_pcs 00E0  
                      clear_0 22D2                        clear_1 22DE                        clear_2 22EA  
            ___awdiv@quotient 0066               ___awmod@divisor 0062                        isa$std 0001  
                      _result 00B4               ___awmod@counter 0064             __end_ofi1___awdiv 1E38  
           __end_ofi1___awmod 2110                        fputc@c 0060                  __pdataCOMRAM 004E  
                __mediumconst 7ED4                        tblptrh 0FF7                        tblptrl 0FF6  
                      tblptru 0FF8                        putch@c 0001              __end_of_vfprintf 2400  
                   ??_sprintf 0083               Lcd_Set_Cursor@a 0064               Lcd_Set_Cursor@b 0063  
             Lcd_Set_Cursor@y 0066               Lcd_Set_Cursor@z 0065     Lcd_CGRAM_CreateChar@i_770 006E  
   Lcd_CGRAM_CreateChar@i_771 006F     Lcd_CGRAM_CreateChar@i_772 0070     Lcd_CGRAM_CreateChar@i_773 0071  
   Lcd_CGRAM_CreateChar@i_774 0072     Lcd_CGRAM_CreateChar@i_768 006C     Lcd_CGRAM_CreateChar@i_769 006D  
                  __accesstop 0060       __end_of__initialization 22F0             __end_ofi1_sprintf 24C6  
           __end_of_Lcd_Clear 269E             __end_of_Lcd_Blink 26D6                 ___rparam_used 0001  
               __end_ofi1_abs 25E6                __pcstackCOMRAM 0001                  __pidataBANK0 26F2  
              i1vfprintf@cfmt 001D                 __end_of_fputc 1EF4                 __end_of_putch 26FA  
              _Lcd_Set_Cursor 1AFE                       ??i1_abs 000A              ??_Lcd_CGRAM_Init 0063  
                 i1sprintf@ap 0025              ?_HIGH_PRIORITY_i 0001                _Lcd_Shift_Left 2682  
                   ?_Lcd_Init 0001                     ?_Lcd_Port 0001                       ??_fputc 0063  
                     ??_putch 0060                    __pbssBANK0 00A8                    __pbssBANK1 0100  
             i1vfpfcnvrt@done 0011                       ?___wmul 0060                       ?_blinky 0001  
      __end_of_Lcd_Set_Cursor 1BDC                 ?_LOW_PRIORITY 0001            i1___awdiv@dividend 0002  
      __end_of_Lcd_Shift_Left 2690             ??_Lcd_Shift_Right 0063                  ??i1_Lcd_Port 0002  
                     _RGB_BCD 19C0                    ??_Lcd_Init 0063                    ??_Lcd_Port 0060  
                     i1_fputc 1EF4                _Lcd_Write_Char 2506                       i1_putch 26FA  
                     _Lcd_Cmd 260E                       _Borrado 00B8                       __Hparam 0000  
                ?i1_vfpfcnvrt 000C                       __Lparam 0000            i1___awdiv@quotient 0008  
                     _Welcome 0EC2            __end_ofi1_Lcd_Port 23BA                       ___awdiv 1CAE  
                     ___awmod 1FAE                     ?_vfprintf 0077                ??_LOW_PRIORITY 0032  
                     __pcinit 229A                       __ramtop 0800               ?_Lcd_Set_Cursor 0063  
                ?_Lcd_NoBlink 0001                       __ptext0 09D8                       __ptext1 2400  
                     __ptext2 23BA                       __ptext3 15F4                       __ptext4 1E38  
                     __ptext5 26F8                       __ptext6 257C                       __ptext7 1FAE  
                     __ptext8 1CAE                       __ptext9 2634                     _T0CONbits 0FD5  
                     _magenta 00EC                       _ok_flag 0041               ?_Lcd_Shift_Left 0001  
            ___awmod@dividend 0060                    _re_pcs_str 00C2                       _times_1 00AE  
                     _num_str 00D6    __end_ofi1_Lcd_Write_String 229A                       _sprintf 2400  
      __end_of_Lcd_Write_Char 2544                __pintcode_body 24C6          end_of_initialization 22F0  
                     fputc@fp 0062                 __Lmediumconst 7ED4                       int_func 24C6  
                ??i1_vfprintf 001D             __end_of_vfpfcnvrt 17DE                       postdec1 0FE5  
                     postdec2 0FDD                       postinc0 0FEE                       postinc1 0FE6  
                     postinc2 0FDE              vfpfcnvrt@convarg 0072                     Lcd_Port@a 0060  
                  ??_vfprintf 007B                     i1_Lcd_Cmd 2654                     _PORTBbits 0F81  
                   _PORTCbits 0F82                     _TRISAbits 0F92                     _TRISCbits 0F94  
                   _TRISDbits 0F95                     i1___awdiv 1D74                     i1___awmod 2060  
             ?_Lcd_Write_Char 0001            __end_ofi1_vfprintf 2486                  _contador_dec 00E4  
           Lcd_Write_String@a 0064             Lcd_Write_String@i 0068                     _E_stop_En 0043  
                   i1_sprintf 2486                     _Lcd_Clear 2690                     _Lcd_Blink 26C8  
                i1vfpfcnvrt@c 0018                   vfpfcnvrt@ap 006C                   vfpfcnvrt@cp 0070  
                 vfpfcnvrt@fp 006A                __end_of___wmul 260E                    ?i1_Lcd_Cmd 0001  
                   i1fputc@fp 0004              _Lcd_Write_String 2198                 __pidataCOMRAM 26FC  
              __end_of_blinky 2654  __end_of_Lcd_CGRAM_CreateChar 15F4           start_initialization 229A  
                 __end_of_abs 25B2                  i1vfprintf@ap 001C                  i1vfprintf@fp 0019  
                  ?i1___awdiv 0002                    ?i1___awmod 0002                     _Keypad_en 004B  
        __end_of_LOW_PRIORITY 09D4              i1_Lcd_Set_Cursor 1BDC             ??_Lcd_CGRAM_Close 0063  
                i1sprintf@fmt 0021                   vfprintf@fmt 0078                    ?i1_sprintf 001F  
                  ?_Lcd_Clear 0001                    ?_Lcd_Blink 0001               _Lcd_Shift_Right 2674  
                    ??___wmul 0064                     _Numpad_en 00BA                      ??_blinky 0060  
                 __pdataBANK0 00E8            i1___awmod@dividend 0002               Lcd_Write_Char@a 0063  
             Lcd_Write_Char@y 0062               _counted_pcs_str 0120                   __pbssCOMRAM 003F  
                    ?_RGB_BCD 0060                 __pcstackBANK0 0060                     _back_l_En 0047  
        i1Lcd_Write_Char@temp 0003                      ?i1_fputc 0002                      ?i1_putch 0001  
                    ?_Lcd_Cmd 0001            i1vfpfcnvrt@convarg 0014              ??_Lcd_Set_Cursor 0064  
                    ?_Welcome 0001                     __pintcode 0008                 __pmediumconst 7ED4  
                    ?___awdiv 0060                      ?___awmod 0060               RGB_BCD@contador 0062  
             RGB_BCD@count_En 0060              i1_Lcd_Write_Char 2544                   ??i1_Lcd_Cmd 0003  
            ??_Lcd_Shift_Left 0063          i1Lcd_Set_Cursor@temp 0009             i1___awdiv@divisor 0004  
                 __pintcodelo 0018             i1___awdiv@counter 0006                   ??i1___awdiv 0006  
                 ??i1___awmod 0006                      ?_sprintf 007D                 ??i1_Lcd_Clear 0005  
               ??i1_Lcd_Blink 0005                ___wmul@product 0064                      _LATAbits 0F89  
                    _LATDbits 0F8C       __end_of_Lcd_Shift_Right 2682          _Lcd_CGRAM_CreateChar 138E  
                    i1u200_20 236E                      i1u200_21 236A                      i1u201_20 2384  
                    i1u201_21 2380                      i1u202_20 239A                      i1u210_20 1920  
                    i1u202_21 2396                      i1u210_21 191C                      i1u203_20 23B0  
                    i1u211_20 1930                      i1u203_21 23AC                      i1u211_21 192C  
                    i1u212_20 1940                      i1u204_20 1800                      i1u300_20 096C  
                    i1u212_21 193C                      i1u204_21 17FC                      i1u300_21 0968  
                    i1u213_20 1988                      i1u205_20 1848                      i1u213_21 1984  
                    i1u205_21 1844                      i1u206_20 1864                      i1u230_20 247C  
                    i1u206_21 1860                      i1u230_21 2478                      i1u207_20 18AA  
                    i1u207_21 18A4                      i1u240_20 1BEE                      i1u208_20 18AC  
                    i1u240_21 1BEA                      i1u241_20 1C22                      i1u209_20 1910  
                    i1u241_21 1C1E                      i1u209_21 190C                      i1u242_20 1C56  
                    i1u242_21 1C52                      i1u330_27 094C                      i1u243_20 1C8A  
                    i1u243_21 1C86                      i1u331_27 2560                      i1u244_20 2254  
                    i1u180_20 208C                      i1u260_20 00B0                      i1u180_21 2088  
                    i1u260_21 00AC                      i1u332_27 2572                      i1u244_27 224A  
                    i1u245_20 2288                      i1u173_20 1D86                      i1u181_20 20A6  
                    i1u261_20 00C6                      i1u173_21 1D82                      i1u181_21 20A2  
                    i1u261_21 00C2                      i1u333_27 2666                      i1u245_27 227E  
                    i1u246_20 2298                      i1u174_20 1DA0                      i1u182_20 20C4  
                    i1u270_20 0194                      i1u262_20 00DC                      i1u246_21 2294  
                    i1u174_21 1D9C                      i1u182_21 20C0                      i1u270_21 0190  
                    i1u262_21 00D8                      i1u175_20 1DC6                      i1u183_20 20DA  
                    i1u271_20 01AA                      i1u263_20 00F2                      i1u175_21 1DC2  
                    i1u183_21 20D6                      i1u271_21 01A6                      i1u263_21 00EE  
                    i1u176_20 1DE4                      i1u184_20 20FE                      i1u280_20 02E8  
                    i1u272_20 01C4                      i1u264_20 010C                      i1u176_21 1DE0  
                    i1u184_21 20FA                      i1u280_21 02E4                      i1u272_21 01C0  
                    i1u264_21 0108                      i1u177_20 1E00                      i1u185_20 25C0  
                    i1u281_20 0326                      i1u273_20 01DA                      i1u265_20 0122  
                    i1u257_20 0054                      i1u177_21 1DFC                      i1u185_21 25BC  
                    i1u281_21 0322                      i1u273_21 01D6                      i1u265_21 011E  
                    i1u257_21 0050                      i1u329_27 05C6                      i1u178_20 1E26  
                    i1u186_20 1F04                      i1u290_20 0548                      i1u282_20 0364  
                    i1u274_20 01F0                      i1u266_20 0138                      i1u258_20 0066  
                    i1u178_21 1E22                      i1u186_21 1F00                      i1u290_21 0544  
                    i1u282_21 0360                      i1u274_21 01EC                      i1u266_21 0134  
                    i1u258_21 0062                      i1u179_20 2072                      i1u187_20 1F14  
                    i1u291_20 0564                      i1u283_20 03A2                      i1u275_20 0206  
                    i1u267_20 014E                      i1u259_20 007A                      i1u179_21 206E  
                    i1u187_21 1F10                      i1u291_21 0560                      i1u283_21 039E  
                    i1u275_21 0202                      i1u267_21 014A                      i1u259_21 0076  
                    i1u188_20 1F3A                      i1u292_20 0656                      i1u284_20 03E0  
                    i1u276_20 0220                      i1u268_20 0168                      i1u188_21 1F36  
                    i1u292_21 0652                      i1u284_21 03DC                      i1u276_21 021C  
                    i1u268_21 0164                      i1u189_20 1F6C                      i1u293_20 074A  
                    i1u285_20 041E                      i1u277_20 0236                      i1u269_20 017E  
                    i1u189_21 1F68                      i1u293_21 0746                      i1u285_21 041A  
                    i1u277_21 0232                      i1u269_21 017A                      i1u294_20 081E  
                    i1u286_20 045C                      i1u278_20 0274                      i1u294_21 0818  
                    i1u286_21 0458                      i1u278_21 0270                      i2u150_40 24D6  
                    i2u150_41 24D2                      i1u294_26 0820                      i1u295_20 08D2  
                    i1u287_20 049A                      i1u279_20 02AA                      i1u295_21 08CE  
                    i1u287_21 0496                      i1u279_21 02A6                      i2u151_40 24E6  
                    i2u151_41 24E0                      i1u296_20 08E4                      i1u288_20 051C  
                    i1u296_21 08E0                      i1u288_21 0518                      i2u151_46 24E8  
                    i1u297_20 08F6                      i1u289_20 052E                      i1u297_21 08F2  
                    i1u289_21 052A            i1_Lcd_Write_String 221C                      i1u298_20 0908  
                    i1u298_21 0904                      i1u299_20 091A                      i1u299_21 0916  
                    Lcd_Cmd@a 0062                   ??i1_sprintf 0025                   ??_Lcd_Clear 0063  
                    _RCONbits 0FD0                   ??_Lcd_Blink 0063           ?i1_Lcd_Write_String 0006  
                   _vfpfcnvrt 15F4                    _ADCON1bits 0FC1             ___wmul@multiplier 0060  
            ??_Lcd_Write_Char 0061                      _Lcd_Init 2110                      _Lcd_Port 22FE  
                  vfpfcnvrt@c 0076                      i1fputc@c 0002                   _INTCON2bits 0FF1  
                   copy_data0 22AE          ??i1_Lcd_Write_String 0008                      _Enter_en 00BC  
    __end_of_Lcd_Write_String 221C         ?_Lcd_CGRAM_CreateChar 0064                      __Hrparam 0000  
                  vfprintf@ap 007A                      __Lrparam 0000                    vfprintf@fp 0077  
         __end_ofi1_Lcd_Clear 26E4           __end_ofi1_Lcd_Blink 26F2             ??_HIGH_PRIORITY_i 0001  
                    Welcome@i 0075           RGB_BCD@contador_dec 0063             i1___awmod@divisor 0004  
           i1___awmod@counter 0006                    ?_vfpfcnvrt 006A                  _LOW_PRIORITY 0018  
    __end_ofi1_Lcd_Set_Cursor 1CAE                    sprintf@fmt 007F                      _amarillo 00E8  
           i1Lcd_Set_Cursor@a 0006             i1Lcd_Set_Cursor@b 0005             i1Lcd_Set_Cursor@y 0008  
           i1Lcd_Set_Cursor@z 0007               _Lcd_CGRAM_Close 26AC                      __ptext10 25E6  
                    __ptext11 0EC2                      __ptext20 2506                      __ptext12 2198  
                    __ptext21 26AC                      __ptext13 2674                      __ptext30 17DE  
                    __ptext22 19C0                      __ptext14 2682                      __ptext31 1EF4  
                    __ptext23 26BA                      __ptext15 1AFE                      __ptext40 26E4  
                    __ptext32 26FA                      __ptext24 26C8                      __ptext16 2110  
                    __ptext41 2654                      __ptext33 25B2                      __ptext25 260E  
                    __ptext17 2690                      __ptext42 235E                      __ptext34 2060  
                    __ptext26 22FE                      __ptext18 269E                      __ptext35 1D74  
                    __ptext19 138E                      __ptext36 221C                      __ptext28 2486  
                    __ptext37 2544                      __ptext29 2444                      __ptext38 1BDC  
                    __ptext39 26D6                      _figura_1 7F15                      _figura_2 7F0D  
                    _figura_3 7F05                      _figura_4 7EFD                      _figura_5 7EF5  
                    _figura_6 7EED                      _figura_7 7EE5                      _figura_8 7EDD  
                    _figura_9 7ED5                      _contador 00E6                      _count_En 00B6  
            ?_Lcd_Shift_Right 0001                   i1Lcd_Port@a 0002                      _reset_En 0045  
                Welcome@i_812 0077                  Welcome@i_805 0076                  Welcome@i_814 0079  
                Welcome@i_809 0078                      isa$xinst 0000                      int$flags 004F  
                    _vfprintf 23BA           i1Lcd_Write_String@a 0006           i1Lcd_Write_String@i 000A  
                  _INTCONbits 0FF2            Lcd_Write_Char@temp 0061                      intlevel1 0000  
                    intlevel2 0000                     sprintf@ap 0083      __end_ofi1_Lcd_Write_Char 257C  
      ??_Lcd_CGRAM_CreateChar 0066                _Lcd_CGRAM_Init 269E                   i1_Lcd_Clear 26D6  
                 i1_Lcd_Blink 26E4                 RGB_BCD@re_pcs 0064                    i1Lcd_Cmd@a 0004  
               ??i1_vfpfcnvrt 000F                    _OSCCONbits 0FD3                   ??_vfpfcnvrt 006D  
          Lcd_Set_Cursor@temp 0067                 ??_Lcd_NoBlink 0063       __end_of_Lcd_CGRAM_Close 26BA  
                    sprintf@f 0084                      sprintf@s 007D                    i1_Lcd_Port 235E  
      __end_of_Lcd_CGRAM_Init 26AC  
