

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jul 06 12:54:23 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    64   000000                     
    65                           ; Generated 17/10/2023 GMT
    66                           ; 
    67                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4550 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	idataCOMRAM
   101   0025FC                     __pidataCOMRAM:
   102                           	callstack 0
   103                           
   104                           ;initializer for _rojo
   105   0025FC  06                 	db	6
   106                           
   107                           	psect	idataBANK0
   108   0025F2                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _amarillo
   112   0025F2  04                 	db	4
   113                           
   114                           ;initializer for _verde
   115   0025F3  05                 	db	5
   116                           
   117                           ;initializer for _cyan
   118   0025F4  01                 	db	1
   119                           
   120                           ;initializer for _azul
   121   0025F5  03                 	db	3
   122                           
   123                           ;initializer for _magenta
   124   0025F6  02                 	db	2
   125                           
   126                           ;initializer for _Negro
   127   0025F7  07                 	db	7
   128                           
   129                           	psect	mediumconst
   130   007EDC                     __pmediumconst:
   131                           	callstack 0
   132   007EDC  00                 	db	0
   133   007EDD                     _figura_9:
   134                           	callstack 0
   135   007EDD  00                 	db	0
   136   007EDE  00                 	db	0
   137   007EDF  00                 	db	0
   138   007EE0  1E                 	db	30
   139   007EE1  18                 	db	24
   140   007EE2  10                 	db	16
   141   007EE3  00                 	db	0
   142   007EE4  00                 	db	0
   143   007EE5                     __end_of_figura_9:
   144                           	callstack 0
   145   007EE5                     _figura_8:
   146                           	callstack 0
   147   007EE5  04                 	db	4
   148   007EE6  0E                 	db	14
   149   007EE7  1F                 	db	31
   150   007EE8  15                 	db	21
   151   007EE9  1F                 	db	31
   152   007EEA  1F                 	db	31
   153   007EEB  15                 	db	21
   154   007EEC  00                 	db	0
   155   007EED                     __end_of_figura_8:
   156                           	callstack 0
   157   007EED                     _figura_7:
   158                           	callstack 0
   159   007EED  00                 	db	0
   160   007EEE  1C                 	db	28
   161   007EEF  06                 	db	6
   162   007EF0  03                 	db	3
   163   007EF1  06                 	db	6
   164   007EF2  1C                 	db	28
   165   007EF3  00                 	db	0
   166   007EF4  00                 	db	0
   167   007EF5                     __end_of_figura_7:
   168                           	callstack 0
   169   007EF5                     _figura_6:
   170                           	callstack 0
   171   007EF5  00                 	db	0
   172   007EF6  0C                 	db	12
   173   007EF7  1E                 	db	30
   174   007EF8  07                 	db	7
   175   007EF9  1E                 	db	30
   176   007EFA  0C                 	db	12
   177   007EFB  00                 	db	0
   178   007EFC  00                 	db	0
   179   007EFD                     __end_of_figura_6:
   180                           	callstack 0
   181   007EFD                     _figura_5:
   182                           	callstack 0
   183   007EFD  18                 	db	24
   184   007EFE  0E                 	db	14
   185   007EFF  06                 	db	6
   186   007F00  01                 	db	1
   187   007F01  06                 	db	6
   188   007F02  0E                 	db	14
   189   007F03  18                 	db	24
   190   007F04  00                 	db	0
   191   007F05                     __end_of_figura_5:
   192                           	callstack 0
   193   007F05                     _figura_4:
   194                           	callstack 0
   195   007F05  00                 	db	0
   196   007F06  04                 	db	4
   197   007F07  0E                 	db	14
   198   007F08  1F                 	db	31
   199   007F09  0E                 	db	14
   200   007F0A  04                 	db	4
   201   007F0B  00                 	db	0
   202   007F0C  00                 	db	0
   203   007F0D                     __end_of_figura_4:
   204                           	callstack 0
   205   007F0D                     _figura_3:
   206                           	callstack 0
   207   007F0D  00                 	db	0
   208   007F0E  06                 	db	6
   209   007F0F  0F                 	db	15
   210   007F10  1C                 	db	28
   211   007F11  0F                 	db	15
   212   007F12  06                 	db	6
   213   007F13  00                 	db	0
   214   007F14  00                 	db	0
   215   007F15                     __end_of_figura_3:
   216                           	callstack 0
   217   007F15                     _figura_2:
   218                           	callstack 0
   219   007F15  00                 	db	0
   220   007F16  07                 	db	7
   221   007F17  0C                 	db	12
   222   007F18  18                 	db	24
   223   007F19  0C                 	db	12
   224   007F1A  07                 	db	7
   225   007F1B  00                 	db	0
   226   007F1C  00                 	db	0
   227   007F1D                     __end_of_figura_2:
   228                           	callstack 0
   229   007F1D                     _figura_1:
   230                           	callstack 0
   231   007F1D  03                 	db	3
   232   007F1E  0E                 	db	14
   233   007F1F  0C                 	db	12
   234   007F20  18                 	db	24
   235   007F21  0C                 	db	12
   236   007F22  0E                 	db	14
   237   007F23  03                 	db	3
   238   007F24  00                 	db	0
   239   007F25                     __end_of_figura_1:
   240                           	callstack 0
   241   000000                     _TMR0L	set	4054
   242   000000                     _TMR0H	set	4055
   243   000000                     _TRISCbits	set	3988
   244   000000                     _TRISD	set	3989
   245   000000                     _LATD	set	3980
   246   000000                     _TRISDbits	set	3989
   247   000000                     _TRISAbits	set	3986
   248   000000                     _PORTBbits	set	3969
   249   000000                     _PORTB	set	3969
   250   000000                     _LATAbits	set	3977
   251   000000                     _LATB	set	3978
   252   000000                     _TRISB	set	3987
   253   000000                     _LATDbits	set	3980
   254   000000                     _LATE	set	3981
   255   000000                     _TRISA	set	3986
   256   000000                     _ADCON1bits	set	4033
   257   000000                     _TRISE	set	3990
   258   000000                     _RCONbits	set	4048
   259   000000                     _INTCONbits	set	4082
   260   000000                     _OSCCONbits	set	4051
   261   000000                     _T0CONbits	set	4053
   262   000000                     _INTCON2bits	set	4081
   263   000000                     _PORTCbits	set	3970
   264   007F25                     STR_18:
   265   007F25  20                 	db	32
   266   007F26  20                 	db	32
   267   007F27  20                 	db	32
   268   007F28  20                 	db	32
   269   007F29  43                 	db	67	;'C'
   270   007F2A  6F                 	db	111	;'o'
   271   007F2B  6E                 	db	110	;'n'
   272   007F2C  74                 	db	116	;'t'
   273   007F2D  61                 	db	97	;'a'
   274   007F2E  64                 	db	100	;'d'
   275   007F2F  6F                 	db	111	;'o'
   276   007F30  72                 	db	114	;'r'
   277   007F31  20                 	db	32
   278   007F32  20                 	db	32
   279   007F33  20                 	db	32
   280   007F34  20                 	db	32
   281   007F35  00                 	db	0
   282   007F36                     STR_19:
   283   007F36  20                 	db	32
   284   007F37  20                 	db	32
   285   007F38  20                 	db	32
   286   007F39  20                 	db	32
   287   007F3A  44                 	db	68	;'D'
   288   007F3B  65                 	db	101	;'e'
   289   007F3C  20                 	db	32
   290   007F3D  50                 	db	80	;'P'
   291   007F3E  69                 	db	105	;'i'
   292   007F3F  65                 	db	101	;'e'
   293   007F40  7A                 	db	122	;'z'
   294   007F41  61                 	db	97	;'a'
   295   007F42  73                 	db	115	;'s'
   296   007F43  20                 	db	32
   297   007F44  20                 	db	32
   298   007F45  20                 	db	32
   299   007F46  00                 	db	0
   300   007F47                     STR_17:
   301   007F47  20                 	db	32
   302   007F48  20                 	db	32
   303   007F49  20                 	db	32
   304   007F4A  42                 	db	66	;'B'
   305   007F4B  69                 	db	105	;'i'
   306   007F4C  65                 	db	101	;'e'
   307   007F4D  6E                 	db	110	;'n'
   308   007F4E  76                 	db	118	;'v'
   309   007F4F  65                 	db	101	;'e'
   310   007F50  6E                 	db	110	;'n'
   311   007F51  69                 	db	105	;'i'
   312   007F52  64                 	db	100	;'d'
   313   007F53  6F                 	db	111	;'o'
   314   007F54  73                 	db	115	;'s'
   315   007F55  20                 	db	32
   316   007F56  20                 	db	32
   317   007F57  00                 	db	0
   318   007F58                     STR_4:
   319   007F58  6E                 	db	110	;'n'
   320   007F59  75                 	db	117	;'u'
   321   007F5A  6D                 	db	109	;'m'
   322   007F5B  65                 	db	101	;'e'
   323   007F5C  72                 	db	114	;'r'
   324   007F5D  6F                 	db	111	;'o'
   325   007F5E  20                 	db	32
   326   007F5F  64                 	db	100	;'d'
   327   007F60  65                 	db	101	;'e'
   328   007F61  20                 	db	32
   329   007F62  30                 	db	48	;'0'
   330   007F63  20                 	db	32
   331   007F64  61                 	db	97	;'a'
   332   007F65  20                 	db	32
   333   007F66  35                 	db	53	;'5'
   334   007F67  39                 	db	57	;'9'
   335   007F68  00                 	db	0
   336   007F69                     STR_2:
   337   007F69  64                 	db	100	;'d'
   338   007F6A  65                 	db	101	;'e'
   339   007F6B  73                 	db	115	;'s'
   340   007F6C  65                 	db	101	;'e'
   341   007F6D  61                 	db	97	;'a'
   342   007F6E  20                 	db	32
   343   007F6F  63                 	db	99	;'c'
   344   007F70  6F                 	db	111	;'o'
   345   007F71  6E                 	db	110	;'n'
   346   007F72  74                 	db	116	;'t'
   347   007F73  61                 	db	97	;'a'
   348   007F74  72                 	db	114	;'r'
   349   007F75  3F                 	db	63	;'?'
   350   007F76  20                 	db	32
   351   007F77  20                 	db	32
   352   007F78  00                 	db	0
   353   007F79                     STR_5:
   354   007F79  65                 	db	101	;'e'
   355   007F7A  6D                 	db	109	;'m'
   356   007F7B  70                 	db	112	;'p'
   357   007F7C  65                 	db	101	;'e'
   358   007F7D  7A                 	db	122	;'z'
   359   007F7E  61                 	db	97	;'a'
   360   007F7F  6D                 	db	109	;'m'
   361   007F80  6F                 	db	111	;'o'
   362   007F81  73                 	db	115	;'s'
   363   007F82  20                 	db	32
   364   007F83  65                 	db	101	;'e'
   365   007F84  6E                 	db	110	;'n'
   366   007F85  20                 	db	32
   367   007F86  25                 	db	37
   368   007F87  64                 	db	100	;'d'
   369   007F88  00                 	db	0
   370   007F89                     STR_1:
   371   007F89  63                 	db	99	;'c'
   372   007F8A  75                 	db	117	;'u'
   373   007F8B  61                 	db	97	;'a'
   374   007F8C  6E                 	db	110	;'n'
   375   007F8D  74                 	db	116	;'t'
   376   007F8E  61                 	db	97	;'a'
   377   007F8F  73                 	db	115	;'s'
   378   007F90  20                 	db	32
   379   007F91  70                 	db	112	;'p'
   380   007F92  69                 	db	105	;'i'
   381   007F93  65                 	db	101	;'e'
   382   007F94  7A                 	db	122	;'z'
   383   007F95  61                 	db	97	;'a'
   384   007F96  73                 	db	115	;'s'
   385   007F97  00                 	db	0
   386   007F98                     STR_11:
   387   007F98  56                 	db	86	;'V'
   388   007F99  6F                 	db	111	;'o'
   389   007F9A  6C                 	db	108	;'l'
   390   007F9B  76                 	db	118	;'v'
   391   007F9C  65                 	db	101	;'e'
   392   007F9D  72                 	db	114	;'r'
   393   007F9E  20                 	db	32
   394   007F9F  61                 	db	97	;'a'
   395   007FA0  6C                 	db	108	;'l'
   396   007FA1  20                 	db	32
   397   007FA2  6D                 	db	109	;'m'
   398   007FA3  65                 	db	101	;'e'
   399   007FA4  6E                 	db	110	;'n'
   400   007FA5  75                 	db	117	;'u'
   401   007FA6  00                 	db	0
   402   007FA7                     STR_10:
   403   007FA7  70                 	db	112	;'p'
   404   007FA8  75                 	db	117	;'u'
   405   007FA9  6C                 	db	108	;'l'
   406   007FAA  73                 	db	115	;'s'
   407   007FAB  61                 	db	97	;'a'
   408   007FAC  20                 	db	32
   409   007FAD  6F                 	db	111	;'o'
   410   007FAE  6B                 	db	107	;'k'
   411   007FAF  20                 	db	32
   412   007FB0  70                 	db	112	;'p'
   413   007FB1  61                 	db	97	;'a'
   414   007FB2  72                 	db	114	;'r'
   415   007FB3  61                 	db	97	;'a'
   416   007FB4  00                 	db	0
   417   007FB5                     STR_7:
   418   007FB5  66                 	db	102	;'f'
   419   007FB6  61                 	db	97	;'a'
   420   007FB7  6C                 	db	108	;'l'
   421   007FB8  74                 	db	116	;'t'
   422   007FB9  61                 	db	97	;'a'
   423   007FBA  6E                 	db	110	;'n'
   424   007FBB  74                 	db	116	;'t'
   425   007FBC  65                 	db	101	;'e'
   426   007FBD  73                 	db	115	;'s'
   427   007FBE  20                 	db	32
   428   007FBF  25                 	db	37
   429   007FC0  64                 	db	100	;'d'
   430   007FC1  00                 	db	0
   431   007FC2                     STR_6:
   432   007FC2  63                 	db	99	;'c'
   433   007FC3  6F                 	db	111	;'o'
   434   007FC4  6E                 	db	110	;'n'
   435   007FC5  74                 	db	116	;'t'
   436   007FC6  61                 	db	97	;'a'
   437   007FC7  64                 	db	100	;'d'
   438   007FC8  61                 	db	97	;'a'
   439   007FC9  73                 	db	115	;'s'
   440   007FCA  20                 	db	32
   441   007FCB  25                 	db	37
   442   007FCC  64                 	db	100	;'d'
   443   007FCD  00                 	db	0
   444   007FCE                     STR_3:
   445   007FCE  69                 	db	105	;'i'
   446   007FCF  6E                 	db	110	;'n'
   447   007FD0  67                 	db	103	;'g'
   448   007FD1  72                 	db	114	;'r'
   449   007FD2  65                 	db	101	;'e'
   450   007FD3  73                 	db	115	;'s'
   451   007FD4  65                 	db	101	;'e'
   452   007FD5  20                 	db	32
   453   007FD6  75                 	db	117	;'u'
   454   007FD7  6E                 	db	110	;'n'
   455   007FD8  00                 	db	0
   456   007FD9                     STR_15:
   457   007FD9  45                 	db	69	;'E'
   458   007FDA  6D                 	db	109	;'m'
   459   007FDB  72                 	db	114	;'r'
   460   007FDC  67                 	db	103	;'g'
   461   007FDD  65                 	db	101	;'e'
   462   007FDE  6E                 	db	110	;'n'
   463   007FDF  63                 	db	99	;'c'
   464   007FE0  69                 	db	105	;'i'
   465   007FE1  61                 	db	97	;'a'
   466   007FE2  00                 	db	0
   467   007FE3                     STR_14:
   468   007FE3  50                 	db	80	;'P'
   469   007FE4  61                 	db	97	;'a'
   470   007FE5  72                 	db	114	;'r'
   471   007FE6  61                 	db	97	;'a'
   472   007FE7  64                 	db	100	;'d'
   473   007FE8  61                 	db	97	;'a'
   474   007FE9  20                 	db	32
   475   007FEA  44                 	db	68	;'D'
   476   007FEB  65                 	db	101	;'e'
   477   007FEC  00                 	db	0
   478   007FED                     STR_9:
   479   007FED  74                 	db	116	;'t'
   480   007FEE  65                 	db	101	;'e'
   481   007FEF  72                 	db	114	;'r'
   482   007FF0  6D                 	db	109	;'m'
   483   007FF1  69                 	db	105	;'i'
   484   007FF2  6E                 	db	110	;'n'
   485   007FF3  61                 	db	97	;'a'
   486   007FF4  64                 	db	100	;'d'
   487   007FF5  6F                 	db	111	;'o'
   488   007FF6  00                 	db	0
   489   007FF7                     STR_8:
   490   007FF7  63                 	db	99	;'c'
   491   007FF8  6F                 	db	111	;'o'
   492   007FF9  6E                 	db	110	;'n'
   493   007FFA  74                 	db	116	;'t'
   494   007FFB  65                 	db	101	;'e'
   495   007FFC  6F                 	db	111	;'o'
   496   007FFD  00                 	db	0
   497   007FFE  00                 	db	0	; dummy byte at the end
   498   000000                     
   499                           ; #config settings
   500                           
   501                           	psect	cinit
   502   00219A                     __pcinit:
   503                           	callstack 0
   504   00219A                     start_initialization:
   505                           	callstack 0
   506   00219A                     __initialization:
   507                           	callstack 0
   508                           
   509                           ; Initialize objects allocated to BANK0 (6 bytes)
   510                           ; load TBLPTR registers with __pidataBANK0
   511   00219A  0EF2               	movlw	low __pidataBANK0
   512   00219C  6EF6               	movwf	tblptrl,c
   513   00219E  0E25               	movlw	high __pidataBANK0
   514   0021A0  6EF7               	movwf	tblptrh,c
   515   0021A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   516   0021A4  6EF8               	movwf	tblptru,c
   517   0021A6  EE00  F0E8         	lfsr	0,__pdataBANK0
   518   0021AA  EE10 F006          	lfsr	1,6
   519   0021AE                     copy_data0:
   520   0021AE  0009               	tblrd		*+
   521   0021B0  CFF5 FFEE          	movff	tablat,postinc0
   522   0021B4  50E5               	movf	postdec1,w,c
   523   0021B6  50E1               	movf	fsr1l,w,c
   524   0021B8  E1FA               	bnz	copy_data0
   525                           
   526                           ; Initialize objects allocated to COMRAM (1 bytes)
   527                           ; load TBLPTR registers with __pidataCOMRAM
   528   0021BA  0EFC               	movlw	low __pidataCOMRAM
   529   0021BC  6EF6               	movwf	tblptrl,c
   530   0021BE  0E25               	movlw	high __pidataCOMRAM
   531   0021C0  6EF7               	movwf	tblptrh,c
   532   0021C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   533   0021C4  6EF8               	movwf	tblptru,c
   534   0021C6  0009               	tblrd		*+	;fetch initializer
   535   0021C8  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   536                           
   537                           ; Clear objects allocated to BANK1 (52 bytes)
   538   0021CC  EE01  F000         	lfsr	0,__pbssBANK1
   539   0021D0  0E34               	movlw	52
   540   0021D2                     clear_0:
   541   0021D2  6AEE               	clrf	postinc0,c
   542   0021D4  06E8               	decf	wreg,f,c
   543   0021D6  E1FD               	bnz	clear_0
   544                           
   545                           ; Clear objects allocated to BANK0 (64 bytes)
   546   0021D8  EE00  F0A8         	lfsr	0,__pbssBANK0
   547   0021DC  0E40               	movlw	64
   548   0021DE                     clear_1:
   549   0021DE  6AEE               	clrf	postinc0,c
   550   0021E0  06E8               	decf	wreg,f,c
   551   0021E2  E1FD               	bnz	clear_1
   552                           
   553                           ; Clear objects allocated to COMRAM (13 bytes)
   554   0021E4  EE00  F03F         	lfsr	0,__pbssCOMRAM
   555   0021E8  0E0D               	movlw	13
   556   0021EA                     clear_2:
   557   0021EA  6AEE               	clrf	postinc0,c
   558   0021EC  06E8               	decf	wreg,f,c
   559   0021EE  E1FD               	bnz	clear_2
   560   0021F0                     end_of_initialization:
   561                           	callstack 0
   562   0021F0                     __end_of__initialization:
   563                           	callstack 0
   564   0021F0  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   565   0021F2  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   566   0021F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   567   0021F6  6EF8               	movwf	tblptru,c
   568   0021F8  0100               	movlb	0
   569   0021FA  EFE6  F006         	goto	_main	;jump to C main() function
   570                           
   571                           	psect	bssCOMRAM
   572   00003F                     __pbssCOMRAM:
   573                           	callstack 0
   574   00003F                     _ok_en:
   575                           	callstack 0
   576   00003F                     	ds	2
   577   000041                     _E_stop_En:
   578                           	callstack 0
   579   000041                     	ds	2
   580   000043                     _reset_En:
   581                           	callstack 0
   582   000043                     	ds	2
   583   000045                     _back_l_En:
   584                           	callstack 0
   585   000045                     	ds	2
   586   000047                     _Borrado_En:
   587                           	callstack 0
   588   000047                     	ds	2
   589   000049                     _Keypad_en:
   590                           	callstack 0
   591   000049                     	ds	2
   592   00004B                     _Tecla:
   593                           	callstack 0
   594   00004B                     	ds	1
   595                           
   596                           	psect	dataCOMRAM
   597   00004C                     __pdataCOMRAM:
   598                           	callstack 0
   599   00004C                     _rojo:
   600                           	callstack 0
   601   00004C                     	ds	1
   602                           
   603                           	psect	bssBANK0
   604   0000A8                     __pbssBANK0:
   605                           	callstack 0
   606   0000A8                     _width:
   607                           	callstack 0
   608   0000A8                     	ds	2
   609   0000AA                     _prec:
   610                           	callstack 0
   611   0000AA                     	ds	2
   612   0000AC                     _check:
   613                           	callstack 0
   614   0000AC                     	ds	2
   615   0000AE                     _times_1:
   616                           	callstack 0
   617   0000AE                     	ds	2
   618   0000B0                     _times:
   619                           	callstack 0
   620   0000B0                     	ds	2
   621   0000B2                     _digito:
   622                           	callstack 0
   623   0000B2                     	ds	2
   624   0000B4                     _result:
   625                           	callstack 0
   626   0000B4                     	ds	2
   627   0000B6                     _count_En:
   628                           	callstack 0
   629   0000B6                     	ds	2
   630   0000B8                     _Borrado:
   631                           	callstack 0
   632   0000B8                     	ds	2
   633   0000BA                     _Numpad_en:
   634                           	callstack 0
   635   0000BA                     	ds	2
   636   0000BC                     _Enter_en:
   637                           	callstack 0
   638   0000BC                     	ds	2
   639   0000BE                     _state:
   640                           	callstack 0
   641   0000BE                     	ds	2
   642   0000C0                     _flags:
   643                           	callstack 0
   644   0000C0                     	ds	1
   645   0000C1                     _blanco:
   646                           	callstack 0
   647   0000C1                     	ds	1
   648   0000C2                     _re_pcs_str:
   649                           	callstack 0
   650   0000C2                     	ds	20
   651   0000D6                     _num_str:
   652                           	callstack 0
   653   0000D6                     	ds	10
   654   0000E0                     _re_pcs:
   655                           	callstack 0
   656   0000E0                     	ds	2
   657   0000E2                     _num:
   658                           	callstack 0
   659   0000E2                     	ds	2
   660   0000E4                     _contador_dec:
   661                           	callstack 0
   662   0000E4                     	ds	2
   663   0000E6                     _contador:
   664                           	callstack 0
   665   0000E6                     	ds	2
   666                           
   667                           	psect	dataBANK0
   668   0000E8                     __pdataBANK0:
   669                           	callstack 0
   670   0000E8                     _amarillo:
   671                           	callstack 0
   672   0000E8                     	ds	1
   673   0000E9                     _verde:
   674                           	callstack 0
   675   0000E9                     	ds	1
   676   0000EA                     _cyan:
   677                           	callstack 0
   678   0000EA                     	ds	1
   679   0000EB                     _azul:
   680                           	callstack 0
   681   0000EB                     	ds	1
   682   0000EC                     _magenta:
   683                           	callstack 0
   684   0000EC                     	ds	1
   685   0000ED                     _Negro:
   686                           	callstack 0
   687   0000ED                     	ds	1
   688                           
   689                           	psect	bssBANK1
   690   000100                     __pbssBANK1:
   691                           	callstack 0
   692   000100                     _dbuf:
   693                           	callstack 0
   694   000100                     	ds	32
   695   000120                     _counted_pcs_str:
   696                           	callstack 0
   697   000120                     	ds	20
   698                           
   699                           	psect	cstackBANK0
   700   000060                     __pcstackBANK0:
   701                           	callstack 0
   702   000060                     ?___wmul:
   703                           	callstack 0
   704   000060                     ?___awdiv:
   705                           	callstack 0
   706   000060                     ?___awmod:
   707                           	callstack 0
   708   000060                     Lcd_Port@a:
   709                           	callstack 0
   710   000060                     RGB_BCD@count_En:
   711                           	callstack 0
   712   000060                     ___wmul@multiplier:
   713                           	callstack 0
   714   000060                     ___awdiv@dividend:
   715                           	callstack 0
   716   000060                     ___awmod@dividend:
   717                           	callstack 0
   718   000060                     fputc@c:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x0
   722   000060                     	ds	1
   723   000061                     ??_Lcd_Cmd:
   724   000061                     Lcd_Write_Char@temp:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0x1
   728   000061                     	ds	1
   729   000062                     Lcd_Cmd@a:
   730                           	callstack 0
   731   000062                     Lcd_Write_Char@y:
   732                           	callstack 0
   733   000062                     RGB_BCD@contador:
   734                           	callstack 0
   735   000062                     fputc@fp:
   736                           	callstack 0
   737   000062                     ___wmul@multiplicand:
   738                           	callstack 0
   739   000062                     ___awdiv@divisor:
   740                           	callstack 0
   741   000062                     ___awmod@divisor:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x2
   745   000062                     	ds	1
   746   000063                     ??_Lcd_Init:
   747   000063                     ??_fputc:
   748   000063                     Lcd_Set_Cursor@b:
   749                           	callstack 0
   750   000063                     Lcd_Write_Char@a:
   751                           	callstack 0
   752   000063                     RGB_BCD@contador_dec:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x3
   756   000063                     	ds	1
   757   000064                     Lcd_Set_Cursor@a:
   758                           	callstack 0
   759   000064                     RGB_BCD@re_pcs:
   760                           	callstack 0
   761   000064                     ___awdiv@counter:
   762                           	callstack 0
   763   000064                     ___awmod@counter:
   764                           	callstack 0
   765   000064                     Lcd_Write_String@a:
   766                           	callstack 0
   767   000064                     Lcd_CGRAM_CreateChar@chardata:
   768                           	callstack 0
   769   000064                     ___wmul@product:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x4
   773   000064                     	ds	1
   774   000065                     ??_RGB_BCD:
   775   000065                     Lcd_Set_Cursor@z:
   776                           	callstack 0
   777   000065                     ___awdiv@sign:
   778                           	callstack 0
   779   000065                     ___awmod@sign:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x5
   783   000065                     	ds	1
   784   000066                     ??_Lcd_Write_String:
   785   000066                     ??_Lcd_CGRAM_CreateChar:
   786   000066                     ?_abs:
   787                           	callstack 0
   788   000066                     Lcd_Set_Cursor@y:
   789                           	callstack 0
   790   000066                     ___awdiv@quotient:
   791                           	callstack 0
   792   000066                     abs@a:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x6
   796   000066                     	ds	1
   797   000067                     Lcd_Set_Cursor@temp:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x7
   801   000067                     	ds	1
   802   000068                     ??_abs:
   803   000068                     Lcd_Write_String@i:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x8
   807   000068                     	ds	2
   808   00006A                     Lcd_CGRAM_CreateChar@add:
   809                           	callstack 0
   810   00006A                     vfpfcnvrt@fp:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0xA
   814   00006A                     	ds	1
   815   00006B                     Lcd_CGRAM_CreateChar@i:
   816                           	callstack 0
   817   00006B                     vfpfcnvrt@fmt:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0xB
   821   00006B                     	ds	1
   822   00006C                     Lcd_CGRAM_CreateChar@i_765:
   823                           	callstack 0
   824   00006C                     vfpfcnvrt@ap:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0xC
   828   00006C                     	ds	1
   829   00006D                     ??_vfpfcnvrt:
   830   00006D                     Lcd_CGRAM_CreateChar@i_766:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0xD
   834   00006D                     	ds	1
   835   00006E                     Lcd_CGRAM_CreateChar@i_767:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0xE
   839   00006E                     	ds	1
   840   00006F                     Lcd_CGRAM_CreateChar@i_768:
   841                           	callstack 0
   842   00006F                     vfpfcnvrt@done:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0xF
   846   00006F                     	ds	1
   847   000070                     Lcd_CGRAM_CreateChar@i_769:
   848                           	callstack 0
   849   000070                     vfpfcnvrt@cp:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x10
   853   000070                     	ds	1
   854   000071                     Lcd_CGRAM_CreateChar@i_770:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x11
   858   000071                     	ds	1
   859   000072                     Lcd_CGRAM_CreateChar@i_771:
   860                           	callstack 0
   861   000072                     vfpfcnvrt@convarg:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x12
   865   000072                     	ds	1
   866   000073                     ??_Welcome:
   867                           
   868                           ; 1 bytes @ 0x13
   869   000073                     	ds	2
   870   000075                     Welcome@i:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x15
   874   000075                     	ds	1
   875   000076                     Welcome@i_802:
   876                           	callstack 0
   877   000076                     vfpfcnvrt@c:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x16
   881   000076                     	ds	1
   882   000077                     ?_vfprintf:
   883                           	callstack 0
   884   000077                     Welcome@i_809:
   885                           	callstack 0
   886   000077                     vfprintf@fp:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x17
   890   000077                     	ds	1
   891   000078                     Welcome@i_806:
   892                           	callstack 0
   893   000078                     vfprintf@fmt:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x18
   897   000078                     	ds	1
   898   000079                     Welcome@i_811:
   899                           	callstack 0
   900                           
   901                           ; 1 bytes @ 0x19
   902   000079                     	ds	1
   903   00007A                     vfprintf@ap:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x1A
   907   00007A                     	ds	1
   908   00007B                     vfprintf@cfmt:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x1B
   912   00007B                     	ds	2
   913   00007D                     ?_sprintf:
   914                           	callstack 0
   915   00007D                     sprintf@s:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x1D
   919   00007D                     	ds	2
   920   00007F                     sprintf@fmt:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x1F
   924   00007F                     	ds	4
   925   000083                     sprintf@ap:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x23
   929   000083                     	ds	1
   930   000084                     sprintf@f:
   931                           	callstack 0
   932                           
   933                           ; 12 bytes @ 0x24
   934   000084                     	ds	12
   935   000090                     ??_main:
   936                           
   937                           ; 1 bytes @ 0x30
   938   000090                     	ds	2
   939   000092                     main@countdown:
   940                           	callstack 0
   941                           
   942                           ; 20 bytes @ 0x32
   943   000092                     	ds	20
   944   0000A6                     main@i:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x46
   948   0000A6                     	ds	2
   949                           
   950                           	psect	cstackCOMRAM
   951   000001                     __pcstackCOMRAM:
   952                           	callstack 0
   953   000001                     ??_HIGH_PRIORITY_i:
   954   000001                     
   955                           ; 1 bytes @ 0x0
   956   000001                     	ds	1
   957   000002                     ?i1___awdiv:
   958                           	callstack 0
   959   000002                     ?i1___awmod:
   960                           	callstack 0
   961   000002                     i1Lcd_Port@a:
   962                           	callstack 0
   963   000002                     i1___awdiv@dividend:
   964                           	callstack 0
   965   000002                     i1___awmod@dividend:
   966                           	callstack 0
   967   000002                     i1fputc@c:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x1
   971   000002                     	ds	1
   972   000003                     ??i1_Lcd_Cmd:
   973   000003                     i1Lcd_Write_Char@temp:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x2
   977   000003                     	ds	1
   978   000004                     i1Lcd_Cmd@a:
   979                           	callstack 0
   980   000004                     i1Lcd_Write_Char@y:
   981                           	callstack 0
   982   000004                     i1fputc@fp:
   983                           	callstack 0
   984   000004                     i1___awdiv@divisor:
   985                           	callstack 0
   986   000004                     i1___awmod@divisor:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x3
   990   000004                     	ds	1
   991   000005                     ??i1_fputc:
   992   000005                     i1Lcd_Set_Cursor@b:
   993                           	callstack 0
   994   000005                     i1Lcd_Write_Char@a:
   995                           	callstack 0
   996                           
   997                           ; 1 bytes @ 0x4
   998   000005                     	ds	1
   999   000006                     i1Lcd_Set_Cursor@a:
  1000                           	callstack 0
  1001   000006                     i1___awdiv@counter:
  1002                           	callstack 0
  1003   000006                     i1___awmod@counter:
  1004                           	callstack 0
  1005   000006                     i1Lcd_Write_String@a:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x5
  1009   000006                     	ds	1
  1010   000007                     i1Lcd_Set_Cursor@z:
  1011                           	callstack 0
  1012   000007                     i1___awdiv@sign:
  1013                           	callstack 0
  1014   000007                     i1___awmod@sign:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x6
  1018   000007                     	ds	1
  1019   000008                     ??i1_Lcd_Write_String:
  1020   000008                     ?i1_abs:
  1021                           	callstack 0
  1022   000008                     i1Lcd_Set_Cursor@y:
  1023                           	callstack 0
  1024   000008                     i1___awdiv@quotient:
  1025                           	callstack 0
  1026   000008                     i1abs@a:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x7
  1030   000008                     	ds	1
  1031   000009                     i1Lcd_Set_Cursor@temp:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x8
  1035   000009                     	ds	1
  1036   00000A                     ??i1_abs:
  1037   00000A                     i1Lcd_Write_String@i:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x9
  1041   00000A                     	ds	2
  1042   00000C                     i1vfpfcnvrt@fp:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0xB
  1046   00000C                     	ds	1
  1047   00000D                     i1vfpfcnvrt@fmt:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0xC
  1051   00000D                     	ds	1
  1052   00000E                     i1vfpfcnvrt@ap:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0xD
  1056   00000E                     	ds	1
  1057   00000F                     ??i1_vfpfcnvrt:
  1058                           
  1059                           ; 1 bytes @ 0xE
  1060   00000F                     	ds	2
  1061   000011                     i1vfpfcnvrt@done:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x10
  1065   000011                     	ds	1
  1066   000012                     i1vfpfcnvrt@cp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x11
  1070   000012                     	ds	2
  1071   000014                     i1vfpfcnvrt@convarg:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x13
  1075   000014                     	ds	4
  1076   000018                     i1vfpfcnvrt@c:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x17
  1080   000018                     	ds	1
  1081   000019                     ?i1_vfprintf:
  1082                           	callstack 0
  1083   000019                     i1vfprintf@fp:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x18
  1087   000019                     	ds	1
  1088   00001A                     i1vfprintf@fmt:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x19
  1092   00001A                     	ds	2
  1093   00001C                     i1vfprintf@ap:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x1B
  1097   00001C                     	ds	1
  1098   00001D                     i1vfprintf@cfmt:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x1C
  1102   00001D                     	ds	2
  1103   00001F                     ?i1_sprintf:
  1104                           	callstack 0
  1105   00001F                     i1sprintf@s:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x1E
  1109   00001F                     	ds	2
  1110   000021                     i1sprintf@fmt:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x20
  1114   000021                     	ds	4
  1115   000025                     i1sprintf@ap:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x24
  1119   000025                     	ds	1
  1120   000026                     i1sprintf@f:
  1121                           	callstack 0
  1122                           
  1123                           ; 12 bytes @ 0x25
  1124   000026                     	ds	12
  1125   000032                     ??_LOW_PRIORITY:
  1126                           
  1127                           ; 1 bytes @ 0x31
  1128   000032                     	ds	13
  1129                           
  1130 ;;
  1131 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1132 ;;
  1133 ;; *************** function _main *****************
  1134 ;; Defined at:
  1135 ;;		line 53 in file "LAB4.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  i               2   70[BANK0 ] int 
  1140 ;;  countdown      20   50[BANK0 ] unsigned char [20]
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0
  1151 ;;      Locals:         0      22       0       0       0       0       0       0       0
  1152 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1153 ;;      Totals:         0      24       0       0       0       0       0       0       0
  1154 ;;Total ram usage:       24 bytes
  1155 ;; Hardware stack levels required when called: 12
  1156 ;; This function calls:
  1157 ;;		_Lcd_Blink
  1158 ;;		_Lcd_Clear
  1159 ;;		_Lcd_Init
  1160 ;;		_Lcd_NoBlink
  1161 ;;		_Lcd_Set_Cursor
  1162 ;;		_Lcd_Write_String
  1163 ;;		_RGB_BCD
  1164 ;;		_Welcome
  1165 ;;		___wmul
  1166 ;;		_blinky
  1167 ;;		_sprintf
  1168 ;; This function is called by:
  1169 ;;		Startup code after reset
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text0
  1174   000DCC                     __ptext0:
  1175                           	callstack 0
  1176   000DCC                     _main:
  1177                           	callstack 19
  1178   000DCC                     
  1179                           ;LAB4.c: 57:    Lcd_Init();
  1180   000DCC  EC08  F010         	call	_Lcd_Init	;wreg free
  1181   000DD0                     
  1182                           ;LAB4.c: 58:    TRISB=0b11110000;
  1183   000DD0  0EF0               	movlw	240
  1184   000DD2  6E93               	movwf	147,c	;volatile
  1185   000DD4                     
  1186                           ;LAB4.c: 59:    LATB=0b11110000;
  1187   000DD4  0EF0               	movlw	240
  1188   000DD6  6E8A               	movwf	138,c	;volatile
  1189   000DD8                     
  1190                           ;LAB4.c: 60:    TRISD=0b00000000;
  1191   000DD8  0E00               	movlw	0
  1192   000DDA  6E95               	movwf	149,c	;volatile
  1193   000DDC                     
  1194                           ;LAB4.c: 61:    TRISE=0b000;
  1195   000DDC  0E00               	movlw	0
  1196   000DDE  6E96               	movwf	150,c	;volatile
  1197   000DE0                     
  1198                           ;LAB4.c: 62:    TRISCbits.RC1=1;
  1199   000DE0  8294               	bsf	148,1,c	;volatile
  1200   000DE2                     
  1201                           ;LAB4.c: 63:    TRISA=0b000000000;
  1202   000DE2  0E00               	movlw	0
  1203   000DE4  6E92               	movwf	146,c	;volatile
  1204   000DE6                     
  1205                           ;LAB4.c: 64:    ADCON1bits.PCFG = 0x0F;
  1206   000DE6  0E0F               	movlw	15
  1207   000DE8  12C1               	iorwf	193,f,c	;volatile
  1208   000DEA                     
  1209                           ;LAB4.c: 66:    INTCONbits.GIE=1;
  1210   000DEA  8EF2               	bsf	242,7,c	;volatile
  1211   000DEC                     
  1212                           ;LAB4.c: 67:    INTCONbits.PEIE=1;
  1213   000DEC  8CF2               	bsf	242,6,c	;volatile
  1214   000DEE                     
  1215                           ;LAB4.c: 68:    RCONbits.IPEN=1;
  1216   000DEE  8ED0               	bsf	208,7,c	;volatile
  1217   000DF0                     
  1218                           ;LAB4.c: 70:    OSCCONbits.IRCF=0b111;
  1219   000DF0  0E70               	movlw	112
  1220   000DF2  12D3               	iorwf	211,f,c	;volatile
  1221   000DF4                     
  1222                           ;LAB4.c: 71:    OSCCONbits.SCS=0b10;
  1223   000DF4  50D3               	movf	211,w,c	;volatile
  1224   000DF6  0BFC               	andlw	-4
  1225   000DF8  0902               	iorlw	2
  1226   000DFA  6ED3               	movwf	211,c	;volatile
  1227   000DFC                     
  1228                           ;LAB4.c: 73:    INTCONbits.RBIE=1;
  1229   000DFC  86F2               	bsf	242,3,c	;volatile
  1230   000DFE                     
  1231                           ;LAB4.c: 74:    INTCON2bits.RBIP=0;
  1232   000DFE  90F1               	bcf	241,0,c	;volatile
  1233   000E00                     
  1234                           ;LAB4.c: 75:    INTCONbits.RBIF=0;
  1235   000E00  90F2               	bcf	242,0,c	;volatile
  1236   000E02                     
  1237                           ;LAB4.c: 80:     LATE=0b111;
  1238   000E02  0E07               	movlw	7
  1239   000E04  6E8D               	movwf	141,c	;volatile
  1240   000E06                     
  1241                           ;LAB4.c: 81:     LATDbits.LATD0=0;
  1242   000E06  908C               	bcf	140,0,c	;volatile
  1243   000E08                     
  1244                           ;LAB4.c: 82:     LATDbits.LATD1=0;
  1245   000E08  928C               	bcf	140,1,c	;volatile
  1246   000E0A                     
  1247                           ;LAB4.c: 83:     LATDbits.LATD2=0;
  1248   000E0A  948C               	bcf	140,2,c	;volatile
  1249   000E0C                     
  1250                           ;LAB4.c: 84:     LATDbits.LATD3=0;
  1251   000E0C  968C               	bcf	140,3,c	;volatile
  1252   000E0E                     l3559:
  1253                           
  1254                           ;LAB4.c: 87:     {;LAB4.c: 88:       blinky ();
  1255   000E0E  EC9A  F012         	call	_blinky	;wreg free
  1256                           
  1257                           ;LAB4.c: 89:       switch (state)
  1258   000E12  EF26  F009         	goto	l3719
  1259   000E16                     l109:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;LAB4.c: 93:               LATAbits.LA3=1;
  1263   000E16  8689               	bsf	137,3,c	;volatile
  1264   000E18                     
  1265                           ; BSR set to: 0
  1266                           ;LAB4.c: 94:               Welcome();
  1267   000E18  EC80  F004         	call	_Welcome	;wreg free
  1268   000E1C                     
  1269                           ;LAB4.c: 95:               state++;
  1270   000E1C  0100               	movlb	0	; () banked
  1271   000E1E  4BBE               	infsnz	_state& (0+255),f,b
  1272   000E20  2BBF               	incf	(_state+1)& (0+255),f,b
  1273   000E22                     
  1274                           ; BSR set to: 0
  1275                           ;LAB4.c: 96:               Numpad_en=0;
  1276   000E22  0E00               	movlw	0
  1277   000E24  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  1278   000E26  0E00               	movlw	0
  1279   000E28  6FBA               	movwf	_Numpad_en& (0+255),b
  1280                           
  1281                           ;LAB4.c: 97:               break;
  1282   000E2A  EF07  F007         	goto	l3559
  1283   000E2E                     l3567:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;LAB4.c: 100:             if (times<1)
  1287   000E2E  BFB1               	btfsc	(_times+1)& (0+255),7,b
  1288   000E30  EF24  F007         	goto	u2460
  1289   000E34  51B1               	movf	(_times+1)& (0+255),w,b
  1290   000E36  E106               	bnz	u2461
  1291   000E38  05B0               	decf	_times& (0+255),w,b
  1292   000E3A  B0D8               	btfsc	status,0,c
  1293   000E3C  EF22  F007         	goto	u2461
  1294   000E40  EF24  F007         	goto	u2460
  1295   000E44                     u2461:
  1296   000E44  EF78  F007         	goto	l3597
  1297   000E48                     u2460:
  1298   000E48                     
  1299                           ; BSR set to: 0
  1300                           ;LAB4.c: 101:               {;LAB4.c: 102:                 Lcd_Set_Cursor(1,1);
  1301   000E48  0E01               	movlw	1
  1302   000E4A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1303   000E4C  0E01               	movlw	1
  1304   000E4E  ECFF  F00C         	call	_Lcd_Set_Cursor
  1305   000E52                     
  1306                           ;LAB4.c: 103:                 Lcd_Write_String("cuantas piezas");
  1307   000E52  0E89               	movlw	low STR_1
  1308   000E54  0100               	movlb	0	; () banked
  1309   000E56  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1310   000E58  0E7F               	movlw	high STR_1
  1311   000E5A  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1312   000E5C  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1313   000E60                     
  1314                           ;LAB4.c: 104:                 Lcd_Set_Cursor(2,1);
  1315   000E60  0E01               	movlw	1
  1316   000E62  0100               	movlb	0	; () banked
  1317   000E64  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1318   000E66  0E02               	movlw	2
  1319   000E68  ECFF  F00C         	call	_Lcd_Set_Cursor
  1320                           
  1321                           ;LAB4.c: 105:                 Lcd_Write_String("desea contar?  ");
  1322   000E6C  0E69               	movlw	low STR_2
  1323   000E6E  0100               	movlb	0	; () banked
  1324   000E70  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1325   000E72  0E7F               	movlw	high STR_2
  1326   000E74  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1327   000E76  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1328   000E7A                     
  1329                           ;LAB4.c: 106:                 _delay((unsigned long)((4000)*(8000000UL/4000.0)));
  1330   000E7A  0E29               	movlw	41
  1331   000E7C  0100               	movlb	0	; () banked
  1332   000E7E  6F91               	movwf	(??_main+1)& (0+255),b
  1333   000E80  0E96               	movlw	150
  1334   000E82  6F90               	movwf	??_main& (0+255),b
  1335   000E84  0E7F               	movlw	127
  1336   000E86                     u2997:
  1337   000E86  2EE8               	decfsz	wreg,f,c
  1338   000E88  D7FE               	bra	u2997
  1339   000E8A  2F90               	decfsz	??_main& (0+255),f,b
  1340   000E8C  D7FC               	bra	u2997
  1341   000E8E  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1342   000E90  D7FA               	bra	u2997
  1343   000E92                     
  1344                           ;LAB4.c: 107:                 Lcd_Clear();
  1345   000E92  ECC8  F012         	call	_Lcd_Clear	;wreg free
  1346   000E96                     
  1347                           ;LAB4.c: 108:                 Lcd_Set_Cursor(1,1);
  1348   000E96  0E01               	movlw	1
  1349   000E98  0100               	movlb	0	; () banked
  1350   000E9A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1351   000E9C  0E01               	movlw	1
  1352   000E9E  ECFF  F00C         	call	_Lcd_Set_Cursor
  1353   000EA2                     
  1354                           ;LAB4.c: 110:                 Lcd_Set_Cursor(1,1);
  1355   000EA2  0E01               	movlw	1
  1356   000EA4  0100               	movlb	0	; () banked
  1357   000EA6  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1358   000EA8  0E01               	movlw	1
  1359   000EAA  ECFF  F00C         	call	_Lcd_Set_Cursor
  1360   000EAE                     
  1361                           ;LAB4.c: 111:                 Lcd_Write_String("ingrese un");
  1362   000EAE  0ECE               	movlw	low STR_3
  1363   000EB0  0100               	movlb	0	; () banked
  1364   000EB2  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1365   000EB4  0E7F               	movlw	high STR_3
  1366   000EB6  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1367   000EB8  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1368   000EBC                     
  1369                           ;LAB4.c: 112:                 Lcd_Set_Cursor(2,1);
  1370   000EBC  0E01               	movlw	1
  1371   000EBE  0100               	movlb	0	; () banked
  1372   000EC0  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1373   000EC2  0E02               	movlw	2
  1374   000EC4  ECFF  F00C         	call	_Lcd_Set_Cursor
  1375   000EC8                     
  1376                           ;LAB4.c: 113:                 Lcd_Write_String("numero de 0 a 59");
  1377   000EC8  0E58               	movlw	low STR_4
  1378   000ECA  0100               	movlb	0	; () banked
  1379   000ECC  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1380   000ECE  0E7F               	movlw	high STR_4
  1381   000ED0  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1382   000ED2  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1383   000ED6                     
  1384                           ;LAB4.c: 114:                 Lcd_Blink();
  1385   000ED6  ECE4  F012         	call	_Lcd_Blink	;wreg free
  1386   000EDA                     
  1387                           ;LAB4.c: 115:                 Numpad_en=1;
  1388   000EDA  0E00               	movlw	0
  1389   000EDC  0100               	movlb	0	; () banked
  1390   000EDE  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  1391   000EE0  0E01               	movlw	1
  1392   000EE2  6FBA               	movwf	_Numpad_en& (0+255),b
  1393   000EE4                     
  1394                           ; BSR set to: 0
  1395                           ;LAB4.c: 116:                 Borrado_En=1;
  1396   000EE4  0E00               	movlw	0
  1397   000EE6  6E48               	movwf	(_Borrado_En+1)^0,c
  1398   000EE8  0E01               	movlw	1
  1399   000EEA  6E47               	movwf	_Borrado_En^0,c
  1400   000EEC                     
  1401                           ; BSR set to: 0
  1402                           ;LAB4.c: 117:                 times++;
  1403   000EEC  4BB0               	infsnz	_times& (0+255),f,b
  1404   000EEE  2BB1               	incf	(_times+1)& (0+255),f,b
  1405   000EF0                     l3597:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;LAB4.c: 120:             if (Numpad_en && Enter_en &&(digito<2))
  1409   000EF0  51BA               	movf	_Numpad_en& (0+255),w,b
  1410   000EF2  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  1411   000EF4  B4D8               	btfsc	status,2,c
  1412   000EF6  EF7F  F007         	goto	u2471
  1413   000EFA  EF81  F007         	goto	u2470
  1414   000EFE                     u2471:
  1415   000EFE  EF07  F007         	goto	l3559
  1416   000F02                     u2470:
  1417   000F02                     
  1418                           ; BSR set to: 0
  1419   000F02  51BC               	movf	_Enter_en& (0+255),w,b
  1420   000F04  11BD               	iorwf	(_Enter_en+1)& (0+255),w,b
  1421   000F06  B4D8               	btfsc	status,2,c
  1422   000F08  EF88  F007         	goto	u2481
  1423   000F0C  EF8A  F007         	goto	u2480
  1424   000F10                     u2481:
  1425   000F10  EF07  F007         	goto	l3559
  1426   000F14                     u2480:
  1427   000F14                     
  1428                           ; BSR set to: 0
  1429   000F14  BFB3               	btfsc	(_digito+1)& (0+255),7,b
  1430   000F16  EF98  F007         	goto	u2490
  1431   000F1A  51B3               	movf	(_digito+1)& (0+255),w,b
  1432   000F1C  E107               	bnz	u2491
  1433   000F1E  0E02               	movlw	2
  1434   000F20  5DB2               	subwf	_digito& (0+255),w,b
  1435   000F22  B0D8               	btfsc	status,0,c
  1436   000F24  EF96  F007         	goto	u2491
  1437   000F28  EF98  F007         	goto	u2490
  1438   000F2C                     u2491:
  1439   000F2C  EF07  F007         	goto	l3559
  1440   000F30                     u2490:
  1441   000F30  EFE0  F007         	goto	l3631
  1442   000F34                     l3605:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;LAB4.c: 125:                     if(Borrado==0)
  1446   000F34  51B8               	movf	_Borrado& (0+255),w,b
  1447   000F36  11B9               	iorwf	(_Borrado+1)& (0+255),w,b
  1448   000F38  A4D8               	btfss	status,2,c
  1449   000F3A  EFA1  F007         	goto	u2501
  1450   000F3E  EFA3  F007         	goto	u2500
  1451   000F42                     u2501:
  1452   000F42  EFF6  F007         	goto	l3633
  1453   000F46                     u2500:
  1454   000F46                     
  1455                           ; BSR set to: 0
  1456                           ;LAB4.c: 126:                     {;LAB4.c: 127:                   Lcd_Set_Cursor(2,12);
  1457   000F46  0E0C               	movlw	12
  1458   000F48  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1459   000F4A  0E02               	movlw	2
  1460   000F4C  ECFF  F00C         	call	_Lcd_Set_Cursor
  1461   000F50                     
  1462                           ;LAB4.c: 128:                   Lcd_Write_String(num_str);
  1463   000F50  0ED6               	movlw	low _num_str
  1464   000F52  0100               	movlb	0	; () banked
  1465   000F54  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1466   000F56  6B65               	clrf	(Lcd_Write_String@a+1)& (0+255),b
  1467   000F58  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1468   000F5C                     
  1469                           ;LAB4.c: 129:                   result=10*num;
  1470   000F5C  C0E2  F060         	movff	_num,___wmul@multiplier
  1471   000F60  C0E3  F061         	movff	_num+1,___wmul@multiplier+1
  1472   000F64  0E00               	movlw	0
  1473   000F66  0100               	movlb	0	; () banked
  1474   000F68  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1475   000F6A  0E0A               	movlw	10
  1476   000F6C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1477   000F6E  EC73  F012         	call	___wmul	;wreg free
  1478   000F72  C060  F0B4         	movff	?___wmul,_result
  1479   000F76  C061  F0B5         	movff	?___wmul+1,_result+1
  1480   000F7A                     l3613:
  1481                           
  1482                           ;LAB4.c: 130:                   digito++;
  1483   000F7A  0100               	movlb	0	; () banked
  1484   000F7C  4BB2               	infsnz	_digito& (0+255),f,b
  1485   000F7E  2BB3               	incf	(_digito+1)& (0+255),f,b
  1486   000F80  EFF6  F007         	goto	l3633
  1487   000F84                     l3615:
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;LAB4.c: 137:                   Lcd_Set_Cursor(2,13);
  1491   000F84  0E0D               	movlw	13
  1492   000F86  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1493   000F88  0E02               	movlw	2
  1494   000F8A  ECFF  F00C         	call	_Lcd_Set_Cursor
  1495   000F8E                     
  1496                           ;LAB4.c: 138:                   Lcd_Write_String(num_str);
  1497   000F8E  0ED6               	movlw	low _num_str
  1498   000F90  0100               	movlb	0	; () banked
  1499   000F92  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1500   000F94  6B65               	clrf	(Lcd_Write_String@a+1)& (0+255),b
  1501   000F96  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1502   000F9A                     
  1503                           ;LAB4.c: 139:                   Lcd_NoBlink();
  1504   000F9A  ECDD  F012         	call	_Lcd_NoBlink	;wreg free
  1505   000F9E                     
  1506                           ;LAB4.c: 140:                   result=result+num;
  1507   000F9E  0100               	movlb	0	; () banked
  1508   000FA0  51E2               	movf	_num& (0+255),w,b
  1509   000FA2  25B4               	addwf	_result& (0+255),w,b
  1510   000FA4  6FB4               	movwf	_result& (0+255),b
  1511   000FA6  51E3               	movf	(_num+1)& (0+255),w,b
  1512   000FA8  21B5               	addwfc	(_result+1)& (0+255),w,b
  1513   000FAA  6FB5               	movwf	(_result+1)& (0+255),b
  1514   000FAC                     
  1515                           ; BSR set to: 0
  1516                           ;LAB4.c: 141:                   Numpad_en=0;
  1517   000FAC  0E00               	movlw	0
  1518   000FAE  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  1519   000FB0  0E00               	movlw	0
  1520   000FB2  6FBA               	movwf	_Numpad_en& (0+255),b
  1521   000FB4                     
  1522                           ; BSR set to: 0
  1523                           ;LAB4.c: 142:                   ok_en=1;
  1524   000FB4  0E00               	movlw	0
  1525   000FB6  6E40               	movwf	(_ok_en+1)^0,c
  1526   000FB8  0E01               	movlw	1
  1527   000FBA  6E3F               	movwf	_ok_en^0,c
  1528   000FBC  EFBD  F007         	goto	l3613
  1529   000FC0                     l3631:
  1530                           
  1531                           ; BSR set to: 0
  1532   000FC0  C0B2  F090         	movff	_digito,??_main
  1533   000FC4  C0B3  F091         	movff	_digito+1,??_main+1
  1534                           
  1535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1536                           ; Switch size 1, requested type "simple"
  1537                           ; Number of cases is 1, Range of values is 0 to 0
  1538                           ; switch strategies available:
  1539                           ; Name         Instructions Cycles
  1540                           ; simple_byte            4     3 (average)
  1541                           ;	Chosen strategy is simple_byte
  1542   000FC8  5191               	movf	(??_main+1)& (0+255),w,b
  1543   000FCA  0A00               	xorlw	0	; case 0
  1544   000FCC  B4D8               	btfsc	status,2,c
  1545   000FCE  EFEB  F007         	goto	l4039
  1546   000FD2  EFF6  F007         	goto	l3633
  1547   000FD6                     l4039:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ; Switch size 1, requested type "simple"
  1551                           ; Number of cases is 2, Range of values is 0 to 1
  1552                           ; switch strategies available:
  1553                           ; Name         Instructions Cycles
  1554                           ; simple_byte            7     4 (average)
  1555                           ;	Chosen strategy is simple_byte
  1556   000FD6  5190               	movf	??_main& (0+255),w,b
  1557   000FD8  0A00               	xorlw	0	; case 0
  1558   000FDA  B4D8               	btfsc	status,2,c
  1559   000FDC  EF9A  F007         	goto	l3605
  1560   000FE0  0A01               	xorlw	1	; case 1
  1561   000FE2  B4D8               	btfsc	status,2,c
  1562   000FE4  EFC2  F007         	goto	l3615
  1563   000FE8  EFF6  F007         	goto	l3633
  1564   000FEC                     l3633:
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;LAB4.c: 149:                 Enter_en=0;
  1568   000FEC  0E00               	movlw	0
  1569   000FEE  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  1570   000FF0  0E00               	movlw	0
  1571   000FF2  6FBC               	movwf	_Enter_en& (0+255),b
  1572   000FF4  EF07  F007         	goto	l3559
  1573   000FF8                     l3635:
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;LAB4.c: 156:             Borrado_En=0;
  1577   000FF8  0E00               	movlw	0
  1578   000FFA  6E48               	movwf	(_Borrado_En+1)^0,c
  1579   000FFC  0E00               	movlw	0
  1580   000FFE  6E47               	movwf	_Borrado_En^0,c
  1581                           
  1582                           ;LAB4.c: 157:             ok_en=0;
  1583   001000  0E00               	movlw	0
  1584   001002  6E40               	movwf	(_ok_en+1)^0,c
  1585   001004  0E00               	movlw	0
  1586   001006  6E3F               	movwf	_ok_en^0,c
  1587   001008                     
  1588                           ; BSR set to: 0
  1589                           ;LAB4.c: 159:             if (times_1<1)
  1590   001008  BFAF               	btfsc	(_times_1+1)& (0+255),7,b
  1591   00100A  EF11  F008         	goto	u2510
  1592   00100E  51AF               	movf	(_times_1+1)& (0+255),w,b
  1593   001010  E106               	bnz	u2511
  1594   001012  05AE               	decf	_times_1& (0+255),w,b
  1595   001014  B0D8               	btfsc	status,0,c
  1596   001016  EF0F  F008         	goto	u2511
  1597   00101A  EF11  F008         	goto	u2510
  1598   00101E                     u2511:
  1599   00101E  EF50  F008         	goto	l3665
  1600   001022                     u2510:
  1601   001022                     
  1602                           ; BSR set to: 0
  1603                           ;LAB4.c: 160:               {;LAB4.c: 161:                 Lcd_Clear();
  1604   001022  ECC8  F012         	call	_Lcd_Clear	;wreg free
  1605   001026                     
  1606                           ;LAB4.c: 162:                 char countdown[20];;LAB4.c: 163:                 for (int 
      +                          i = 3; i >= 0; i--)
  1607   001026  0E00               	movlw	0
  1608   001028  0100               	movlb	0	; () banked
  1609   00102A  6FA7               	movwf	(main@i+1)& (0+255),b
  1610   00102C  0E03               	movlw	3
  1611   00102E  6FA6               	movwf	main@i& (0+255),b
  1612   001030                     l3647:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;LAB4.c: 164:                   {;LAB4.c: 165:                     sprintf(countdown,"em
      +                          pezamos en %d", i);
  1616   001030  0E92               	movlw	low main@countdown
  1617   001032  6F7D               	movwf	sprintf@s& (0+255),b
  1618   001034  6B7E               	clrf	(sprintf@s+1)& (0+255),b
  1619   001036  0E79               	movlw	low STR_5
  1620   001038  6F7F               	movwf	sprintf@fmt& (0+255),b
  1621   00103A  0E7F               	movlw	high STR_5
  1622   00103C  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  1623   00103E  C0A6  F081         	movff	main@i,?_sprintf+4
  1624   001042  C0A7  F082         	movff	main@i+1,?_sprintf+5
  1625   001046  EC80  F011         	call	_sprintf	;wreg free
  1626   00104A                     
  1627                           ;LAB4.c: 166:                     Lcd_Clear();
  1628   00104A  ECC8  F012         	call	_Lcd_Clear	;wreg free
  1629   00104E                     
  1630                           ;LAB4.c: 167:                     Lcd_Set_Cursor(1,1);
  1631   00104E  0E01               	movlw	1
  1632   001050  0100               	movlb	0	; () banked
  1633   001052  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1634   001054  0E01               	movlw	1
  1635   001056  ECFF  F00C         	call	_Lcd_Set_Cursor
  1636   00105A                     
  1637                           ;LAB4.c: 168:                     Lcd_Write_String(countdown);
  1638   00105A  0E92               	movlw	low main@countdown
  1639   00105C  0100               	movlb	0	; () banked
  1640   00105E  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1641   001060  6B65               	clrf	(Lcd_Write_String@a+1)& (0+255),b
  1642   001062  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1643   001066                     
  1644                           ;LAB4.c: 169:                     _delay((unsigned long)((1000)*(8000000UL/4000.0)));
  1645   001066  0E0B               	movlw	11
  1646   001068  0100               	movlb	0	; () banked
  1647   00106A  6F91               	movwf	(??_main+1)& (0+255),b
  1648   00106C  0E26               	movlw	38
  1649   00106E  6F90               	movwf	??_main& (0+255),b
  1650   001070  0E5D               	movlw	93
  1651   001072                     u3007:
  1652   001072  2EE8               	decfsz	wreg,f,c
  1653   001074  D7FE               	bra	u3007
  1654   001076  2F90               	decfsz	??_main& (0+255),f,b
  1655   001078  D7FC               	bra	u3007
  1656   00107A  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1657   00107C  D7FA               	bra	u3007
  1658   00107E  D000               	nop2	
  1659   001080                     
  1660                           ;LAB4.c: 170:                   }
  1661   001080  0100               	movlb	0	; () banked
  1662   001082  07A6               	decf	main@i& (0+255),f,b
  1663   001084  A0D8               	btfss	status,0,c
  1664   001086  07A7               	decf	(main@i+1)& (0+255),f,b
  1665   001088                     
  1666                           ; BSR set to: 0
  1667   001088  BFA7               	btfsc	(main@i+1)& (0+255),7,b
  1668   00108A  EF4B  F008         	goto	u2520
  1669   00108E  EF49  F008         	goto	u2521
  1670   001092                     u2521:
  1671   001092  EF18  F008         	goto	l3647
  1672   001096                     u2520:
  1673   001096                     
  1674                           ; BSR set to: 0
  1675                           ;LAB4.c: 171:                 Lcd_Clear();
  1676   001096  ECC8  F012         	call	_Lcd_Clear	;wreg free
  1677   00109A                     
  1678                           ;LAB4.c: 172:                 times_1++;
  1679   00109A  0100               	movlb	0	; () banked
  1680   00109C  4BAE               	infsnz	_times_1& (0+255),f,b
  1681   00109E  2BAF               	incf	(_times_1+1)& (0+255),f,b
  1682   0010A0                     l3665:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;LAB4.c: 177:               RGB_BCD(count_En,&contador, &contador_dec,&re_pcs ) ;
  1686   0010A0  C0B6  F060         	movff	_count_En,RGB_BCD@count_En
  1687   0010A4  C0B7  F061         	movff	_count_En+1,RGB_BCD@count_En+1
  1688   0010A8  0EE6               	movlw	low _contador
  1689   0010AA  6F62               	movwf	RGB_BCD@contador& (0+255),b
  1690   0010AC  0EE4               	movlw	low _contador_dec
  1691   0010AE  6F63               	movwf	RGB_BCD@contador_dec& (0+255),b
  1692   0010B0  0EE0               	movlw	low _re_pcs
  1693   0010B2  6F64               	movwf	RGB_BCD@re_pcs& (0+255),b
  1694   0010B4  EC60  F00C         	call	_RGB_BCD	;wreg free
  1695   0010B8                     
  1696                           ;LAB4.c: 178:               if (re_pcs !=check)
  1697   0010B8  0100               	movlb	0	; () banked
  1698   0010BA  51AC               	movf	_check& (0+255),w,b
  1699   0010BC  19E0               	xorwf	_re_pcs& (0+255),w,b
  1700   0010BE  E109               	bnz	u2530
  1701   0010C0  51AD               	movf	(_check+1)& (0+255),w,b
  1702   0010C2  19E1               	xorwf	(_re_pcs+1)& (0+255),w,b
  1703   0010C4  B4D8               	btfsc	status,2,c
  1704   0010C6  EF67  F008         	goto	u2531
  1705   0010CA  EF69  F008         	goto	u2530
  1706   0010CE                     u2531:
  1707   0010CE  EF07  F007         	goto	l3559
  1708   0010D2                     u2530:
  1709   0010D2                     
  1710                           ; BSR set to: 0
  1711                           ;LAB4.c: 179:               {;LAB4.c: 182:                 Lcd_Clear();
  1712   0010D2  ECC8  F012         	call	_Lcd_Clear	;wreg free
  1713   0010D6                     
  1714                           ;LAB4.c: 183:                 sprintf(counted_pcs_str,"contadas %d", 10*contador_dec+con
      +                          tador);
  1715   0010D6  0E20               	movlw	low _counted_pcs_str
  1716   0010D8  0100               	movlb	0	; () banked
  1717   0010DA  6F7D               	movwf	sprintf@s& (0+255),b
  1718   0010DC  0E01               	movlw	high _counted_pcs_str
  1719   0010DE  6F7E               	movwf	(sprintf@s+1)& (0+255),b
  1720   0010E0  0EC2               	movlw	low STR_6
  1721   0010E2  6F7F               	movwf	sprintf@fmt& (0+255),b
  1722   0010E4  0E7F               	movlw	high STR_6
  1723   0010E6  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  1724   0010E8  C0E4  F060         	movff	_contador_dec,___wmul@multiplier
  1725   0010EC  C0E5  F061         	movff	_contador_dec+1,___wmul@multiplier+1
  1726   0010F0  0E00               	movlw	0
  1727   0010F2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1728   0010F4  0E0A               	movlw	10
  1729   0010F6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1730   0010F8  EC73  F012         	call	___wmul	;wreg free
  1731   0010FC  0100               	movlb	0	; () banked
  1732   0010FE  51E6               	movf	_contador& (0+255),w,b
  1733   001100  2560               	addwf	?___wmul& (0+255),w,b
  1734   001102  6F81               	movwf	(?_sprintf+4)& (0+255),b
  1735   001104  51E7               	movf	(_contador+1)& (0+255),w,b
  1736   001106  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1737   001108  6F82               	movwf	(?_sprintf+5)& (0+255),b
  1738   00110A  EC80  F011         	call	_sprintf	;wreg free
  1739   00110E                     
  1740                           ;LAB4.c: 184:                 sprintf(re_pcs_str,"faltantes %d",re_pcs);
  1741   00110E  0EC2               	movlw	low _re_pcs_str
  1742   001110  0100               	movlb	0	; () banked
  1743   001112  6F7D               	movwf	sprintf@s& (0+255),b
  1744   001114  6B7E               	clrf	(sprintf@s+1)& (0+255),b
  1745   001116  0EB5               	movlw	low STR_7
  1746   001118  6F7F               	movwf	sprintf@fmt& (0+255),b
  1747   00111A  0E7F               	movlw	high STR_7
  1748   00111C  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  1749   00111E  C0E0  F081         	movff	_re_pcs,?_sprintf+4
  1750   001122  C0E1  F082         	movff	_re_pcs+1,?_sprintf+5
  1751   001126  EC80  F011         	call	_sprintf	;wreg free
  1752   00112A                     
  1753                           ;LAB4.c: 185:                 Lcd_Set_Cursor(1,1);
  1754   00112A  0E01               	movlw	1
  1755   00112C  0100               	movlb	0	; () banked
  1756   00112E  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1757   001130  0E01               	movlw	1
  1758   001132  ECFF  F00C         	call	_Lcd_Set_Cursor
  1759   001136                     
  1760                           ;LAB4.c: 186:                 Lcd_Write_String(counted_pcs_str);
  1761   001136  0E20               	movlw	low _counted_pcs_str
  1762   001138  0100               	movlb	0	; () banked
  1763   00113A  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1764   00113C  0E01               	movlw	high _counted_pcs_str
  1765   00113E  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1766   001140  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1767   001144                     
  1768                           ;LAB4.c: 187:                 Lcd_Set_Cursor(2,1);
  1769   001144  0E01               	movlw	1
  1770   001146  0100               	movlb	0	; () banked
  1771   001148  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1772   00114A  0E02               	movlw	2
  1773   00114C  ECFF  F00C         	call	_Lcd_Set_Cursor
  1774   001150                     
  1775                           ;LAB4.c: 188:                 Lcd_Write_String(re_pcs_str);
  1776   001150  0EC2               	movlw	low _re_pcs_str
  1777   001152  0100               	movlb	0	; () banked
  1778   001154  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1779   001156  6B65               	clrf	(Lcd_Write_String@a+1)& (0+255),b
  1780   001158  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1781   00115C                     
  1782                           ;LAB4.c: 189:                 if (re_pcs==0)
  1783   00115C  0100               	movlb	0	; () banked
  1784   00115E  51E0               	movf	_re_pcs& (0+255),w,b
  1785   001160  11E1               	iorwf	(_re_pcs+1)& (0+255),w,b
  1786   001162  A4D8               	btfss	status,2,c
  1787   001164  EFB6  F008         	goto	u2541
  1788   001168  EFB8  F008         	goto	u2540
  1789   00116C                     u2541:
  1790   00116C  EFC1  F008         	goto	l3691
  1791   001170                     u2540:
  1792   001170                     
  1793                           ; BSR set to: 0
  1794                           ;LAB4.c: 190:                 {;LAB4.c: 191:                   Lcd_Clear();
  1795   001170  ECC8  F012         	call	_Lcd_Clear	;wreg free
  1796   001174                     
  1797                           ;LAB4.c: 192:                   times_1=0;
  1798   001174  0E00               	movlw	0
  1799   001176  0100               	movlb	0	; () banked
  1800   001178  6FAF               	movwf	(_times_1+1)& (0+255),b
  1801   00117A  0E00               	movlw	0
  1802   00117C  6FAE               	movwf	_times_1& (0+255),b
  1803   00117E                     
  1804                           ; BSR set to: 0
  1805                           ;LAB4.c: 193:                   state++;
  1806   00117E  4BBE               	infsnz	_state& (0+255),f,b
  1807   001180  2BBF               	incf	(_state+1)& (0+255),f,b
  1808   001182                     l3691:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;LAB4.c: 196:                  check=re_pcs;
  1812   001182  C0E0  F0AC         	movff	_re_pcs,_check
  1813   001186  C0E1  F0AD         	movff	_re_pcs+1,_check+1
  1814   00118A  EF07  F007         	goto	l3559
  1815   00118E                     l3693:
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;LAB4.c: 203:               if (times_1<1)
  1819   00118E  BFAF               	btfsc	(_times_1+1)& (0+255),7,b
  1820   001190  EFD4  F008         	goto	u2550
  1821   001194  51AF               	movf	(_times_1+1)& (0+255),w,b
  1822   001196  E106               	bnz	u2551
  1823   001198  05AE               	decf	_times_1& (0+255),w,b
  1824   00119A  B0D8               	btfsc	status,0,c
  1825   00119C  EFD2  F008         	goto	u2551
  1826   0011A0  EFD4  F008         	goto	u2550
  1827   0011A4                     u2551:
  1828   0011A4  EF07  F007         	goto	l3559
  1829   0011A8                     u2550:
  1830   0011A8                     
  1831                           ; BSR set to: 0
  1832                           ;LAB4.c: 204:               {;LAB4.c: 205:                 Lcd_Set_Cursor(1,1);
  1833   0011A8  0E01               	movlw	1
  1834   0011AA  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1835   0011AC  0E01               	movlw	1
  1836   0011AE  ECFF  F00C         	call	_Lcd_Set_Cursor
  1837   0011B2                     
  1838                           ;LAB4.c: 206:                 Lcd_Write_String("conteo");
  1839   0011B2  0EF7               	movlw	low STR_8
  1840   0011B4  0100               	movlb	0	; () banked
  1841   0011B6  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1842   0011B8  0E7F               	movlw	high STR_8
  1843   0011BA  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1844   0011BC  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1845   0011C0                     
  1846                           ;LAB4.c: 207:                 Lcd_Set_Cursor(2,1);
  1847   0011C0  0E01               	movlw	1
  1848   0011C2  0100               	movlb	0	; () banked
  1849   0011C4  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1850   0011C6  0E02               	movlw	2
  1851   0011C8  ECFF  F00C         	call	_Lcd_Set_Cursor
  1852                           
  1853                           ;LAB4.c: 208:                 Lcd_Write_String("terminado");
  1854   0011CC  0EED               	movlw	low STR_9
  1855   0011CE  0100               	movlb	0	; () banked
  1856   0011D0  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1857   0011D2  0E7F               	movlw	high STR_9
  1858   0011D4  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1859   0011D6  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1860   0011DA                     
  1861                           ;LAB4.c: 209:                 _delay((unsigned long)((2000)*(8000000UL/4000.0)));
  1862   0011DA  0E15               	movlw	21
  1863   0011DC  0100               	movlb	0	; () banked
  1864   0011DE  6F91               	movwf	(??_main+1)& (0+255),b
  1865   0011E0  0E4B               	movlw	75
  1866   0011E2  6F90               	movwf	??_main& (0+255),b
  1867   0011E4  0EBE               	movlw	190
  1868   0011E6                     u3017:
  1869   0011E6  2EE8               	decfsz	wreg,f,c
  1870   0011E8  D7FE               	bra	u3017
  1871   0011EA  2F90               	decfsz	??_main& (0+255),f,b
  1872   0011EC  D7FC               	bra	u3017
  1873   0011EE  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1874   0011F0  D7FA               	bra	u3017
  1875   0011F2  0000               	nop	
  1876   0011F4                     
  1877                           ;LAB4.c: 210:                 Lcd_Clear();
  1878   0011F4  ECC8  F012         	call	_Lcd_Clear	;wreg free
  1879   0011F8                     
  1880                           ;LAB4.c: 211:                 _delay((unsigned long)((2000)*(8000000UL/4000.0)));
  1881   0011F8  0E15               	movlw	21
  1882   0011FA  0100               	movlb	0	; () banked
  1883   0011FC  6F91               	movwf	(??_main+1)& (0+255),b
  1884   0011FE  0E4B               	movlw	75
  1885   001200  6F90               	movwf	??_main& (0+255),b
  1886   001202  0EBE               	movlw	190
  1887   001204                     u3027:
  1888   001204  2EE8               	decfsz	wreg,f,c
  1889   001206  D7FE               	bra	u3027
  1890   001208  2F90               	decfsz	??_main& (0+255),f,b
  1891   00120A  D7FC               	bra	u3027
  1892   00120C  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1893   00120E  D7FA               	bra	u3027
  1894   001210  0000               	nop	
  1895   001212                     
  1896                           ;LAB4.c: 212:                 Lcd_Write_String("pulsa ok para");
  1897   001212  0EA7               	movlw	low STR_10
  1898   001214  0100               	movlb	0	; () banked
  1899   001216  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1900   001218  0E7F               	movlw	high STR_10
  1901   00121A  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1902   00121C  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1903   001220                     
  1904                           ;LAB4.c: 213:                 Lcd_Set_Cursor(2,1);
  1905   001220  0E01               	movlw	1
  1906   001222  0100               	movlb	0	; () banked
  1907   001224  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1908   001226  0E02               	movlw	2
  1909   001228  ECFF  F00C         	call	_Lcd_Set_Cursor
  1910   00122C                     
  1911                           ;LAB4.c: 214:                 Lcd_Write_String("Volver al menu");
  1912   00122C  0E98               	movlw	low STR_11
  1913   00122E  0100               	movlb	0	; () banked
  1914   001230  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1915   001232  0E7F               	movlw	high STR_11
  1916   001234  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1917   001236  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  1918   00123A                     
  1919                           ;LAB4.c: 215:                 ok_en=1;
  1920   00123A  0E00               	movlw	0
  1921   00123C  6E40               	movwf	(_ok_en+1)^0,c
  1922   00123E  0E01               	movlw	1
  1923   001240  6E3F               	movwf	_ok_en^0,c
  1924   001242                     
  1925                           ;LAB4.c: 216:                 times_1++;
  1926   001242  0100               	movlb	0	; () banked
  1927   001244  4BAE               	infsnz	_times_1& (0+255),f,b
  1928   001246  2BAF               	incf	(_times_1+1)& (0+255),f,b
  1929   001248  EF07  F007         	goto	l3559
  1930   00124C                     l3719:
  1931   00124C  C0BE  F090         	movff	_state,??_main
  1932   001250  C0BF  F091         	movff	_state+1,??_main+1
  1933                           
  1934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1935                           ; Switch size 1, requested type "simple"
  1936                           ; Number of cases is 1, Range of values is 0 to 0
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte            4     3 (average)
  1940                           ;	Chosen strategy is simple_byte
  1941   001254  0100               	movlb	0	; () banked
  1942   001256  5191               	movf	(??_main+1)& (0+255),w,b
  1943   001258  0A00               	xorlw	0	; case 0
  1944   00125A  B4D8               	btfsc	status,2,c
  1945   00125C  EF32  F009         	goto	l4041
  1946   001260  EF07  F007         	goto	l3559
  1947   001264                     l4041:
  1948                           
  1949                           ; BSR set to: 0
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 4, Range of values is 0 to 3
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte           13     7 (average)
  1955                           ;	Chosen strategy is simple_byte
  1956   001264  5190               	movf	??_main& (0+255),w,b
  1957   001266  0A00               	xorlw	0	; case 0
  1958   001268  B4D8               	btfsc	status,2,c
  1959   00126A  EF0B  F007         	goto	l109
  1960   00126E  0A01               	xorlw	1	; case 1
  1961   001270  B4D8               	btfsc	status,2,c
  1962   001272  EF17  F007         	goto	l3567
  1963   001276  0A03               	xorlw	3	; case 2
  1964   001278  B4D8               	btfsc	status,2,c
  1965   00127A  EFFC  F007         	goto	l3635
  1966   00127E  0A01               	xorlw	1	; case 3
  1967   001280  B4D8               	btfsc	status,2,c
  1968   001282  EFC7  F008         	goto	l3693
  1969   001286  EF07  F007         	goto	l3559
  1970   00128A  EF7E  F004         	goto	start
  1971   00128E                     __end_of_main:
  1972                           	callstack 0
  1973                           
  1974 ;; *************** function _sprintf *****************
  1975 ;; Defined at:
  1976 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  s               2   29[BANK0 ] PTR unsigned char 
  1979 ;;		 -> re_pcs_str(20), counted_pcs_str(20), main@countdown(20), num_str(10), 
  1980 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  1981 ;;		 -> STR_16(3), STR_7(13), STR_6(12), STR_5(16), 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  f              12   36[BANK0 ] struct _IO_FILE
  1984 ;;  ret             2    0        int 
  1985 ;;  ap              1   35[BANK0 ] PTR void [1]
  1986 ;;		 -> ?_sprintf(2), 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  2   29[BANK0 ] int 
  1989 ;; Registers used:
  1990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1996 ;;      Params:         0       6       0       0       0       0       0       0       0
  1997 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1999 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2000 ;;Total ram usage:       19 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 11
  2003 ;; This function calls:
  2004 ;;		_vfprintf
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text1
  2011   002300                     __ptext1:
  2012                           	callstack 0
  2013   002300                     _sprintf:
  2014                           	callstack 19
  2015   002300  0E81               	movlw	low (?_sprintf+4)
  2016   002302  0100               	movlb	0	; () banked
  2017   002304  6F83               	movwf	sprintf@ap& (0+255),b
  2018   002306  C07D  F084         	movff	sprintf@s,sprintf@f
  2019   00230A  C07E  F085         	movff	sprintf@s+1,sprintf@f+1
  2020   00230E                     
  2021                           ; BSR set to: 0
  2022   00230E  0E00               	movlw	0
  2023   002310  6F88               	movwf	(sprintf@f+4)& (0+255),b
  2024   002312  0E00               	movlw	0
  2025   002314  6F87               	movwf	(sprintf@f+3)& (0+255),b
  2026   002316                     
  2027                           ; BSR set to: 0
  2028   002316  0E00               	movlw	0
  2029   002318  6F8F               	movwf	(sprintf@f+11)& (0+255),b
  2030   00231A  0E00               	movlw	0
  2031   00231C  6F8E               	movwf	(sprintf@f+10)& (0+255),b
  2032   00231E                     
  2033                           ; BSR set to: 0
  2034   00231E  0E84               	movlw	low sprintf@f
  2035   002320  6F77               	movwf	vfprintf@fp& (0+255),b
  2036   002322  C07F  F078         	movff	sprintf@fmt,vfprintf@fmt
  2037   002326  C080  F079         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2038   00232A  0E83               	movlw	low sprintf@ap
  2039   00232C  6F7A               	movwf	vfprintf@ap& (0+255),b
  2040   00232E  EC5D  F011         	call	_vfprintf	;wreg free
  2041   002332  0100               	movlb	0	; () banked
  2042   002334  5187               	movf	(sprintf@f+3)& (0+255),w,b
  2043   002336  257D               	addwf	sprintf@s& (0+255),w,b
  2044   002338  6ED9               	movwf	fsr2l,c
  2045   00233A  5188               	movf	(sprintf@f+4)& (0+255),w,b
  2046   00233C  217E               	addwfc	(sprintf@s+1)& (0+255),w,b
  2047   00233E  6EDA               	movwf	fsr2h,c
  2048   002340  6ADF               	clrf	indf2,c
  2049   002342                     
  2050                           ; BSR set to: 0
  2051   002342  0012               	return		;funcret
  2052   002344                     __end_of_sprintf:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _vfprintf *****************
  2056 ;; Defined at:
  2057 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  2060 ;;		 -> sprintf@f(12), 
  2061 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  2062 ;;		 -> STR_16(3), STR_7(13), STR_6(12), STR_5(16), 
  2063 ;;  ap              1   26[BANK0 ] PTR PTR void 
  2064 ;;		 -> sprintf@ap(1), 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  cfmt            2   27[BANK0 ] PTR unsigned char 
  2067 ;;		 -> STR_16(3), STR_7(13), STR_6(12), STR_5(16), 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  2   23[BANK0 ] int 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2077 ;;      Params:         0       4       0       0       0       0       0       0       0
  2078 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2080 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2081 ;;Total ram usage:        6 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 10
  2084 ;; This function calls:
  2085 ;;		_vfpfcnvrt
  2086 ;; This function is called by:
  2087 ;;		_sprintf
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text2
  2092   0022BA                     __ptext2:
  2093                           	callstack 0
  2094   0022BA                     _vfprintf:
  2095                           	callstack 19
  2096   0022BA                     
  2097                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2098   0022BA  C078  F07B         	movff	vfprintf@fmt,vfprintf@cfmt
  2099   0022BE  C079  F07C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2102   0022C2  EF6C  F011         	goto	l3153
  2103   0022C6                     l3151:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2106   0022C6  C077  F06A         	movff	vfprintf@fp,vfpfcnvrt@fp
  2107   0022CA  0E7B               	movlw	low vfprintf@cfmt
  2108   0022CC  0100               	movlb	0	; () banked
  2109   0022CE  6F6B               	movwf	vfpfcnvrt@fmt& (0+255),b
  2110   0022D0  C07A  F06C         	movff	vfprintf@ap,vfpfcnvrt@ap
  2111   0022D4  EC7A  F00A         	call	_vfpfcnvrt	;wreg free
  2112   0022D8                     l3153:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2115   0022D8  C07B  FFF6         	movff	vfprintf@cfmt,tblptrl
  2116   0022DC  C07C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2117   0022E0                     	if	0	;tblptru may be non-zero
  2118   0022E0                     	endif
  2119   0022E0                     	if	0	;tblptru may be non-zero
  2120   0022E0                     	endif
  2121   0022E0  0008               	tblrd		*
  2122   0022E2  50F5               	movf	tablat,w,c
  2123   0022E4  0900               	iorlw	0
  2124   0022E6  A4D8               	btfss	status,2,c
  2125   0022E8  EF78  F011         	goto	u2281
  2126   0022EC  EF7A  F011         	goto	u2280
  2127   0022F0                     u2281:
  2128   0022F0  EF63  F011         	goto	l3151
  2129   0022F4                     u2280:
  2130   0022F4                     
  2131                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2132   0022F4  0E00               	movlw	0
  2133   0022F6  0100               	movlb	0	; () banked
  2134   0022F8  6F78               	movwf	(?_vfprintf+1)& (0+255),b
  2135   0022FA  0E00               	movlw	0
  2136   0022FC  6F77               	movwf	?_vfprintf& (0+255),b
  2137   0022FE                     
  2138                           ; BSR set to: 0
  2139   0022FE  0012               	return		;funcret
  2140   002300                     __end_of_vfprintf:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _vfpfcnvrt *****************
  2144 ;; Defined at:
  2145 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2148 ;;		 -> sprintf@f(12), 
  2149 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  2150 ;;		 -> vfprintf@cfmt(2), 
  2151 ;;  ap              1   12[BANK0 ] PTR PTR void 
  2152 ;;		 -> sprintf@ap(1), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  convarg         4   18[BANK0 ] struct .
  2155 ;;  cp              2   16[BANK0 ] PTR unsigned char 
  2156 ;;		 -> STR_16(3), STR_7(13), STR_6(12), STR_5(16), 
  2157 ;;  c               1   22[BANK0 ] unsigned char 
  2158 ;;  done            1   15[BANK0 ] _Bool 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         0       3       0       0       0       0       0       0       0
  2169 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2170 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2171 ;;      Totals:         0      13       0       0       0       0       0       0       0
  2172 ;;Total ram usage:       13 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 9
  2175 ;; This function calls:
  2176 ;;		___awdiv
  2177 ;;		___awmod
  2178 ;;		_abs
  2179 ;;		_fputc
  2180 ;; This function is called by:
  2181 ;;		_vfprintf
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text3
  2186   0014F4                     __ptext3:
  2187                           	callstack 0
  2188   0014F4                     _vfpfcnvrt:
  2189                           	callstack 19
  2190   0014F4                     
  2191                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2192   0014F4  0100               	movlb	0	; () banked
  2193   0014F6  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2194   0014F8  6ED9               	movwf	fsr2l,c
  2195   0014FA  6ADA               	clrf	fsr2h,c
  2196   0014FC  CFDE FFF6          	movff	postinc2,tblptrl
  2197   001500  CFDD FFF7          	movff	postdec2,tblptrh
  2198   001504                     	if	0	;tblptru may be non-zero
  2199   001504                     	endif
  2200   001504                     	if	0	;tblptru may be non-zero
  2201   001504                     	endif
  2202   001504  0008               	tblrd		*
  2203   001506  50F5               	movf	tablat,w,c
  2204   001508  0A25               	xorlw	37
  2205   00150A  A4D8               	btfss	status,2,c
  2206   00150C  EF8A  F00A         	goto	u1891
  2207   001510  EF8C  F00A         	goto	u1890
  2208   001514                     u1891:
  2209   001514  EF5D  F00B         	goto	l2895
  2210   001518                     u1890:
  2211   001518                     
  2212                           ; BSR set to: 0
  2213                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2214   001518  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2215   00151A  6ED9               	movwf	fsr2l,c
  2216   00151C  6ADA               	clrf	fsr2h,c
  2217   00151E  2ADE               	incf	postinc2,f,c
  2218   001520  0E00               	movlw	0
  2219   001522  22DD               	addwfc	postdec2,f,c
  2220   001524                     
  2221                           ; BSR set to: 0
  2222                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2223   001524  0E00               	movlw	0
  2224   001526  6FA9               	movwf	(_width+1)& (0+255),b
  2225   001528  0E00               	movlw	0
  2226   00152A  6FA8               	movwf	_width& (0+255),b
  2227   00152C  C0A8  F0C0         	movff	_width,_flags
  2228   001530                     
  2229                           ; BSR set to: 0
  2230                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2231   001530  69AA               	setf	_prec& (0+255),b
  2232   001532  69AB               	setf	(_prec+1)& (0+255),b
  2233   001534                     
  2234                           ; BSR set to: 0
  2235                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2236   001534  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2237   001536  6ED9               	movwf	fsr2l,c
  2238   001538  6ADA               	clrf	fsr2h,c
  2239   00153A  CFDE F070          	movff	postinc2,vfpfcnvrt@cp
  2240   00153E  CFDD F071          	movff	postdec2,vfpfcnvrt@cp+1
  2241   001542                     
  2242                           ; BSR set to: 0
  2243                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2244   001542  C070  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2245   001546  C071  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2246   00154A                     	if	0	;tblptru may be non-zero
  2247   00154A                     	endif
  2248   00154A                     	if	0	;tblptru may be non-zero
  2249   00154A                     	endif
  2250   00154A  0008               	tblrd		*
  2251   00154C  50F5               	movf	tablat,w,c
  2252   00154E  0A64               	xorlw	100
  2253   001550  B4D8               	btfsc	status,2,c
  2254   001552  EFAD  F00A         	goto	u1901
  2255   001556  EFAF  F00A         	goto	u1900
  2256   00155A                     u1901:
  2257   00155A  EFBD  F00A         	goto	l2865
  2258   00155E                     u1900:
  2259   00155E                     
  2260                           ; BSR set to: 0
  2261   00155E  C070  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2262   001562  C071  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2263   001566                     	if	0	;tblptru may be non-zero
  2264   001566                     	endif
  2265   001566                     	if	0	;tblptru may be non-zero
  2266   001566                     	endif
  2267   001566  0008               	tblrd		*
  2268   001568  50F5               	movf	tablat,w,c
  2269   00156A  0A69               	xorlw	105
  2270   00156C  A4D8               	btfss	status,2,c
  2271   00156E  EFBB  F00A         	goto	u1911
  2272   001572  EFBD  F00A         	goto	u1910
  2273   001576                     u1911:
  2274   001576  EF54  F00B         	goto	l2891
  2275   00157A                     u1910:
  2276   00157A                     l2865:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2280   00157A  516C               	movf	vfpfcnvrt@ap& (0+255),w,b
  2281   00157C  6ED9               	movwf	fsr2l,c
  2282   00157E  6ADA               	clrf	fsr2h,c
  2283   001580  0E02               	movlw	2
  2284   001582  26DF               	addwf	indf2,f,c
  2285   001584  5CDF               	subwf	indf2,w,c
  2286   001586  6ED9               	movwf	fsr2l,c
  2287   001588  6ADA               	clrf	fsr2h,c
  2288   00158A  CFDE F072          	movff	postinc2,vfpfcnvrt@convarg
  2289   00158E  CFDE F073          	movff	postinc2,vfpfcnvrt@convarg+1
  2290   001592                     
  2291                           ; BSR set to: 0
  2292                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2293   001592  0E01               	movlw	1
  2294   001594  2570               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2295   001596  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  2296   001598  0E00               	movlw	0
  2297   00159A  2171               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2298   00159C  6F6E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2299   00159E  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2300   0015A0  6ED9               	movwf	fsr2l,c
  2301   0015A2  6ADA               	clrf	fsr2h,c
  2302   0015A4  C06D  FFDE         	movff	??_vfpfcnvrt,postinc2
  2303   0015A8  C06E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2304   0015AC                     
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2307   0015AC  0E20               	movlw	32
  2308   0015AE  6F76               	movwf	vfpfcnvrt@c& (0+255),b
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2311   0015B0  BF73               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2312   0015B2  EFDD  F00A         	goto	u1921
  2313   0015B6  EFE0  F00A         	goto	u1920
  2314   0015BA                     u1921:
  2315   0015BA  0E01               	movlw	1
  2316   0015BC  EFE1  F00A         	goto	u1930
  2317   0015C0                     u1920:
  2318   0015C0  0E00               	movlw	0
  2319   0015C2                     u1930:
  2320   0015C2  6F6F               	movwf	vfpfcnvrt@done& (0+255),b
  2321   0015C4                     l2871:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2325   0015C4  0776               	decf	vfpfcnvrt@c& (0+255),f,b
  2326   0015C6  0E00               	movlw	low _dbuf
  2327   0015C8  2576               	addwf	vfpfcnvrt@c& (0+255),w,b
  2328   0015CA  6ED9               	movwf	fsr2l,c
  2329   0015CC  6ADA               	clrf	fsr2h,c
  2330   0015CE  0E01               	movlw	high _dbuf
  2331   0015D0  22DA               	addwfc	fsr2h,f,c
  2332   0015D2  C072  F060         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2333   0015D6  C073  F061         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2334   0015DA  0E00               	movlw	0
  2335   0015DC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2336   0015DE  0E0A               	movlw	10
  2337   0015E0  6F62               	movwf	___awmod@divisor& (0+255),b
  2338   0015E2  EC57  F00F         	call	___awmod	;wreg free
  2339   0015E6  C060  F066         	movff	?___awmod,abs@a
  2340   0015EA  C061  F067         	movff	?___awmod+1,abs@a+1
  2341   0015EE  EC3E  F012         	call	_abs	;wreg free
  2342   0015F2  0100               	movlb	0	; () banked
  2343   0015F4  5166               	movf	?_abs& (0+255),w,b
  2344   0015F6  0F30               	addlw	48
  2345   0015F8  6EDF               	movwf	indf2,c
  2346   0015FA                     
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2349   0015FA  C072  F060         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2350   0015FE  C073  F061         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2351   001602  0E00               	movlw	0
  2352   001604  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  2353   001606  0E0A               	movlw	10
  2354   001608  6F62               	movwf	___awdiv@divisor& (0+255),b
  2355   00160A  ECD7  F00D         	call	___awdiv	;wreg free
  2356   00160E  C060  F072         	movff	?___awdiv,vfpfcnvrt@convarg
  2357   001612  C061  F073         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2358   001616                     
  2359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2360   001616  0100               	movlb	0	; () banked
  2361   001618  5172               	movf	vfpfcnvrt@convarg& (0+255),w,b
  2362   00161A  1173               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  2363   00161C  B4D8               	btfsc	status,2,c
  2364   00161E  EF13  F00B         	goto	u1941
  2365   001622  EF15  F00B         	goto	u1940
  2366   001626                     u1941:
  2367   001626  EF1D  F00B         	goto	l2879
  2368   00162A                     u1940:
  2369   00162A                     
  2370                           ; BSR set to: 0
  2371   00162A  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  2372   00162C  A4D8               	btfss	status,2,c
  2373   00162E  EF1B  F00B         	goto	u1951
  2374   001632  EF1D  F00B         	goto	u1950
  2375   001636                     u1951:
  2376   001636  EFE2  F00A         	goto	l2871
  2377   00163A                     u1950:
  2378   00163A                     l2879:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2382   00163A  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  2383   00163C  B4D8               	btfsc	status,2,c
  2384   00163E  EF23  F00B         	goto	u1961
  2385   001642  EF25  F00B         	goto	u1960
  2386   001646                     u1961:
  2387   001646  EF49  F00B         	goto	l2889
  2388   00164A                     u1960:
  2389   00164A                     
  2390                           ; BSR set to: 0
  2391   00164A  516F               	movf	vfpfcnvrt@done& (0+255),w,b
  2392   00164C  B4D8               	btfsc	status,2,c
  2393   00164E  EF2B  F00B         	goto	u1971
  2394   001652  EF2D  F00B         	goto	u1970
  2395   001656                     u1971:
  2396   001656  EF49  F00B         	goto	l2889
  2397   00165A                     u1970:
  2398   00165A                     
  2399                           ; BSR set to: 0
  2400                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2401   00165A  0776               	decf	vfpfcnvrt@c& (0+255),f,b
  2402   00165C  0E00               	movlw	low _dbuf
  2403   00165E  2576               	addwf	vfpfcnvrt@c& (0+255),w,b
  2404   001660  6ED9               	movwf	fsr2l,c
  2405   001662  6ADA               	clrf	fsr2h,c
  2406   001664  0E01               	movlw	high _dbuf
  2407   001666  22DA               	addwfc	fsr2h,f,c
  2408   001668  0E2D               	movlw	45
  2409   00166A  6EDF               	movwf	indf2,c
  2410   00166C  EF49  F00B         	goto	l2889
  2411   001670                     l2885:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2415   001670  0E00               	movlw	low _dbuf
  2416   001672  2576               	addwf	vfpfcnvrt@c& (0+255),w,b
  2417   001674  6ED9               	movwf	fsr2l,c
  2418   001676  6ADA               	clrf	fsr2h,c
  2419   001678  0E01               	movlw	high _dbuf
  2420   00167A  22DA               	addwfc	fsr2h,f,c
  2421   00167C  50DF               	movf	indf2,w,c
  2422   00167E  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  2423   001680  516D               	movf	??_vfpfcnvrt& (0+255),w,b
  2424   001682  6F60               	movwf	fputc@c& (0+255),b
  2425   001684  6B61               	clrf	(fputc@c+1)& (0+255),b
  2426   001686  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2427   00168A  EC9C  F00E         	call	_fputc	;wreg free
  2428   00168E  0100               	movlb	0	; () banked
  2429   001690  2B76               	incf	vfpfcnvrt@c& (0+255),f,b
  2430   001692                     l2889:
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2434   001692  0E20               	movlw	32
  2435   001694  1976               	xorwf	vfpfcnvrt@c& (0+255),w,b
  2436   001696  A4D8               	btfss	status,2,c
  2437   001698  EF50  F00B         	goto	u1981
  2438   00169C  EF52  F00B         	goto	u1980
  2439   0016A0                     u1981:
  2440   0016A0  EF38  F00B         	goto	l2885
  2441   0016A4                     u1980:
  2442   0016A4  EF6E  F00B         	goto	l1151
  2443   0016A8                     l2891:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2446   0016A8  0100               	movlb	0	; () banked
  2447   0016AA  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2448   0016AC  6ED9               	movwf	fsr2l,c
  2449   0016AE  6ADA               	clrf	fsr2h,c
  2450   0016B0  2ADE               	incf	postinc2,f,c
  2451   0016B2  0E00               	movlw	0
  2452   0016B4  22DD               	addwfc	postdec2,f,c
  2453   0016B6  EF6E  F00B         	goto	l1151
  2454   0016BA                     l2895:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2458   0016BA  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2459   0016BC  6ED9               	movwf	fsr2l,c
  2460   0016BE  6ADA               	clrf	fsr2h,c
  2461   0016C0  CFDE FFF6          	movff	postinc2,tblptrl
  2462   0016C4  CFDD FFF7          	movff	postdec2,tblptrh
  2463   0016C8                     	if	0	;tblptru may be non-zero
  2464   0016C8                     	endif
  2465   0016C8                     	if	0	;tblptru may be non-zero
  2466   0016C8                     	endif
  2467   0016C8  0008               	tblrd		*
  2468   0016CA  50F5               	movf	tablat,w,c
  2469   0016CC  6F60               	movwf	fputc@c& (0+255),b
  2470   0016CE  6B61               	clrf	(fputc@c+1)& (0+255),b
  2471   0016D0  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2472   0016D4  EC9C  F00E         	call	_fputc	;wreg free
  2473   0016D8  EF54  F00B         	goto	l2891
  2474   0016DC                     l1151:
  2475                           
  2476                           ; BSR set to: 0
  2477   0016DC  0012               	return		;funcret
  2478   0016DE                     __end_of_vfpfcnvrt:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function _fputc *****************
  2482 ;; Defined at:
  2483 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  c               2    0[BANK0 ] int 
  2486 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  2487 ;;		 -> sprintf@f(12), 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  2    0[BANK0 ] int 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2499 ;;      Params:         0       3       0       0       0       0       0       0       0
  2500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2501 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2502 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2503 ;;Total ram usage:        8 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 8
  2506 ;; This function calls:
  2507 ;;		_putch
  2508 ;; This function is called by:
  2509 ;;		_vfpfcnvrt
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text4
  2514   001D38                     __ptext4:
  2515                           	callstack 0
  2516   001D38                     _fputc:
  2517                           	callstack 19
  2518   001D38  0100               	movlb	0	; () banked
  2519   001D3A  5162               	movf	fputc@fp& (0+255),w,b
  2520   001D3C  B4D8               	btfsc	status,2,c
  2521   001D3E  EFA3  F00E         	goto	u1671
  2522   001D42  EFA5  F00E         	goto	u1670
  2523   001D46                     u1671:
  2524   001D46  EFAD  F00E         	goto	l2717
  2525   001D4A                     u1670:
  2526   001D4A                     
  2527                           ; BSR set to: 0
  2528   001D4A  5162               	movf	fputc@fp& (0+255),w,b
  2529   001D4C  A4D8               	btfss	status,2,c
  2530   001D4E  EFAB  F00E         	goto	u1681
  2531   001D52  EFAD  F00E         	goto	u1680
  2532   001D56                     u1681:
  2533   001D56  EFB2  F00E         	goto	l2719
  2534   001D5A                     u1680:
  2535   001D5A                     l2717:
  2536                           
  2537                           ; BSR set to: 0
  2538   001D5A  5160               	movf	fputc@c& (0+255),w,b
  2539   001D5C  ECFC  F012         	call	_putch
  2540   001D60  EFF9  F00E         	goto	l1176
  2541   001D64                     l2719:
  2542                           
  2543                           ; BSR set to: 0
  2544   001D64  5162               	movf	fputc@fp& (0+255),w,b
  2545   001D66  6ED9               	movwf	fsr2l,c
  2546   001D68  6ADA               	clrf	fsr2h,c
  2547   001D6A  0E0A               	movlw	10
  2548   001D6C  26D9               	addwf	fsr2l,f,c
  2549   001D6E  50DE               	movf	postinc2,w,c
  2550   001D70  10DE               	iorwf	postinc2,w,c
  2551   001D72  B4D8               	btfsc	status,2,c
  2552   001D74  EFBE  F00E         	goto	u1691
  2553   001D78  EFC0  F00E         	goto	u1690
  2554   001D7C                     u1691:
  2555   001D7C  EFD9  F00E         	goto	l2723
  2556   001D80                     u1690:
  2557   001D80                     
  2558                           ; BSR set to: 0
  2559   001D80  5162               	movf	fputc@fp& (0+255),w,b
  2560   001D82  6ED9               	movwf	fsr2l,c
  2561   001D84  6ADA               	clrf	fsr2h,c
  2562   001D86  0E0A               	movlw	10
  2563   001D88  26D9               	addwf	fsr2l,f,c
  2564   001D8A  5162               	movf	fputc@fp& (0+255),w,b
  2565   001D8C  6EE1               	movwf	fsr1l,c
  2566   001D8E  6AE2               	clrf	fsr1h,c
  2567   001D90  0E03               	movlw	3
  2568   001D92  26E1               	addwf	fsr1l,f,c
  2569   001D94  50DE               	movf	postinc2,w,c
  2570   001D96  5CE6               	subwf	postinc1,w,c
  2571   001D98  50E6               	movf	postinc1,w,c
  2572   001D9A  0A80               	xorlw	128
  2573   001D9C  6F67               	movwf	(??_fputc+4)& (0+255),b
  2574   001D9E  50DE               	movf	postinc2,w,c
  2575   001DA0  0A80               	xorlw	128
  2576   001DA2  5967               	subwfb	(??_fputc+4)& (0+255),w,b
  2577   001DA4  B0D8               	btfsc	status,0,c
  2578   001DA6  EFD7  F00E         	goto	u1701
  2579   001DAA  EFD9  F00E         	goto	u1700
  2580   001DAE                     u1701:
  2581   001DAE  EFF9  F00E         	goto	l1176
  2582   001DB2                     u1700:
  2583   001DB2                     l2723:
  2584                           
  2585                           ; BSR set to: 0
  2586   001DB2  5162               	movf	fputc@fp& (0+255),w,b
  2587   001DB4  6ED9               	movwf	fsr2l,c
  2588   001DB6  6ADA               	clrf	fsr2h,c
  2589   001DB8  0E03               	movlw	3
  2590   001DBA  26D9               	addwf	fsr2l,f,c
  2591   001DBC  CFDE F063          	movff	postinc2,??_fputc
  2592   001DC0  CFDD F064          	movff	postdec2,??_fputc+1
  2593   001DC4  5162               	movf	fputc@fp& (0+255),w,b
  2594   001DC6  6ED9               	movwf	fsr2l,c
  2595   001DC8  6ADA               	clrf	fsr2h,c
  2596   001DCA  CFDE F065          	movff	postinc2,??_fputc+2
  2597   001DCE  CFDD F066          	movff	postdec2,??_fputc+3
  2598   001DD2  5163               	movf	??_fputc& (0+255),w,b
  2599   001DD4  2565               	addwf	(??_fputc+2)& (0+255),w,b
  2600   001DD6  6ED9               	movwf	fsr2l,c
  2601   001DD8  5164               	movf	(??_fputc+1)& (0+255),w,b
  2602   001DDA  2166               	addwfc	(??_fputc+3)& (0+255),w,b
  2603   001DDC  6EDA               	movwf	fsr2h,c
  2604   001DDE  C060  FFDF         	movff	fputc@c,indf2
  2605   001DE2  5162               	movf	fputc@fp& (0+255),w,b
  2606   001DE4  6ED9               	movwf	fsr2l,c
  2607   001DE6  6ADA               	clrf	fsr2h,c
  2608   001DE8  0E03               	movlw	3
  2609   001DEA  26D9               	addwf	fsr2l,f,c
  2610   001DEC  2ADE               	incf	postinc2,f,c
  2611   001DEE  0E00               	movlw	0
  2612   001DF0  22DD               	addwfc	postdec2,f,c
  2613   001DF2                     l1176:
  2614   001DF2  0012               	return		;funcret
  2615   001DF4                     __end_of_fputc:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _putch *****************
  2619 ;; Defined at:
  2620 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  c               1    wreg     unsigned char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  c               1    0[COMRAM] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2637 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 7
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_fputc
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text5
  2649   0025F8                     __ptext5:
  2650                           	callstack 0
  2651   0025F8                     _putch:
  2652                           	callstack 19
  2653   0025F8  0012               	return		;funcret
  2654   0025FA                     __end_of_putch:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _abs *****************
  2658 ;; Defined at:
  2659 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  a               2    6[BANK0 ] int 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  2    6[BANK0 ] int 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2673 ;;      Params:         0       2       0       0       0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2675 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2676 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2677 ;;Total ram usage:        4 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 7
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_vfpfcnvrt
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text6
  2688   00247C                     __ptext6:
  2689                           	callstack 0
  2690   00247C                     _abs:
  2691                           	callstack 20
  2692   00247C  0100               	movlb	0	; () banked
  2693   00247E  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  2694   002480  EF44  F012         	goto	u1711
  2695   002484  EF46  F012         	goto	u1710
  2696   002488                     u1711:
  2697   002488  EF4C  F012         	goto	l1161
  2698   00248C                     u1710:
  2699   00248C                     
  2700                           ; BSR set to: 0
  2701   00248C  C066  F066         	movff	abs@a,?_abs
  2702   002490  C067  F067         	movff	abs@a+1,?_abs+1
  2703   002494  EF58  F012         	goto	l1164
  2704   002498                     l1161:
  2705                           
  2706                           ; BSR set to: 0
  2707   002498  C066  F068         	movff	abs@a,??_abs
  2708   00249C  C067  F069         	movff	abs@a+1,??_abs+1
  2709   0024A0  1F68               	comf	??_abs& (0+255),f,b
  2710   0024A2  1F69               	comf	(??_abs+1)& (0+255),f,b
  2711   0024A4  4B68               	infsnz	??_abs& (0+255),f,b
  2712   0024A6  2B69               	incf	(??_abs+1)& (0+255),f,b
  2713   0024A8  C068  F066         	movff	??_abs,?_abs
  2714   0024AC  C069  F067         	movff	??_abs+1,?_abs+1
  2715   0024B0                     l1164:
  2716                           
  2717                           ; BSR set to: 0
  2718   0024B0  0012               	return		;funcret
  2719   0024B2                     __end_of_abs:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function ___awmod *****************
  2723 ;; Defined at:
  2724 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  dividend        2    0[BANK0 ] int 
  2727 ;;  divisor         2    2[BANK0 ] int 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  sign            1    5[BANK0 ] unsigned char 
  2730 ;;  counter         1    4[BANK0 ] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  2    0[BANK0 ] int 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2740 ;;      Params:         0       4       0       0       0       0       0       0       0
  2741 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2743 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2744 ;;Total ram usage:        6 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 7
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_vfpfcnvrt
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text7
  2755   001EAE                     __ptext7:
  2756                           	callstack 0
  2757   001EAE                     ___awmod:
  2758                           	callstack 20
  2759   001EAE  0E00               	movlw	0
  2760   001EB0  0100               	movlb	0	; () banked
  2761   001EB2  6F65               	movwf	___awmod@sign& (0+255),b
  2762   001EB4                     
  2763                           ; BSR set to: 0
  2764   001EB4  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2765   001EB6  EF61  F00F         	goto	u1610
  2766   001EBA  EF5F  F00F         	goto	u1611
  2767   001EBE                     u1611:
  2768   001EBE  EF67  F00F         	goto	l2685
  2769   001EC2                     u1610:
  2770   001EC2                     
  2771                           ; BSR set to: 0
  2772   001EC2  6D60               	negf	___awmod@dividend& (0+255),b
  2773   001EC4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2774   001EC6  B0D8               	btfsc	status,0,c
  2775   001EC8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2776   001ECA                     
  2777                           ; BSR set to: 0
  2778   001ECA  0E01               	movlw	1
  2779   001ECC  6F65               	movwf	___awmod@sign& (0+255),b
  2780   001ECE                     l2685:
  2781                           
  2782                           ; BSR set to: 0
  2783   001ECE  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2784   001ED0  EF6E  F00F         	goto	u1620
  2785   001ED4  EF6C  F00F         	goto	u1621
  2786   001ED8                     u1621:
  2787   001ED8  EF72  F00F         	goto	l2689
  2788   001EDC                     u1620:
  2789   001EDC                     
  2790                           ; BSR set to: 0
  2791   001EDC  6D62               	negf	___awmod@divisor& (0+255),b
  2792   001EDE  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  2793   001EE0  B0D8               	btfsc	status,0,c
  2794   001EE2  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  2795   001EE4                     l2689:
  2796                           
  2797                           ; BSR set to: 0
  2798   001EE4  5162               	movf	___awmod@divisor& (0+255),w,b
  2799   001EE6  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2800   001EE8  B4D8               	btfsc	status,2,c
  2801   001EEA  EF79  F00F         	goto	u1631
  2802   001EEE  EF7B  F00F         	goto	u1630
  2803   001EF2                     u1631:
  2804   001EF2  EF9F  F00F         	goto	l2705
  2805   001EF6                     u1630:
  2806   001EF6                     
  2807                           ; BSR set to: 0
  2808   001EF6  0E01               	movlw	1
  2809   001EF8  6F64               	movwf	___awmod@counter& (0+255),b
  2810   001EFA  EF83  F00F         	goto	l2695
  2811   001EFE                     l2693:
  2812                           
  2813                           ; BSR set to: 0
  2814   001EFE  90D8               	bcf	status,0,c
  2815   001F00  3762               	rlcf	___awmod@divisor& (0+255),f,b
  2816   001F02  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2817   001F04  2B64               	incf	___awmod@counter& (0+255),f,b
  2818   001F06                     l2695:
  2819                           
  2820                           ; BSR set to: 0
  2821   001F06  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2822   001F08  EF88  F00F         	goto	u1641
  2823   001F0C  EF8A  F00F         	goto	u1640
  2824   001F10                     u1641:
  2825   001F10  EF7F  F00F         	goto	l2693
  2826   001F14                     u1640:
  2827   001F14                     l2697:
  2828                           
  2829                           ; BSR set to: 0
  2830   001F14  5162               	movf	___awmod@divisor& (0+255),w,b
  2831   001F16  5D60               	subwf	___awmod@dividend& (0+255),w,b
  2832   001F18  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2833   001F1A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2834   001F1C  A0D8               	btfss	status,0,c
  2835   001F1E  EF93  F00F         	goto	u1651
  2836   001F22  EF95  F00F         	goto	u1650
  2837   001F26                     u1651:
  2838   001F26  EF99  F00F         	goto	l2701
  2839   001F2A                     u1650:
  2840   001F2A                     
  2841                           ; BSR set to: 0
  2842   001F2A  5162               	movf	___awmod@divisor& (0+255),w,b
  2843   001F2C  5F60               	subwf	___awmod@dividend& (0+255),f,b
  2844   001F2E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2845   001F30  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2846   001F32                     l2701:
  2847                           
  2848                           ; BSR set to: 0
  2849   001F32  90D8               	bcf	status,0,c
  2850   001F34  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2851   001F36  3362               	rrcf	___awmod@divisor& (0+255),f,b
  2852   001F38                     
  2853                           ; BSR set to: 0
  2854   001F38  2F64               	decfsz	___awmod@counter& (0+255),f,b
  2855   001F3A  EF8A  F00F         	goto	l2697
  2856   001F3E                     l2705:
  2857                           
  2858                           ; BSR set to: 0
  2859   001F3E  5165               	movf	___awmod@sign& (0+255),w,b
  2860   001F40  B4D8               	btfsc	status,2,c
  2861   001F42  EFA5  F00F         	goto	u1661
  2862   001F46  EFA7  F00F         	goto	u1660
  2863   001F4A                     u1661:
  2864   001F4A  EFAB  F00F         	goto	l2709
  2865   001F4E                     u1660:
  2866   001F4E                     
  2867                           ; BSR set to: 0
  2868   001F4E  6D60               	negf	___awmod@dividend& (0+255),b
  2869   001F50  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2870   001F52  B0D8               	btfsc	status,0,c
  2871   001F54  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2872   001F56                     l2709:
  2873                           
  2874                           ; BSR set to: 0
  2875   001F56  C060  F060         	movff	___awmod@dividend,?___awmod
  2876   001F5A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  2877   001F5E                     
  2878                           ; BSR set to: 0
  2879   001F5E  0012               	return		;funcret
  2880   001F60                     __end_of___awmod:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function ___awdiv *****************
  2884 ;; Defined at:
  2885 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  dividend        2    0[BANK0 ] int 
  2888 ;;  divisor         2    2[BANK0 ] int 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  quotient        2    6[BANK0 ] int 
  2891 ;;  sign            1    5[BANK0 ] unsigned char 
  2892 ;;  counter         1    4[BANK0 ] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2    0[BANK0 ] int 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2902 ;;      Params:         0       4       0       0       0       0       0       0       0
  2903 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2905 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2906 ;;Total ram usage:        8 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 7
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_vfpfcnvrt
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text8
  2917   001BAE                     __ptext8:
  2918                           	callstack 0
  2919   001BAE                     ___awdiv:
  2920                           	callstack 20
  2921   001BAE  0E00               	movlw	0
  2922   001BB0  0100               	movlb	0	; () banked
  2923   001BB2  6F65               	movwf	___awdiv@sign& (0+255),b
  2924   001BB4                     
  2925                           ; BSR set to: 0
  2926   001BB4  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2927   001BB6  EFE1  F00D         	goto	u1550
  2928   001BBA  EFDF  F00D         	goto	u1551
  2929   001BBE                     u1551:
  2930   001BBE  EFE7  F00D         	goto	l2641
  2931   001BC2                     u1550:
  2932   001BC2                     
  2933                           ; BSR set to: 0
  2934   001BC2  6D62               	negf	___awdiv@divisor& (0+255),b
  2935   001BC4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2936   001BC6  B0D8               	btfsc	status,0,c
  2937   001BC8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2938   001BCA                     
  2939                           ; BSR set to: 0
  2940   001BCA  0E01               	movlw	1
  2941   001BCC  6F65               	movwf	___awdiv@sign& (0+255),b
  2942   001BCE                     l2641:
  2943                           
  2944                           ; BSR set to: 0
  2945   001BCE  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  2946   001BD0  EFEE  F00D         	goto	u1560
  2947   001BD4  EFEC  F00D         	goto	u1561
  2948   001BD8                     u1561:
  2949   001BD8  EFF4  F00D         	goto	l2647
  2950   001BDC                     u1560:
  2951   001BDC                     
  2952                           ; BSR set to: 0
  2953   001BDC  6D60               	negf	___awdiv@dividend& (0+255),b
  2954   001BDE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2955   001BE0  B0D8               	btfsc	status,0,c
  2956   001BE2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2957   001BE4                     
  2958                           ; BSR set to: 0
  2959   001BE4  0E01               	movlw	1
  2960   001BE6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  2961   001BE8                     l2647:
  2962                           
  2963                           ; BSR set to: 0
  2964   001BE8  0E00               	movlw	0
  2965   001BEA  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  2966   001BEC  0E00               	movlw	0
  2967   001BEE  6F66               	movwf	___awdiv@quotient& (0+255),b
  2968   001BF0                     
  2969                           ; BSR set to: 0
  2970   001BF0  5162               	movf	___awdiv@divisor& (0+255),w,b
  2971   001BF2  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2972   001BF4  B4D8               	btfsc	status,2,c
  2973   001BF6  EFFF  F00D         	goto	u1571
  2974   001BFA  EF01  F00E         	goto	u1570
  2975   001BFE                     u1571:
  2976   001BFE  EF29  F00E         	goto	l2669
  2977   001C02                     u1570:
  2978   001C02                     
  2979                           ; BSR set to: 0
  2980   001C02  0E01               	movlw	1
  2981   001C04  6F64               	movwf	___awdiv@counter& (0+255),b
  2982   001C06  EF09  F00E         	goto	l2655
  2983   001C0A                     l2653:
  2984                           
  2985                           ; BSR set to: 0
  2986   001C0A  90D8               	bcf	status,0,c
  2987   001C0C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  2988   001C0E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2989   001C10  2B64               	incf	___awdiv@counter& (0+255),f,b
  2990   001C12                     l2655:
  2991                           
  2992                           ; BSR set to: 0
  2993   001C12  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2994   001C14  EF0E  F00E         	goto	u1581
  2995   001C18  EF10  F00E         	goto	u1580
  2996   001C1C                     u1581:
  2997   001C1C  EF05  F00E         	goto	l2653
  2998   001C20                     u1580:
  2999   001C20                     l2657:
  3000                           
  3001                           ; BSR set to: 0
  3002   001C20  90D8               	bcf	status,0,c
  3003   001C22  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3004   001C24  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3005   001C26                     
  3006                           ; BSR set to: 0
  3007   001C26  5162               	movf	___awdiv@divisor& (0+255),w,b
  3008   001C28  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3009   001C2A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3010   001C2C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3011   001C2E  A0D8               	btfss	status,0,c
  3012   001C30  EF1C  F00E         	goto	u1591
  3013   001C34  EF1E  F00E         	goto	u1590
  3014   001C38                     u1591:
  3015   001C38  EF23  F00E         	goto	l2665
  3016   001C3C                     u1590:
  3017   001C3C                     
  3018                           ; BSR set to: 0
  3019   001C3C  5162               	movf	___awdiv@divisor& (0+255),w,b
  3020   001C3E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3021   001C40  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3022   001C42  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3023   001C44                     
  3024                           ; BSR set to: 0
  3025   001C44  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3026   001C46                     l2665:
  3027                           
  3028                           ; BSR set to: 0
  3029   001C46  90D8               	bcf	status,0,c
  3030   001C48  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3031   001C4A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3032   001C4C                     
  3033                           ; BSR set to: 0
  3034   001C4C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3035   001C4E  EF10  F00E         	goto	l2657
  3036   001C52                     l2669:
  3037                           
  3038                           ; BSR set to: 0
  3039   001C52  5165               	movf	___awdiv@sign& (0+255),w,b
  3040   001C54  B4D8               	btfsc	status,2,c
  3041   001C56  EF2F  F00E         	goto	u1601
  3042   001C5A  EF31  F00E         	goto	u1600
  3043   001C5E                     u1601:
  3044   001C5E  EF35  F00E         	goto	l2673
  3045   001C62                     u1600:
  3046   001C62                     
  3047                           ; BSR set to: 0
  3048   001C62  6D66               	negf	___awdiv@quotient& (0+255),b
  3049   001C64  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3050   001C66  B0D8               	btfsc	status,0,c
  3051   001C68  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3052   001C6A                     l2673:
  3053                           
  3054                           ; BSR set to: 0
  3055   001C6A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3056   001C6E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3057   001C72                     
  3058                           ; BSR set to: 0
  3059   001C72  0012               	return		;funcret
  3060   001C74                     __end_of___awdiv:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function _blinky *****************
  3064 ;; Defined at:
  3065 ;;		line 17 in file "blinky.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3079 ;;      Params:         0       0       0       0       0       0       0       0       0
  3080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3082 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3083 ;;Total ram usage:        0 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 7
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text9
  3094   002534                     __ptext9:
  3095                           	callstack 0
  3096   002534                     _blinky:
  3097                           	callstack 23
  3098   002534                     
  3099                           ;blinky.c: 19:   INTCONbits.GIE=1;
  3100   002534  8EF2               	bsf	242,7,c	;volatile
  3101                           
  3102                           ;blinky.c: 20:   INTCONbits.PEIE=1;
  3103   002536  8CF2               	bsf	242,6,c	;volatile
  3104                           
  3105                           ;blinky.c: 21:   RCONbits.IPEN=1;
  3106   002538  8ED0               	bsf	208,7,c	;volatile
  3107                           
  3108                           ;blinky.c: 23:   T0CONbits.TMR0ON=0;
  3109   00253A  9ED5               	bcf	213,7,c	;volatile
  3110                           
  3111                           ;blinky.c: 24:   INTCONbits.TMR0IE=1;
  3112   00253C  8AF2               	bsf	242,5,c	;volatile
  3113                           
  3114                           ;blinky.c: 25:   INTCON2bits.TMR0IP=1;
  3115   00253E  84F1               	bsf	241,2,c	;volatile
  3116                           
  3117                           ;blinky.c: 26:   T0CONbits.T08BIT=0;
  3118   002540  9CD5               	bcf	213,6,c	;volatile
  3119                           
  3120                           ;blinky.c: 27:   T0CONbits.T0CS=0;
  3121   002542  9AD5               	bcf	213,5,c	;volatile
  3122                           
  3123                           ;blinky.c: 28:   T0CONbits.PSA=0;
  3124   002544  96D5               	bcf	213,3,c	;volatile
  3125   002546                     
  3126                           ;blinky.c: 29:   T0CONbits.T0PS=0b100;
  3127   002546  50D5               	movf	213,w,c	;volatile
  3128   002548  0BF8               	andlw	-8
  3129   00254A  0904               	iorlw	4
  3130   00254C  6ED5               	movwf	213,c	;volatile
  3131   00254E                     
  3132                           ;blinky.c: 30:   INTCONbits.TMR0IF=0;
  3133   00254E  94F2               	bcf	242,2,c	;volatile
  3134   002550                     
  3135                           ;blinky.c: 32:   T0CONbits.TMR0ON=1;
  3136   002550  8ED5               	bsf	213,7,c	;volatile
  3137   002552  0012               	return		;funcret
  3138   002554                     __end_of_blinky:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function ___wmul *****************
  3142 ;; Defined at:
  3143 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3146 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  product         2    4[BANK0 ] unsigned int 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  2    0[BANK0 ] unsigned int 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0, prodl, prodh
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3158 ;;      Params:         0       4       0       0       0       0       0       0       0
  3159 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3161 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3162 ;;Total ram usage:        6 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 7
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text10
  3173   0024E6                     __ptext10:
  3174                           	callstack 0
  3175   0024E6                     ___wmul:
  3176                           	callstack 23
  3177   0024E6  0100               	movlb	0	; () banked
  3178   0024E8  5160               	movf	___wmul@multiplier& (0+255),w,b
  3179   0024EA  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3180   0024EC  CFF3 F064          	movff	prodl,___wmul@product
  3181   0024F0  CFF4 F065          	movff	prodh,___wmul@product+1
  3182   0024F4  5160               	movf	___wmul@multiplier& (0+255),w,b
  3183   0024F6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3184   0024F8  50F3               	movf	243,w,c
  3185   0024FA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3186   0024FC  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3187   0024FE  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3188   002500  50F3               	movf	243,w,c
  3189   002502  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3190   002504                     
  3191                           ; BSR set to: 0
  3192   002504  C064  F060         	movff	___wmul@product,?___wmul
  3193   002508  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3194   00250C                     
  3195                           ; BSR set to: 0
  3196   00250C  0012               	return		;funcret
  3197   00250E                     __end_of___wmul:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _Welcome *****************
  3201 ;; Defined at:
  3202 ;;		line 25 in file "Welcome.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  i               1   25[BANK0 ] unsigned char 
  3207 ;;  i               1   23[BANK0 ] unsigned char 
  3208 ;;  i               1   24[BANK0 ] unsigned char 
  3209 ;;  i               1   22[BANK0 ] unsigned char 
  3210 ;;  i               1   21[BANK0 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0
  3221 ;;      Locals:         0       5       0       0       0       0       0       0       0
  3222 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3223 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3224 ;;Total ram usage:        7 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 11
  3227 ;; This function calls:
  3228 ;;		_Lcd_CGRAM_Close
  3229 ;;		_Lcd_CGRAM_CreateChar
  3230 ;;		_Lcd_CGRAM_Init
  3231 ;;		_Lcd_Clear
  3232 ;;		_Lcd_Init
  3233 ;;		_Lcd_Set_Cursor
  3234 ;;		_Lcd_Shift_Left
  3235 ;;		_Lcd_Shift_Right
  3236 ;;		_Lcd_Write_Char
  3237 ;;		_Lcd_Write_String
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text11
  3244   000900                     __ptext11:
  3245                           	callstack 0
  3246   000900                     _Welcome:
  3247                           	callstack 19
  3248   000900                     
  3249                           ;Welcome.c: 30:     Lcd_Init();
  3250   000900  EC08  F010         	call	_Lcd_Init	;wreg free
  3251                           
  3252                           ;Welcome.c: 32:     Lcd_CGRAM_Init();
  3253   000904  ECCF  F012         	call	_Lcd_CGRAM_Init	;wreg free
  3254   000908                     
  3255                           ;Welcome.c: 33:     Lcd_CGRAM_CreateChar(0, figura_1);
  3256   000908  0E1D               	movlw	low _figura_1
  3257   00090A  0100               	movlb	0	; () banked
  3258   00090C  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3259   00090E  0E7F               	movlw	high _figura_1
  3260   000910  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3261   000912  0E00               	movlw	0
  3262   000914  EC47  F009         	call	_Lcd_CGRAM_CreateChar
  3263   000918                     
  3264                           ;Welcome.c: 34:     Lcd_CGRAM_CreateChar(1, figura_2);
  3265   000918  0E15               	movlw	low _figura_2
  3266   00091A  0100               	movlb	0	; () banked
  3267   00091C  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3268   00091E  0E7F               	movlw	high _figura_2
  3269   000920  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3270   000922  0E01               	movlw	1
  3271   000924  EC47  F009         	call	_Lcd_CGRAM_CreateChar
  3272   000928                     
  3273                           ;Welcome.c: 35:     Lcd_CGRAM_CreateChar(2, figura_3);
  3274   000928  0E0D               	movlw	low _figura_3
  3275   00092A  0100               	movlb	0	; () banked
  3276   00092C  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3277   00092E  0E7F               	movlw	high _figura_3
  3278   000930  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3279   000932  0E02               	movlw	2
  3280   000934  EC47  F009         	call	_Lcd_CGRAM_CreateChar
  3281   000938                     
  3282                           ;Welcome.c: 36:     Lcd_CGRAM_CreateChar(3, figura_4);
  3283   000938  0E05               	movlw	low _figura_4
  3284   00093A  0100               	movlb	0	; () banked
  3285   00093C  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3286   00093E  0E7F               	movlw	high _figura_4
  3287   000940  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3288   000942  0E03               	movlw	3
  3289   000944  EC47  F009         	call	_Lcd_CGRAM_CreateChar
  3290   000948                     
  3291                           ;Welcome.c: 37:     Lcd_CGRAM_CreateChar(4, figura_5);
  3292   000948  0EFD               	movlw	low _figura_5
  3293   00094A  0100               	movlb	0	; () banked
  3294   00094C  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3295   00094E  0E7E               	movlw	high _figura_5
  3296   000950  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3297   000952  0E04               	movlw	4
  3298   000954  EC47  F009         	call	_Lcd_CGRAM_CreateChar
  3299   000958                     
  3300                           ;Welcome.c: 38:     Lcd_CGRAM_CreateChar(5, figura_6);
  3301   000958  0EF5               	movlw	low _figura_6
  3302   00095A  0100               	movlb	0	; () banked
  3303   00095C  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3304   00095E  0E7E               	movlw	high _figura_6
  3305   000960  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3306   000962  0E05               	movlw	5
  3307   000964  EC47  F009         	call	_Lcd_CGRAM_CreateChar
  3308   000968                     
  3309                           ;Welcome.c: 39:     Lcd_CGRAM_CreateChar(6, figura_7);
  3310   000968  0EED               	movlw	low _figura_7
  3311   00096A  0100               	movlb	0	; () banked
  3312   00096C  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3313   00096E  0E7E               	movlw	high _figura_7
  3314   000970  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3315   000972  0E06               	movlw	6
  3316   000974  EC47  F009         	call	_Lcd_CGRAM_CreateChar
  3317   000978                     
  3318                           ;Welcome.c: 40:     Lcd_CGRAM_CreateChar(7, figura_8);
  3319   000978  0EE5               	movlw	low _figura_8
  3320   00097A  0100               	movlb	0	; () banked
  3321   00097C  6F64               	movwf	Lcd_CGRAM_CreateChar@chardata& (0+255),b
  3322   00097E  0E7E               	movlw	high _figura_8
  3323   000980  6F65               	movwf	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),b
  3324   000982  0E07               	movlw	7
  3325   000984  EC47  F009         	call	_Lcd_CGRAM_CreateChar
  3326                           
  3327                           ;Welcome.c: 42:     Lcd_CGRAM_Close();
  3328   000988  ECD6  F012         	call	_Lcd_CGRAM_Close	;wreg free
  3329                           
  3330                           ;Welcome.c: 43:     Lcd_Clear();
  3331   00098C  ECC8  F012         	call	_Lcd_Clear	;wreg free
  3332   000990                     
  3333                           ;Welcome.c: 46:     Lcd_Set_Cursor(1,1);
  3334   000990  0E01               	movlw	1
  3335   000992  0100               	movlb	0	; () banked
  3336   000994  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3337   000996  0E01               	movlw	1
  3338   000998  ECFF  F00C         	call	_Lcd_Set_Cursor
  3339   00099C                     
  3340                           ;Welcome.c: 47:     Lcd_Write_String("   Bienvenidos  ");
  3341   00099C  0E47               	movlw	low STR_17
  3342   00099E  0100               	movlb	0	; () banked
  3343   0009A0  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3344   0009A2  0E7F               	movlw	high STR_17
  3345   0009A4  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3346   0009A6  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3347   0009AA                     
  3348                           ;Welcome.c: 48:     _delay((unsigned long)((3000)*(8000000UL/4000.0)));
  3349   0009AA  0E1F               	movlw	31
  3350   0009AC  0100               	movlb	0	; () banked
  3351   0009AE  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3352   0009B0  0E71               	movlw	113
  3353   0009B2  6F73               	movwf	??_Welcome& (0+255),b
  3354   0009B4  0E1E               	movlw	30
  3355   0009B6                     u3037:
  3356   0009B6  2EE8               	decfsz	wreg,f,c
  3357   0009B8  D7FE               	bra	u3037
  3358   0009BA  2F73               	decfsz	??_Welcome& (0+255),f,b
  3359   0009BC  D7FC               	bra	u3037
  3360   0009BE  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3361   0009C0  D7FA               	bra	u3037
  3362   0009C2  0000               	nop	
  3363   0009C4                     
  3364                           ;Welcome.c: 50:     for(char i=0; i<16; i++)
  3365   0009C4  0E00               	movlw	0
  3366   0009C6  0100               	movlb	0	; () banked
  3367   0009C8  6F75               	movwf	Welcome@i& (0+255),b
  3368   0009CA                     l3239:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;Welcome.c: 51:       {;Welcome.c: 52:         Lcd_Shift_Left();
  3372   0009CA  ECC1  F012         	call	_Lcd_Shift_Left	;wreg free
  3373   0009CE                     
  3374                           ;Welcome.c: 53:         _delay((unsigned long)((300)*(8000000UL/4000.0)));
  3375   0009CE  0E04               	movlw	4
  3376   0009D0  0100               	movlb	0	; () banked
  3377   0009D2  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3378   0009D4  0E0C               	movlw	12
  3379   0009D6  6F73               	movwf	??_Welcome& (0+255),b
  3380   0009D8  0E33               	movlw	51
  3381   0009DA                     u3047:
  3382   0009DA  2EE8               	decfsz	wreg,f,c
  3383   0009DC  D7FE               	bra	u3047
  3384   0009DE  2F73               	decfsz	??_Welcome& (0+255),f,b
  3385   0009E0  D7FC               	bra	u3047
  3386   0009E2  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3387   0009E4  D7FA               	bra	u3047
  3388   0009E6  D000               	nop2	
  3389   0009E8                     
  3390                           ;Welcome.c: 54:       }
  3391   0009E8  0100               	movlb	0	; () banked
  3392   0009EA  2B75               	incf	Welcome@i& (0+255),f,b
  3393   0009EC                     
  3394                           ; BSR set to: 0
  3395   0009EC  0E0F               	movlw	15
  3396   0009EE  6575               	cpfsgt	Welcome@i& (0+255),b
  3397   0009F0  EFFC  F004         	goto	u2301
  3398   0009F4  EFFE  F004         	goto	u2300
  3399   0009F8                     u2301:
  3400   0009F8  EFE5  F004         	goto	l3239
  3401   0009FC                     u2300:
  3402   0009FC                     
  3403                           ; BSR set to: 0
  3404                           ;Welcome.c: 56:     for(char i=0; i<16; i++)
  3405   0009FC  0E00               	movlw	0
  3406   0009FE  6F76               	movwf	Welcome@i_802& (0+255),b
  3407   000A00                     l3253:
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;Welcome.c: 57:       {;Welcome.c: 58:         Lcd_Shift_Right();
  3411   000A00  ECBA  F012         	call	_Lcd_Shift_Right	;wreg free
  3412   000A04                     
  3413                           ;Welcome.c: 59:         _delay((unsigned long)((300)*(8000000UL/4000.0)));
  3414   000A04  0E04               	movlw	4
  3415   000A06  0100               	movlb	0	; () banked
  3416   000A08  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3417   000A0A  0E0C               	movlw	12
  3418   000A0C  6F73               	movwf	??_Welcome& (0+255),b
  3419   000A0E  0E33               	movlw	51
  3420   000A10                     u3057:
  3421   000A10  2EE8               	decfsz	wreg,f,c
  3422   000A12  D7FE               	bra	u3057
  3423   000A14  2F73               	decfsz	??_Welcome& (0+255),f,b
  3424   000A16  D7FC               	bra	u3057
  3425   000A18  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3426   000A1A  D7FA               	bra	u3057
  3427   000A1C  D000               	nop2	
  3428   000A1E                     
  3429                           ;Welcome.c: 60:       }
  3430   000A1E  0100               	movlb	0	; () banked
  3431   000A20  2B76               	incf	Welcome@i_802& (0+255),f,b
  3432   000A22                     
  3433                           ; BSR set to: 0
  3434   000A22  0E0F               	movlw	15
  3435   000A24  6576               	cpfsgt	Welcome@i_802& (0+255),b
  3436   000A26  EF17  F005         	goto	u2311
  3437   000A2A  EF19  F005         	goto	u2310
  3438   000A2E                     u2311:
  3439   000A2E  EF00  F005         	goto	l3253
  3440   000A32                     u2310:
  3441   000A32                     
  3442                           ; BSR set to: 0
  3443                           ;Welcome.c: 62:     Lcd_Clear();
  3444   000A32  ECC8  F012         	call	_Lcd_Clear	;wreg free
  3445   000A36                     
  3446                           ;Welcome.c: 63:     Lcd_Set_Cursor(1,1);
  3447   000A36  0E01               	movlw	1
  3448   000A38  0100               	movlb	0	; () banked
  3449   000A3A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3450   000A3C  0E01               	movlw	1
  3451   000A3E  ECFF  F00C         	call	_Lcd_Set_Cursor
  3452   000A42                     
  3453                           ;Welcome.c: 64:     Lcd_Write_String("    Contador    ");
  3454   000A42  0E25               	movlw	low STR_18
  3455   000A44  0100               	movlb	0	; () banked
  3456   000A46  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3457   000A48  0E7F               	movlw	high STR_18
  3458   000A4A  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3459   000A4C  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3460   000A50                     
  3461                           ;Welcome.c: 65:     Lcd_Set_Cursor(2,1);
  3462   000A50  0E01               	movlw	1
  3463   000A52  0100               	movlb	0	; () banked
  3464   000A54  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3465   000A56  0E02               	movlw	2
  3466   000A58  ECFF  F00C         	call	_Lcd_Set_Cursor
  3467   000A5C                     
  3468                           ;Welcome.c: 66:     Lcd_Write_String("    De Piezas   ");
  3469   000A5C  0E36               	movlw	low STR_19
  3470   000A5E  0100               	movlb	0	; () banked
  3471   000A60  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3472   000A62  0E7F               	movlw	high STR_19
  3473   000A64  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3474   000A66  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3475   000A6A                     
  3476                           ;Welcome.c: 67:     _delay((unsigned long)((3000)*(8000000UL/4000.0)));
  3477   000A6A  0E1F               	movlw	31
  3478   000A6C  0100               	movlb	0	; () banked
  3479   000A6E  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3480   000A70  0E71               	movlw	113
  3481   000A72  6F73               	movwf	??_Welcome& (0+255),b
  3482   000A74  0E1E               	movlw	30
  3483   000A76                     u3067:
  3484   000A76  2EE8               	decfsz	wreg,f,c
  3485   000A78  D7FE               	bra	u3067
  3486   000A7A  2F73               	decfsz	??_Welcome& (0+255),f,b
  3487   000A7C  D7FC               	bra	u3067
  3488   000A7E  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3489   000A80  D7FA               	bra	u3067
  3490   000A82  0000               	nop	
  3491   000A84                     
  3492                           ;Welcome.c: 70:     for(char i=1; i<17; i++)
  3493   000A84  0E01               	movlw	1
  3494   000A86  0100               	movlb	0	; () banked
  3495   000A88  6F78               	movwf	Welcome@i_806& (0+255),b
  3496   000A8A                     l3279:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;Welcome.c: 71:       {;Welcome.c: 72:         Lcd_Set_Cursor(2,i);
  3500   000A8A  C078  F063         	movff	Welcome@i_806,Lcd_Set_Cursor@b
  3501   000A8E  0E02               	movlw	2
  3502   000A90  ECFF  F00C         	call	_Lcd_Set_Cursor
  3503                           
  3504                           ;Welcome.c: 73:          Lcd_Write_Char(0);
  3505   000A94  0E00               	movlw	0
  3506   000A96  EC03  F012         	call	_Lcd_Write_Char
  3507   000A9A                     
  3508                           ;Welcome.c: 74:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3509   000A9A  0E02               	movlw	2
  3510   000A9C  0100               	movlb	0	; () banked
  3511   000A9E  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3512   000AA0  0E45               	movlw	69
  3513   000AA2  6F73               	movwf	??_Welcome& (0+255),b
  3514   000AA4  0EA9               	movlw	169
  3515   000AA6                     u3077:
  3516   000AA6  2EE8               	decfsz	wreg,f,c
  3517   000AA8  D7FE               	bra	u3077
  3518   000AAA  2F73               	decfsz	??_Welcome& (0+255),f,b
  3519   000AAC  D7FC               	bra	u3077
  3520   000AAE  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3521   000AB0  D7FA               	bra	u3077
  3522   000AB2  D000               	nop2	
  3523   000AB4                     
  3524                           ;Welcome.c: 76:          Lcd_Set_Cursor(2,i);
  3525   000AB4  C078  F063         	movff	Welcome@i_806,Lcd_Set_Cursor@b
  3526   000AB8  0E02               	movlw	2
  3527   000ABA  ECFF  F00C         	call	_Lcd_Set_Cursor
  3528   000ABE                     
  3529                           ;Welcome.c: 77:          Lcd_Write_Char(1);
  3530   000ABE  0E01               	movlw	1
  3531   000AC0  EC03  F012         	call	_Lcd_Write_Char
  3532   000AC4                     
  3533                           ;Welcome.c: 78:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3534   000AC4  0E02               	movlw	2
  3535   000AC6  0100               	movlb	0	; () banked
  3536   000AC8  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3537   000ACA  0E45               	movlw	69
  3538   000ACC  6F73               	movwf	??_Welcome& (0+255),b
  3539   000ACE  0EA9               	movlw	169
  3540   000AD0                     u3087:
  3541   000AD0  2EE8               	decfsz	wreg,f,c
  3542   000AD2  D7FE               	bra	u3087
  3543   000AD4  2F73               	decfsz	??_Welcome& (0+255),f,b
  3544   000AD6  D7FC               	bra	u3087
  3545   000AD8  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3546   000ADA  D7FA               	bra	u3087
  3547   000ADC  D000               	nop2	
  3548                           
  3549                           ;Welcome.c: 81:          Lcd_Set_Cursor(2,i);
  3550   000ADE  C078  F063         	movff	Welcome@i_806,Lcd_Set_Cursor@b
  3551   000AE2  0E02               	movlw	2
  3552   000AE4  ECFF  F00C         	call	_Lcd_Set_Cursor
  3553   000AE8                     
  3554                           ;Welcome.c: 82:          Lcd_Write_String(" ");
  3555   000AE8  0E34               	movlw	low (STR_18+15)
  3556   000AEA  0100               	movlb	0	; () banked
  3557   000AEC  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3558   000AEE  0E7F               	movlw	high (STR_18+15)
  3559   000AF0  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3560   000AF2  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3561   000AF6                     
  3562                           ;Welcome.c: 85:          Lcd_Set_Cursor(2,i);
  3563   000AF6  C078  F063         	movff	Welcome@i_806,Lcd_Set_Cursor@b
  3564   000AFA  0E02               	movlw	2
  3565   000AFC  ECFF  F00C         	call	_Lcd_Set_Cursor
  3566   000B00                     
  3567                           ;Welcome.c: 86:          Lcd_Write_Char(2);
  3568   000B00  0E02               	movlw	2
  3569   000B02  EC03  F012         	call	_Lcd_Write_Char
  3570   000B06                     
  3571                           ;Welcome.c: 87:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3572   000B06  0E02               	movlw	2
  3573   000B08  0100               	movlb	0	; () banked
  3574   000B0A  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3575   000B0C  0E45               	movlw	69
  3576   000B0E  6F73               	movwf	??_Welcome& (0+255),b
  3577   000B10  0EA9               	movlw	169
  3578   000B12                     u3097:
  3579   000B12  2EE8               	decfsz	wreg,f,c
  3580   000B14  D7FE               	bra	u3097
  3581   000B16  2F73               	decfsz	??_Welcome& (0+255),f,b
  3582   000B18  D7FC               	bra	u3097
  3583   000B1A  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3584   000B1C  D7FA               	bra	u3097
  3585   000B1E  D000               	nop2	
  3586   000B20                     
  3587                           ;Welcome.c: 89:          Lcd_Set_Cursor(2,i);
  3588   000B20  C078  F063         	movff	Welcome@i_806,Lcd_Set_Cursor@b
  3589   000B24  0E02               	movlw	2
  3590   000B26  ECFF  F00C         	call	_Lcd_Set_Cursor
  3591   000B2A                     
  3592                           ;Welcome.c: 90:          Lcd_Write_Char(3);
  3593   000B2A  0E03               	movlw	3
  3594   000B2C  EC03  F012         	call	_Lcd_Write_Char
  3595   000B30                     
  3596                           ;Welcome.c: 91:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3597   000B30  0E02               	movlw	2
  3598   000B32  0100               	movlb	0	; () banked
  3599   000B34  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3600   000B36  0E45               	movlw	69
  3601   000B38  6F73               	movwf	??_Welcome& (0+255),b
  3602   000B3A  0EA9               	movlw	169
  3603   000B3C                     u3107:
  3604   000B3C  2EE8               	decfsz	wreg,f,c
  3605   000B3E  D7FE               	bra	u3107
  3606   000B40  2F73               	decfsz	??_Welcome& (0+255),f,b
  3607   000B42  D7FC               	bra	u3107
  3608   000B44  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3609   000B46  D7FA               	bra	u3107
  3610   000B48  D000               	nop2	
  3611   000B4A                     
  3612                           ;Welcome.c: 94:          Lcd_Set_Cursor(2,i);
  3613   000B4A  C078  F063         	movff	Welcome@i_806,Lcd_Set_Cursor@b
  3614   000B4E  0E02               	movlw	2
  3615   000B50  ECFF  F00C         	call	_Lcd_Set_Cursor
  3616                           
  3617                           ;Welcome.c: 95:          Lcd_Write_String(" ");
  3618   000B54  0E34               	movlw	low (STR_18+15)
  3619   000B56  0100               	movlb	0	; () banked
  3620   000B58  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3621   000B5A  0E7F               	movlw	high (STR_18+15)
  3622   000B5C  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3623   000B5E  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3624   000B62                     
  3625                           ;Welcome.c: 96:       }
  3626   000B62  0100               	movlb	0	; () banked
  3627   000B64  2B78               	incf	Welcome@i_806& (0+255),f,b
  3628   000B66                     
  3629                           ; BSR set to: 0
  3630   000B66  0E10               	movlw	16
  3631   000B68  6578               	cpfsgt	Welcome@i_806& (0+255),b
  3632   000B6A  EFB9  F005         	goto	u2321
  3633   000B6E  EFBB  F005         	goto	u2320
  3634   000B72                     u2321:
  3635   000B72  EF45  F005         	goto	l3279
  3636   000B76                     u2320:
  3637   000B76                     
  3638                           ; BSR set to: 0
  3639                           ;Welcome.c: 97:     for(char i=16; i>4; i--)
  3640   000B76  0E10               	movlw	16
  3641   000B78  6F77               	movwf	Welcome@i_809& (0+255),b
  3642   000B7A                     l3315:
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;Welcome.c: 98:       {;Welcome.c: 99:         Lcd_Set_Cursor(1,i);
  3646   000B7A  C077  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3647   000B7E  0E01               	movlw	1
  3648   000B80  ECFF  F00C         	call	_Lcd_Set_Cursor
  3649                           
  3650                           ;Welcome.c: 100:          Lcd_Write_Char(4);
  3651   000B84  0E04               	movlw	4
  3652   000B86  EC03  F012         	call	_Lcd_Write_Char
  3653   000B8A                     
  3654                           ;Welcome.c: 101:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3655   000B8A  0E02               	movlw	2
  3656   000B8C  0100               	movlb	0	; () banked
  3657   000B8E  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3658   000B90  0E45               	movlw	69
  3659   000B92  6F73               	movwf	??_Welcome& (0+255),b
  3660   000B94  0EA9               	movlw	169
  3661   000B96                     u3117:
  3662   000B96  2EE8               	decfsz	wreg,f,c
  3663   000B98  D7FE               	bra	u3117
  3664   000B9A  2F73               	decfsz	??_Welcome& (0+255),f,b
  3665   000B9C  D7FC               	bra	u3117
  3666   000B9E  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3667   000BA0  D7FA               	bra	u3117
  3668   000BA2  D000               	nop2	
  3669   000BA4                     
  3670                           ;Welcome.c: 103:          Lcd_Set_Cursor(1,i);
  3671   000BA4  C077  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3672   000BA8  0E01               	movlw	1
  3673   000BAA  ECFF  F00C         	call	_Lcd_Set_Cursor
  3674   000BAE                     
  3675                           ;Welcome.c: 104:          Lcd_Write_Char(5);
  3676   000BAE  0E05               	movlw	5
  3677   000BB0  EC03  F012         	call	_Lcd_Write_Char
  3678   000BB4                     
  3679                           ;Welcome.c: 105:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3680   000BB4  0E02               	movlw	2
  3681   000BB6  0100               	movlb	0	; () banked
  3682   000BB8  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3683   000BBA  0E45               	movlw	69
  3684   000BBC  6F73               	movwf	??_Welcome& (0+255),b
  3685   000BBE  0EA9               	movlw	169
  3686   000BC0                     u3127:
  3687   000BC0  2EE8               	decfsz	wreg,f,c
  3688   000BC2  D7FE               	bra	u3127
  3689   000BC4  2F73               	decfsz	??_Welcome& (0+255),f,b
  3690   000BC6  D7FC               	bra	u3127
  3691   000BC8  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3692   000BCA  D7FA               	bra	u3127
  3693   000BCC  D000               	nop2	
  3694                           
  3695                           ;Welcome.c: 107:          Lcd_Set_Cursor(1,i);
  3696   000BCE  C077  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3697   000BD2  0E01               	movlw	1
  3698   000BD4  ECFF  F00C         	call	_Lcd_Set_Cursor
  3699                           
  3700                           ;Welcome.c: 108:          Lcd_Write_Char(6);
  3701   000BD8  0E06               	movlw	6
  3702   000BDA  EC03  F012         	call	_Lcd_Write_Char
  3703   000BDE                     
  3704                           ;Welcome.c: 109:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3705   000BDE  0E02               	movlw	2
  3706   000BE0  0100               	movlb	0	; () banked
  3707   000BE2  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3708   000BE4  0E45               	movlw	69
  3709   000BE6  6F73               	movwf	??_Welcome& (0+255),b
  3710   000BE8  0EA9               	movlw	169
  3711   000BEA                     u3137:
  3712   000BEA  2EE8               	decfsz	wreg,f,c
  3713   000BEC  D7FE               	bra	u3137
  3714   000BEE  2F73               	decfsz	??_Welcome& (0+255),f,b
  3715   000BF0  D7FC               	bra	u3137
  3716   000BF2  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3717   000BF4  D7FA               	bra	u3137
  3718   000BF6  D000               	nop2	
  3719   000BF8                     
  3720                           ;Welcome.c: 111:          Lcd_Set_Cursor(1,i);
  3721   000BF8  C077  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3722   000BFC  0E01               	movlw	1
  3723   000BFE  ECFF  F00C         	call	_Lcd_Set_Cursor
  3724   000C02                     
  3725                           ;Welcome.c: 112:          Lcd_Write_Char(3);
  3726   000C02  0E03               	movlw	3
  3727   000C04  EC03  F012         	call	_Lcd_Write_Char
  3728   000C08                     
  3729                           ;Welcome.c: 113:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3730   000C08  0E02               	movlw	2
  3731   000C0A  0100               	movlb	0	; () banked
  3732   000C0C  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3733   000C0E  0E45               	movlw	69
  3734   000C10  6F73               	movwf	??_Welcome& (0+255),b
  3735   000C12  0EA9               	movlw	169
  3736   000C14                     u3147:
  3737   000C14  2EE8               	decfsz	wreg,f,c
  3738   000C16  D7FE               	bra	u3147
  3739   000C18  2F73               	decfsz	??_Welcome& (0+255),f,b
  3740   000C1A  D7FC               	bra	u3147
  3741   000C1C  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3742   000C1E  D7FA               	bra	u3147
  3743   000C20  D000               	nop2	
  3744                           
  3745                           ;Welcome.c: 115:          Lcd_Set_Cursor(1,i);
  3746   000C22  C077  F063         	movff	Welcome@i_809,Lcd_Set_Cursor@b
  3747   000C26  0E01               	movlw	1
  3748   000C28  ECFF  F00C         	call	_Lcd_Set_Cursor
  3749   000C2C                     
  3750                           ;Welcome.c: 116:          Lcd_Write_String(" ");
  3751   000C2C  0E34               	movlw	low (STR_18+15)
  3752   000C2E  0100               	movlb	0	; () banked
  3753   000C30  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3754   000C32  0E7F               	movlw	high (STR_18+15)
  3755   000C34  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3756   000C36  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3757   000C3A                     
  3758                           ;Welcome.c: 117:       }
  3759   000C3A  0100               	movlb	0	; () banked
  3760   000C3C  0777               	decf	Welcome@i_809& (0+255),f,b
  3761   000C3E                     
  3762                           ; BSR set to: 0
  3763   000C3E  0E05               	movlw	5
  3764   000C40  6177               	cpfslt	Welcome@i_809& (0+255),b
  3765   000C42  EF25  F006         	goto	u2331
  3766   000C46  EF27  F006         	goto	u2330
  3767   000C4A                     u2331:
  3768   000C4A  EFBD  F005         	goto	l3315
  3769   000C4E                     u2330:
  3770   000C4E                     
  3771                           ; BSR set to: 0
  3772                           ;Welcome.c: 120:     for(char i=3; i<20; i++)
  3773   000C4E  0E03               	movlw	3
  3774   000C50  6F79               	movwf	Welcome@i_811& (0+255),b
  3775   000C52                     l3345:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;Welcome.c: 121:       {;Welcome.c: 122:         Lcd_Set_Cursor(1,i);
  3779   000C52  C079  F063         	movff	Welcome@i_811,Lcd_Set_Cursor@b
  3780   000C56  0E01               	movlw	1
  3781   000C58  ECFF  F00C         	call	_Lcd_Set_Cursor
  3782                           
  3783                           ;Welcome.c: 123:          Lcd_Write_Char(0);
  3784   000C5C  0E00               	movlw	0
  3785   000C5E  EC03  F012         	call	_Lcd_Write_Char
  3786                           
  3787                           ;Welcome.c: 124:         Lcd_Set_Cursor(1,i-2);
  3788   000C62  0100               	movlb	0	; () banked
  3789   000C64  5179               	movf	Welcome@i_811& (0+255),w,b
  3790   000C66  0FFE               	addlw	254
  3791   000C68  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3792   000C6A  0E01               	movlw	1
  3793   000C6C  ECFF  F00C         	call	_Lcd_Set_Cursor
  3794                           
  3795                           ;Welcome.c: 125:          Lcd_Write_Char(7);
  3796   000C70  0E07               	movlw	7
  3797   000C72  EC03  F012         	call	_Lcd_Write_Char
  3798   000C76                     
  3799                           ;Welcome.c: 126:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3800   000C76  0E02               	movlw	2
  3801   000C78  0100               	movlb	0	; () banked
  3802   000C7A  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3803   000C7C  0E45               	movlw	69
  3804   000C7E  6F73               	movwf	??_Welcome& (0+255),b
  3805   000C80  0EA9               	movlw	169
  3806   000C82                     u3157:
  3807   000C82  2EE8               	decfsz	wreg,f,c
  3808   000C84  D7FE               	bra	u3157
  3809   000C86  2F73               	decfsz	??_Welcome& (0+255),f,b
  3810   000C88  D7FC               	bra	u3157
  3811   000C8A  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3812   000C8C  D7FA               	bra	u3157
  3813   000C8E  D000               	nop2	
  3814   000C90                     
  3815                           ;Welcome.c: 128:          Lcd_Set_Cursor(1,i);
  3816   000C90  C079  F063         	movff	Welcome@i_811,Lcd_Set_Cursor@b
  3817   000C94  0E01               	movlw	1
  3818   000C96  ECFF  F00C         	call	_Lcd_Set_Cursor
  3819   000C9A                     
  3820                           ;Welcome.c: 129:          Lcd_Write_Char(1);
  3821   000C9A  0E01               	movlw	1
  3822   000C9C  EC03  F012         	call	_Lcd_Write_Char
  3823   000CA0                     
  3824                           ;Welcome.c: 130:          Lcd_Set_Cursor(1,i-2);
  3825   000CA0  0100               	movlb	0	; () banked
  3826   000CA2  5179               	movf	Welcome@i_811& (0+255),w,b
  3827   000CA4  0FFE               	addlw	254
  3828   000CA6  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3829   000CA8  0E01               	movlw	1
  3830   000CAA  ECFF  F00C         	call	_Lcd_Set_Cursor
  3831   000CAE                     
  3832                           ;Welcome.c: 131:          Lcd_Write_Char(7);
  3833   000CAE  0E07               	movlw	7
  3834   000CB0  EC03  F012         	call	_Lcd_Write_Char
  3835   000CB4                     
  3836                           ;Welcome.c: 132:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3837   000CB4  0E02               	movlw	2
  3838   000CB6  0100               	movlb	0	; () banked
  3839   000CB8  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3840   000CBA  0E45               	movlw	69
  3841   000CBC  6F73               	movwf	??_Welcome& (0+255),b
  3842   000CBE  0EA9               	movlw	169
  3843   000CC0                     u3167:
  3844   000CC0  2EE8               	decfsz	wreg,f,c
  3845   000CC2  D7FE               	bra	u3167
  3846   000CC4  2F73               	decfsz	??_Welcome& (0+255),f,b
  3847   000CC6  D7FC               	bra	u3167
  3848   000CC8  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3849   000CCA  D7FA               	bra	u3167
  3850   000CCC  D000               	nop2	
  3851                           
  3852                           ;Welcome.c: 135:          Lcd_Set_Cursor(1,i);
  3853   000CCE  C079  F063         	movff	Welcome@i_811,Lcd_Set_Cursor@b
  3854   000CD2  0E01               	movlw	1
  3855   000CD4  ECFF  F00C         	call	_Lcd_Set_Cursor
  3856   000CD8                     
  3857                           ;Welcome.c: 136:          Lcd_Write_String(" ");
  3858   000CD8  0E34               	movlw	low (STR_18+15)
  3859   000CDA  0100               	movlb	0	; () banked
  3860   000CDC  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3861   000CDE  0E7F               	movlw	high (STR_18+15)
  3862   000CE0  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3863   000CE2  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3864   000CE6                     
  3865                           ;Welcome.c: 137:          Lcd_Set_Cursor(1,i-2);
  3866   000CE6  0100               	movlb	0	; () banked
  3867   000CE8  5179               	movf	Welcome@i_811& (0+255),w,b
  3868   000CEA  0FFE               	addlw	254
  3869   000CEC  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3870   000CEE  0E01               	movlw	1
  3871   000CF0  ECFF  F00C         	call	_Lcd_Set_Cursor
  3872                           
  3873                           ;Welcome.c: 138:          Lcd_Write_String(" ");
  3874   000CF4  0E34               	movlw	low (STR_18+15)
  3875   000CF6  0100               	movlb	0	; () banked
  3876   000CF8  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3877   000CFA  0E7F               	movlw	high (STR_18+15)
  3878   000CFC  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3879   000CFE  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3880   000D02                     
  3881                           ;Welcome.c: 141:          Lcd_Set_Cursor(1,i);
  3882   000D02  C079  F063         	movff	Welcome@i_811,Lcd_Set_Cursor@b
  3883   000D06  0E01               	movlw	1
  3884   000D08  ECFF  F00C         	call	_Lcd_Set_Cursor
  3885   000D0C                     
  3886                           ;Welcome.c: 142:          Lcd_Write_Char(2);
  3887   000D0C  0E02               	movlw	2
  3888   000D0E  EC03  F012         	call	_Lcd_Write_Char
  3889   000D12                     
  3890                           ;Welcome.c: 143:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3891   000D12  0E02               	movlw	2
  3892   000D14  0100               	movlb	0	; () banked
  3893   000D16  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3894   000D18  0E45               	movlw	69
  3895   000D1A  6F73               	movwf	??_Welcome& (0+255),b
  3896   000D1C  0EA9               	movlw	169
  3897   000D1E                     u3177:
  3898   000D1E  2EE8               	decfsz	wreg,f,c
  3899   000D20  D7FE               	bra	u3177
  3900   000D22  2F73               	decfsz	??_Welcome& (0+255),f,b
  3901   000D24  D7FC               	bra	u3177
  3902   000D26  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3903   000D28  D7FA               	bra	u3177
  3904   000D2A  D000               	nop2	
  3905   000D2C                     
  3906                           ;Welcome.c: 144:          Lcd_Set_Cursor(1,i-2);
  3907   000D2C  0100               	movlb	0	; () banked
  3908   000D2E  5179               	movf	Welcome@i_811& (0+255),w,b
  3909   000D30  0FFE               	addlw	254
  3910   000D32  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3911   000D34  0E01               	movlw	1
  3912   000D36  ECFF  F00C         	call	_Lcd_Set_Cursor
  3913   000D3A                     
  3914                           ;Welcome.c: 145:          Lcd_Write_Char(7);
  3915   000D3A  0E07               	movlw	7
  3916   000D3C  EC03  F012         	call	_Lcd_Write_Char
  3917   000D40                     
  3918                           ;Welcome.c: 147:          Lcd_Set_Cursor(1,i);
  3919   000D40  C079  F063         	movff	Welcome@i_811,Lcd_Set_Cursor@b
  3920   000D44  0E01               	movlw	1
  3921   000D46  ECFF  F00C         	call	_Lcd_Set_Cursor
  3922   000D4A                     
  3923                           ;Welcome.c: 148:          Lcd_Write_Char(3);
  3924   000D4A  0E03               	movlw	3
  3925   000D4C  EC03  F012         	call	_Lcd_Write_Char
  3926   000D50                     
  3927                           ;Welcome.c: 149:          Lcd_Set_Cursor(1,i-2);
  3928   000D50  0100               	movlb	0	; () banked
  3929   000D52  5179               	movf	Welcome@i_811& (0+255),w,b
  3930   000D54  0FFE               	addlw	254
  3931   000D56  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3932   000D58  0E01               	movlw	1
  3933   000D5A  ECFF  F00C         	call	_Lcd_Set_Cursor
  3934   000D5E                     
  3935                           ;Welcome.c: 150:          Lcd_Write_Char(7);
  3936   000D5E  0E07               	movlw	7
  3937   000D60  EC03  F012         	call	_Lcd_Write_Char
  3938   000D64                     
  3939                           ;Welcome.c: 152:          _delay((unsigned long)((125)*(8000000UL/4000.0)));
  3940   000D64  0E02               	movlw	2
  3941   000D66  0100               	movlb	0	; () banked
  3942   000D68  6F74               	movwf	(??_Welcome+1)& (0+255),b
  3943   000D6A  0E45               	movlw	69
  3944   000D6C  6F73               	movwf	??_Welcome& (0+255),b
  3945   000D6E  0EA9               	movlw	169
  3946   000D70                     u3187:
  3947   000D70  2EE8               	decfsz	wreg,f,c
  3948   000D72  D7FE               	bra	u3187
  3949   000D74  2F73               	decfsz	??_Welcome& (0+255),f,b
  3950   000D76  D7FC               	bra	u3187
  3951   000D78  2F74               	decfsz	(??_Welcome+1)& (0+255),f,b
  3952   000D7A  D7FA               	bra	u3187
  3953   000D7C  D000               	nop2	
  3954   000D7E                     
  3955                           ;Welcome.c: 155:          Lcd_Set_Cursor(1,i);
  3956   000D7E  C079  F063         	movff	Welcome@i_811,Lcd_Set_Cursor@b
  3957   000D82  0E01               	movlw	1
  3958   000D84  ECFF  F00C         	call	_Lcd_Set_Cursor
  3959   000D88                     
  3960                           ;Welcome.c: 156:          Lcd_Write_String(" ");
  3961   000D88  0E34               	movlw	low (STR_18+15)
  3962   000D8A  0100               	movlb	0	; () banked
  3963   000D8C  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3964   000D8E  0E7F               	movlw	high (STR_18+15)
  3965   000D90  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3966   000D92  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3967                           
  3968                           ;Welcome.c: 157:          Lcd_Set_Cursor(1,i-2);
  3969   000D96  0100               	movlb	0	; () banked
  3970   000D98  5179               	movf	Welcome@i_811& (0+255),w,b
  3971   000D9A  0FFE               	addlw	254
  3972   000D9C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3973   000D9E  0E01               	movlw	1
  3974   000DA0  ECFF  F00C         	call	_Lcd_Set_Cursor
  3975   000DA4                     
  3976                           ;Welcome.c: 158:          Lcd_Write_String(" ");
  3977   000DA4  0E34               	movlw	low (STR_18+15)
  3978   000DA6  0100               	movlb	0	; () banked
  3979   000DA8  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3980   000DAA  0E7F               	movlw	high (STR_18+15)
  3981   000DAC  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3982   000DAE  EC4C  F010         	call	_Lcd_Write_String	;wreg free
  3983   000DB2                     
  3984                           ;Welcome.c: 159:       }
  3985   000DB2  0100               	movlb	0	; () banked
  3986   000DB4  2B79               	incf	Welcome@i_811& (0+255),f,b
  3987   000DB6                     
  3988                           ; BSR set to: 0
  3989   000DB6  0E13               	movlw	19
  3990   000DB8  6579               	cpfsgt	Welcome@i_811& (0+255),b
  3991   000DBA  EFE1  F006         	goto	u2341
  3992   000DBE  EFE3  F006         	goto	u2340
  3993   000DC2                     u2341:
  3994   000DC2  EF29  F006         	goto	l3345
  3995   000DC6                     u2340:
  3996   000DC6                     
  3997                           ; BSR set to: 0
  3998                           ;Welcome.c: 162:     Lcd_Clear();
  3999   000DC6  ECC8  F012         	call	_Lcd_Clear	;wreg free
  4000   000DCA  0012               	return		;funcret
  4001   000DCC                     __end_of_Welcome:
  4002                           	callstack 0
  4003                           
  4004 ;; *************** function _Lcd_Write_String *****************
  4005 ;; Defined at:
  4006 ;;		line 104 in file "lcd.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  a               2    4[BANK0 ] PTR const unsigned char 
  4009 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  4010 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(17), 
  4011 ;;		 -> STR_18(17), STR_17(17), STR_15(10), STR_14(10), 
  4012 ;;		 -> STR_13(2), STR_12(2), STR_11(15), STR_10(14), 
  4013 ;;		 -> STR_9(10), STR_8(7), re_pcs_str(20), counted_pcs_str(20), 
  4014 ;;		 -> main@countdown(20), num_str(10), STR_4(17), STR_3(11), 
  4015 ;;		 -> STR_2(16), STR_1(15), 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  i               2    8[BANK0 ] int 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4027 ;;      Params:         0       2       0       0       0       0       0       0       0
  4028 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4029 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4030 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4031 ;;Total ram usage:        6 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 9
  4034 ;; This function calls:
  4035 ;;		_Lcd_Write_Char
  4036 ;; This function is called by:
  4037 ;;		_main
  4038 ;;		_Welcome
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text12
  4043   002098                     __ptext12:
  4044                           	callstack 0
  4045   002098                     _Lcd_Write_String:
  4046                           	callstack 20
  4047   002098                     
  4048                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  4049   002098  0E00               	movlw	0
  4050   00209A  0100               	movlb	0	; () banked
  4051   00209C  6F69               	movwf	(Lcd_Write_String@i+1)& (0+255),b
  4052   00209E  0E00               	movlw	0
  4053   0020A0  6F68               	movwf	Lcd_Write_String@i& (0+255),b
  4054   0020A2  EF6F  F010         	goto	l3037
  4055   0020A6                     l3033:
  4056                           
  4057                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  4058   0020A6  0100               	movlb	0	; () banked
  4059   0020A8  5168               	movf	Lcd_Write_String@i& (0+255),w,b
  4060   0020AA  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
  4061   0020AC  6F66               	movwf	??_Lcd_Write_String& (0+255),b
  4062   0020AE  5169               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  4063   0020B0  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  4064   0020B2  6F67               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  4065   0020B4  C066  FFF6         	movff	??_Lcd_Write_String,tblptrl
  4066   0020B8  C067  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  4067   0020BC  6AF8               	clrf	tblptru,c
  4068   0020BE  0E07               	movlw	(high __ramtop+-1)
  4069   0020C0  64F7               	cpfsgt	tblptrh,c
  4070   0020C2  D003               	bra	u2177
  4071   0020C4  0008               	tblrd		*
  4072   0020C6  50F5               	movf	tablat,w,c
  4073   0020C8  D005               	bra	u2170
  4074   0020CA                     u2177:
  4075   0020CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4076   0020CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4077   0020D2  50E7               	movf	indf1,w,c
  4078   0020D4                     u2170:
  4079   0020D4  EC03  F012         	call	_Lcd_Write_Char
  4080   0020D8  0100               	movlb	0	; () banked
  4081   0020DA  4B68               	infsnz	Lcd_Write_String@i& (0+255),f,b
  4082   0020DC  2B69               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
  4083   0020DE                     l3037:
  4084                           
  4085                           ; BSR set to: 0
  4086   0020DE  5168               	movf	Lcd_Write_String@i& (0+255),w,b
  4087   0020E0  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
  4088   0020E2  6F66               	movwf	??_Lcd_Write_String& (0+255),b
  4089   0020E4  5169               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  4090   0020E6  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  4091   0020E8  6F67               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  4092   0020EA  C066  FFF6         	movff	??_Lcd_Write_String,tblptrl
  4093   0020EE  C067  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  4094   0020F2  6AF8               	clrf	tblptru,c
  4095   0020F4  0E07               	movlw	(high __ramtop+-1)
  4096   0020F6  64F7               	cpfsgt	tblptrh,c
  4097   0020F8  D003               	bra	u2187
  4098   0020FA  0008               	tblrd		*
  4099   0020FC  50F5               	movf	tablat,w,c
  4100   0020FE  D005               	bra	u2180
  4101   002100                     u2187:
  4102   002100  CFF6 FFE1          	movff	tblptrl,fsr1l
  4103   002104  CFF7 FFE2          	movff	tblptrh,fsr1h
  4104   002108  50E7               	movf	indf1,w,c
  4105   00210A                     u2180:
  4106   00210A  0900               	iorlw	0
  4107   00210C  A4D8               	btfss	status,2,c
  4108   00210E  EF8B  F010         	goto	u2191
  4109   002112  EF8D  F010         	goto	u2190
  4110   002116                     u2191:
  4111   002116  EF53  F010         	goto	l3033
  4112   00211A                     u2190:
  4113   00211A  0012               	return		;funcret
  4114   00211C                     __end_of_Lcd_Write_String:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function _Lcd_Shift_Right *****************
  4118 ;; Defined at:
  4119 ;;		line 111 in file "lcd.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;		None
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4133 ;;      Params:         0       0       0       0       0       0       0       0       0
  4134 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4136 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4137 ;;Total ram usage:        0 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 9
  4140 ;; This function calls:
  4141 ;;		_Lcd_Cmd
  4142 ;; This function is called by:
  4143 ;;		_Welcome
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text13
  4148   002574                     __ptext13:
  4149                           	callstack 0
  4150   002574                     _Lcd_Shift_Right:
  4151                           	callstack 20
  4152   002574                     
  4153                           ;lcd.c: 113:     Lcd_Cmd(0x01);
  4154   002574  0E01               	movlw	1
  4155   002576  EC87  F012         	call	_Lcd_Cmd
  4156                           
  4157                           ;lcd.c: 114:     Lcd_Cmd(0x0C);
  4158   00257A  0E0C               	movlw	12
  4159   00257C  EC87  F012         	call	_Lcd_Cmd
  4160   002580  0012               	return		;funcret
  4161   002582                     __end_of_Lcd_Shift_Right:
  4162                           	callstack 0
  4163                           
  4164 ;; *************** function _Lcd_Shift_Left *****************
  4165 ;; Defined at:
  4166 ;;		line 117 in file "lcd.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4183 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4184 ;;Total ram usage:        0 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; Hardware stack levels required when called: 9
  4187 ;; This function calls:
  4188 ;;		_Lcd_Cmd
  4189 ;; This function is called by:
  4190 ;;		_Welcome
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text14
  4195   002582                     __ptext14:
  4196                           	callstack 0
  4197   002582                     _Lcd_Shift_Left:
  4198                           	callstack 20
  4199   002582                     
  4200                           ;lcd.c: 119:     Lcd_Cmd(0x01);
  4201   002582  0E01               	movlw	1
  4202   002584  EC87  F012         	call	_Lcd_Cmd
  4203                           
  4204                           ;lcd.c: 120:     Lcd_Cmd(0x08);
  4205   002588  0E08               	movlw	8
  4206   00258A  EC87  F012         	call	_Lcd_Cmd
  4207   00258E  0012               	return		;funcret
  4208   002590                     __end_of_Lcd_Shift_Left:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function _Lcd_Set_Cursor *****************
  4212 ;; Defined at:
  4213 ;;		line 26 in file "lcd.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  a               1    wreg     unsigned char 
  4216 ;;  b               1    3[BANK0 ] unsigned char 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  a               1    4[BANK0 ] unsigned char 
  4219 ;;  temp            1    7[BANK0 ] unsigned char 
  4220 ;;  y               1    6[BANK0 ] unsigned char 
  4221 ;;  z               1    5[BANK0 ] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4231 ;;      Params:         0       1       0       0       0       0       0       0       0
  4232 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4234 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4235 ;;Total ram usage:        5 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 9
  4238 ;; This function calls:
  4239 ;;		_Lcd_Cmd
  4240 ;; This function is called by:
  4241 ;;		_main
  4242 ;;		_Welcome
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text15
  4247   0019FE                     __ptext15:
  4248                           	callstack 0
  4249   0019FE                     _Lcd_Set_Cursor:
  4250                           	callstack 20
  4251                           
  4252                           ;incstack = 0
  4253                           ;Lcd_Set_Cursor@a stored from wreg
  4254   0019FE  0100               	movlb	0	; () banked
  4255   001A00  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
  4256   001A02                     
  4257                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  4258   001A02  0100               	movlb	0	; () banked
  4259   001A04  0564               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  4260   001A06  A4D8               	btfss	status,2,c
  4261   001A08  EF08  F00D         	goto	u2131
  4262   001A0C  EF0A  F00D         	goto	u2130
  4263   001A10                     u2131:
  4264   001A10  EF1C  F00D         	goto	l3007
  4265   001A14                     u2130:
  4266   001A14                     
  4267                           ; BSR set to: 0
  4268                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  4269   001A14  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4270   001A16  0F7F               	addlw	127
  4271   001A18  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4272                           
  4273                           ;lcd.c: 32:         z = temp>>4;
  4274   001A1A  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4275   001A1C  0B0F               	andlw	15
  4276   001A1E  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4277                           
  4278                           ;lcd.c: 33:         y = temp & 0x0F;
  4279   001A20  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4280   001A22  0B0F               	andlw	15
  4281   001A24  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4282   001A26                     
  4283                           ; BSR set to: 0
  4284                           ;lcd.c: 34:         Lcd_Cmd(z);
  4285   001A26  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4286   001A28  EC87  F012         	call	_Lcd_Cmd
  4287   001A2C                     
  4288                           ;lcd.c: 35:         Lcd_Cmd(y);
  4289   001A2C  0100               	movlb	0	; () banked
  4290   001A2E  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4291   001A30  EC87  F012         	call	_Lcd_Cmd
  4292                           
  4293                           ;lcd.c: 36:     }
  4294   001A34  EF6D  F00D         	goto	l255
  4295   001A38                     l3007:
  4296                           
  4297                           ; BSR set to: 0
  4298   001A38  0E02               	movlw	2
  4299   001A3A  1964               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  4300   001A3C  A4D8               	btfss	status,2,c
  4301   001A3E  EF23  F00D         	goto	u2141
  4302   001A42  EF25  F00D         	goto	u2140
  4303   001A46                     u2141:
  4304   001A46  EF37  F00D         	goto	l3015
  4305   001A4A                     u2140:
  4306   001A4A                     
  4307                           ; BSR set to: 0
  4308                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  4309   001A4A  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4310   001A4C  0FBF               	addlw	191
  4311   001A4E  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4312                           
  4313                           ;lcd.c: 40:         z = temp>>4;
  4314   001A50  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4315   001A52  0B0F               	andlw	15
  4316   001A54  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4317                           
  4318                           ;lcd.c: 41:         y = temp & 0x0F;
  4319   001A56  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4320   001A58  0B0F               	andlw	15
  4321   001A5A  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4322   001A5C                     
  4323                           ; BSR set to: 0
  4324                           ;lcd.c: 42:         Lcd_Cmd(z);
  4325   001A5C  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4326   001A5E  EC87  F012         	call	_Lcd_Cmd
  4327   001A62                     
  4328                           ;lcd.c: 43:         Lcd_Cmd(y);
  4329   001A62  0100               	movlb	0	; () banked
  4330   001A64  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4331   001A66  EC87  F012         	call	_Lcd_Cmd
  4332                           
  4333                           ;lcd.c: 44:     }
  4334   001A6A  EF6D  F00D         	goto	l255
  4335   001A6E                     l3015:
  4336                           
  4337                           ; BSR set to: 0
  4338   001A6E  0E03               	movlw	3
  4339   001A70  1964               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  4340   001A72  A4D8               	btfss	status,2,c
  4341   001A74  EF3E  F00D         	goto	u2151
  4342   001A78  EF40  F00D         	goto	u2150
  4343   001A7C                     u2151:
  4344   001A7C  EF52  F00D         	goto	l3023
  4345   001A80                     u2150:
  4346   001A80                     
  4347                           ; BSR set to: 0
  4348                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  4349   001A80  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4350   001A82  0F93               	addlw	147
  4351   001A84  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4352                           
  4353                           ;lcd.c: 48:         z = temp>>4;
  4354   001A86  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4355   001A88  0B0F               	andlw	15
  4356   001A8A  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4357                           
  4358                           ;lcd.c: 49:         y = temp & 0x0F;
  4359   001A8C  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4360   001A8E  0B0F               	andlw	15
  4361   001A90  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4362   001A92                     
  4363                           ; BSR set to: 0
  4364                           ;lcd.c: 50:         Lcd_Cmd(z);
  4365   001A92  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4366   001A94  EC87  F012         	call	_Lcd_Cmd
  4367   001A98                     
  4368                           ;lcd.c: 51:         Lcd_Cmd(y);
  4369   001A98  0100               	movlb	0	; () banked
  4370   001A9A  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4371   001A9C  EC87  F012         	call	_Lcd_Cmd
  4372                           
  4373                           ;lcd.c: 52:     }
  4374   001AA0  EF6D  F00D         	goto	l255
  4375   001AA4                     l3023:
  4376                           
  4377                           ; BSR set to: 0
  4378   001AA4  0E04               	movlw	4
  4379   001AA6  1964               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  4380   001AA8  A4D8               	btfss	status,2,c
  4381   001AAA  EF59  F00D         	goto	u2161
  4382   001AAE  EF5B  F00D         	goto	u2160
  4383   001AB2                     u2161:
  4384   001AB2  EF6D  F00D         	goto	l251
  4385   001AB6                     u2160:
  4386   001AB6                     
  4387                           ; BSR set to: 0
  4388                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  4389   001AB6  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4390   001AB8  0FD3               	addlw	211
  4391   001ABA  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4392                           
  4393                           ;lcd.c: 56:         z = temp>>4;
  4394   001ABC  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4395   001ABE  0B0F               	andlw	15
  4396   001AC0  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4397                           
  4398                           ;lcd.c: 57:         y = temp & 0x0F;
  4399   001AC2  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4400   001AC4  0B0F               	andlw	15
  4401   001AC6  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4402   001AC8                     
  4403                           ; BSR set to: 0
  4404                           ;lcd.c: 58:         Lcd_Cmd(z);
  4405   001AC8  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4406   001ACA  EC87  F012         	call	_Lcd_Cmd
  4407   001ACE                     
  4408                           ;lcd.c: 59:         Lcd_Cmd(y);
  4409   001ACE  0100               	movlb	0	; () banked
  4410   001AD0  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4411   001AD2  EC87  F012         	call	_Lcd_Cmd
  4412   001AD6  EF6D  F00D         	goto	l255
  4413   001ADA                     l251:
  4414   001ADA                     l255:
  4415   001ADA  0012               	return		;funcret
  4416   001ADC                     __end_of_Lcd_Set_Cursor:
  4417                           	callstack 0
  4418                           
  4419 ;; *************** function _Lcd_Init *****************
  4420 ;; Defined at:
  4421 ;;		line 63 in file "lcd.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4435 ;;      Params:         0       0       0       0       0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4437 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4438 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4439 ;;Total ram usage:        1 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 10
  4442 ;; This function calls:
  4443 ;;		_Lcd_Clear
  4444 ;;		_Lcd_Cmd
  4445 ;;		_Lcd_Port
  4446 ;; This function is called by:
  4447 ;;		_main
  4448 ;;		_Welcome
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text16
  4453   002010                     __ptext16:
  4454                           	callstack 0
  4455   002010                     _Lcd_Init:
  4456                           	callstack 19
  4457   002010                     
  4458                           ;lcd.c: 65:  TRISAbits.TRISA4 = 0;
  4459   002010  9892               	bcf	146,4,c	;volatile
  4460                           
  4461                           ;lcd.c: 66:  TRISAbits.TRISA5 = 0;
  4462   002012  9A92               	bcf	146,5,c	;volatile
  4463                           
  4464                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  4465   002014  9895               	bcf	149,4,c	;volatile
  4466                           
  4467                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  4468   002016  9A95               	bcf	149,5,c	;volatile
  4469                           
  4470                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  4471   002018  9C95               	bcf	149,6,c	;volatile
  4472                           
  4473                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  4474   00201A  9E95               	bcf	149,7,c	;volatile
  4475   00201C                     
  4476                           ;lcd.c: 71:     Lcd_Port(0x00);
  4477   00201C  0E00               	movlw	0
  4478   00201E  ECFF  F010         	call	_Lcd_Port
  4479   002022                     
  4480                           ;lcd.c: 72:     _delay((unsigned long)((20)*(8000000UL/4000.0)));
  4481   002022  0E34               	movlw	52
  4482   002024  0100               	movlb	0	; () banked
  4483   002026  6F63               	movwf	??_Lcd_Init& (0+255),b
  4484   002028  0EF1               	movlw	241
  4485   00202A                     u3197:
  4486   00202A  2EE8               	decfsz	wreg,f,c
  4487   00202C  D7FE               	bra	u3197
  4488   00202E  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
  4489   002030  D7FC               	bra	u3197
  4490   002032  D000               	nop2	
  4491   002034                     
  4492                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  4493   002034  0E03               	movlw	3
  4494   002036  EC87  F012         	call	_Lcd_Cmd
  4495   00203A                     
  4496                           ;lcd.c: 74:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
  4497   00203A  0E0D               	movlw	13
  4498   00203C  0100               	movlb	0	; () banked
  4499   00203E  6F63               	movwf	??_Lcd_Init& (0+255),b
  4500   002040  0EFB               	movlw	251
  4501   002042                     u3207:
  4502   002042  2EE8               	decfsz	wreg,f,c
  4503   002044  D7FE               	bra	u3207
  4504   002046  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
  4505   002048  D7FC               	bra	u3207
  4506   00204A  D000               	nop2	
  4507   00204C                     
  4508                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  4509   00204C  0E03               	movlw	3
  4510   00204E  EC87  F012         	call	_Lcd_Cmd
  4511   002052                     
  4512                           ;lcd.c: 76:     _delay((unsigned long)((11)*(8000000UL/4000.0)));
  4513   002052  0E1D               	movlw	29
  4514   002054  0100               	movlb	0	; () banked
  4515   002056  6F63               	movwf	??_Lcd_Init& (0+255),b
  4516   002058  0E91               	movlw	145
  4517   00205A                     u3217:
  4518   00205A  2EE8               	decfsz	wreg,f,c
  4519   00205C  D7FE               	bra	u3217
  4520   00205E  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
  4521   002060  D7FC               	bra	u3217
  4522   002062                     
  4523                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  4524   002062  0E03               	movlw	3
  4525   002064  EC87  F012         	call	_Lcd_Cmd
  4526   002068                     
  4527                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  4528   002068  0E02               	movlw	2
  4529   00206A  EC87  F012         	call	_Lcd_Cmd
  4530   00206E                     
  4531                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  4532   00206E  0E02               	movlw	2
  4533   002070  EC87  F012         	call	_Lcd_Cmd
  4534   002074                     
  4535                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  4536   002074  0E08               	movlw	8
  4537   002076  EC87  F012         	call	_Lcd_Cmd
  4538   00207A                     
  4539                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  4540   00207A  0E00               	movlw	0
  4541   00207C  EC87  F012         	call	_Lcd_Cmd
  4542   002080                     
  4543                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  4544   002080  0E0C               	movlw	12
  4545   002082  EC87  F012         	call	_Lcd_Cmd
  4546   002086                     
  4547                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  4548   002086  0E00               	movlw	0
  4549   002088  EC87  F012         	call	_Lcd_Cmd
  4550   00208C                     
  4551                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  4552   00208C  0E06               	movlw	6
  4553   00208E  EC87  F012         	call	_Lcd_Cmd
  4554   002092                     
  4555                           ;lcd.c: 85:     Lcd_Clear();
  4556   002092  ECC8  F012         	call	_Lcd_Clear	;wreg free
  4557   002096  0012               	return		;funcret
  4558   002098                     __end_of_Lcd_Init:
  4559                           	callstack 0
  4560                           
  4561 ;; *************** function _Lcd_Clear *****************
  4562 ;; Defined at:
  4563 ;;		line 20 in file "lcd.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4580 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4581 ;;Total ram usage:        0 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 9
  4584 ;; This function calls:
  4585 ;;		_Lcd_Cmd
  4586 ;; This function is called by:
  4587 ;;		_main
  4588 ;;		_Lcd_Init
  4589 ;;		_Welcome
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text17
  4594   002590                     __ptext17:
  4595                           	callstack 0
  4596   002590                     _Lcd_Clear:
  4597                           	callstack 19
  4598   002590                     
  4599                           ;lcd.c: 22:     Lcd_Cmd(0);
  4600   002590  0E00               	movlw	0
  4601   002592  EC87  F012         	call	_Lcd_Cmd
  4602                           
  4603                           ;lcd.c: 23:     Lcd_Cmd(1);
  4604   002596  0E01               	movlw	1
  4605   002598  EC87  F012         	call	_Lcd_Cmd
  4606   00259C  0012               	return		;funcret
  4607   00259E                     __end_of_Lcd_Clear:
  4608                           	callstack 0
  4609                           
  4610 ;; *************** function _Lcd_CGRAM_Init *****************
  4611 ;; Defined at:
  4612 ;;		line 175 in file "lcd.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used: 1
  4632 ;; Hardware stack levels required when called: 9
  4633 ;; This function calls:
  4634 ;;		_Lcd_Cmd
  4635 ;; This function is called by:
  4636 ;;		_Welcome
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text18
  4641   00259E                     __ptext18:
  4642                           	callstack 0
  4643   00259E                     _Lcd_CGRAM_Init:
  4644                           	callstack 20
  4645   00259E                     
  4646                           ;lcd.c: 177:     Lcd_Cmd(0x04);
  4647   00259E  0E04               	movlw	4
  4648   0025A0  EC87  F012         	call	_Lcd_Cmd
  4649                           
  4650                           ;lcd.c: 178:     Lcd_Cmd(0x00);
  4651   0025A4  0E00               	movlw	0
  4652   0025A6  EC87  F012         	call	_Lcd_Cmd
  4653   0025AA  0012               	return		;funcret
  4654   0025AC                     __end_of_Lcd_CGRAM_Init:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  4658 ;; Defined at:
  4659 ;;		line 136 in file "lcd.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  add             1    wreg     unsigned char 
  4662 ;;  chardata        2    4[BANK0 ] PTR const unsigned char 
  4663 ;;		 -> figura_8(8), figura_7(8), figura_6(8), figura_5(8), 
  4664 ;;		 -> figura_4(8), figura_3(8), figura_2(8), figura_1(8), 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  add             1   10[BANK0 ] unsigned char 
  4667 ;;  i               1   18[BANK0 ] unsigned char 
  4668 ;;  i               1   17[BANK0 ] unsigned char 
  4669 ;;  i               1   16[BANK0 ] unsigned char 
  4670 ;;  i               1   15[BANK0 ] unsigned char 
  4671 ;;  i               1   14[BANK0 ] unsigned char 
  4672 ;;  i               1   13[BANK0 ] unsigned char 
  4673 ;;  i               1   12[BANK0 ] unsigned char 
  4674 ;;  i               1   11[BANK0 ] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4684 ;;      Params:         0       2       0       0       0       0       0       0       0
  4685 ;;      Locals:         0       9       0       0       0       0       0       0       0
  4686 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4687 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4688 ;;Total ram usage:       15 bytes
  4689 ;; Hardware stack levels used: 1
  4690 ;; Hardware stack levels required when called: 9
  4691 ;; This function calls:
  4692 ;;		_Lcd_Write_Char
  4693 ;; This function is called by:
  4694 ;;		_Welcome
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text19
  4699   00128E                     __ptext19:
  4700                           	callstack 0
  4701   00128E                     _Lcd_CGRAM_CreateChar:
  4702                           	callstack 20
  4703                           
  4704                           ;incstack = 0
  4705                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  4706   00128E  0100               	movlb	0	; () banked
  4707   001290  6F6A               	movwf	Lcd_CGRAM_CreateChar@add& (0+255),b
  4708   001292                     
  4709                           ;lcd.c: 136: void Lcd_CGRAM_CreateChar(char add, const char* chardata);lcd.c: 137: {;lcd
      +                          .c: 138:     switch(add)
  4710   001292  EF55  F00A         	goto	l3143
  4711   001296                     l3045:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;lcd.c: 141:             for(char i=0; i<=7; i++)
  4715   001296  0E00               	movlw	0
  4716   001298  6F6B               	movwf	Lcd_CGRAM_CreateChar@i& (0+255),b
  4717   00129A                     l3051:
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;lcd.c: 142:                 Lcd_Write_Char(chardata[i]);
  4721   00129A  516B               	movf	Lcd_CGRAM_CreateChar@i& (0+255),w,b
  4722   00129C  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4723   00129E  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4724   0012A0  0E00               	movlw	0
  4725   0012A2  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4726   0012A4  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4727   0012A6  C066  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  4728   0012AA  C067  FFF7         	movff	??_Lcd_CGRAM_CreateChar+1,tblptrh
  4729   0012AE                     	if	0	;tblptru may be non-zero
  4730   0012AE                     	endif
  4731   0012AE                     	if	0	;tblptru may be non-zero
  4732   0012AE                     	endif
  4733   0012AE  0008               	tblrd		*
  4734   0012B0  50F5               	movf	tablat,w,c
  4735   0012B2  EC03  F012         	call	_Lcd_Write_Char
  4736   0012B6  0100               	movlb	0	; () banked
  4737   0012B8  2B6B               	incf	Lcd_CGRAM_CreateChar@i& (0+255),f,b
  4738   0012BA                     
  4739                           ; BSR set to: 0
  4740   0012BA  0E07               	movlw	7
  4741   0012BC  656B               	cpfsgt	Lcd_CGRAM_CreateChar@i& (0+255),b
  4742   0012BE  EF63  F009         	goto	u2201
  4743   0012C2  EF65  F009         	goto	u2200
  4744   0012C6                     u2201:
  4745   0012C6  EF4D  F009         	goto	l3051
  4746   0012CA                     u2200:
  4747   0012CA  EF79  F00A         	goto	l308
  4748   0012CE                     l3057:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;lcd.c: 145:             for(char i=8; i<=15; i++)
  4752   0012CE  0E08               	movlw	8
  4753   0012D0  6F6C               	movwf	Lcd_CGRAM_CreateChar@i_765& (0+255),b
  4754   0012D2                     l3063:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;lcd.c: 146:                 Lcd_Write_Char(chardata[i-8]);
  4758   0012D2  516C               	movf	Lcd_CGRAM_CreateChar@i_765& (0+255),w,b
  4759   0012D4  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4760   0012D6  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4761   0012D8  0E00               	movlw	0
  4762   0012DA  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4763   0012DC  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4764   0012DE  0EF8               	movlw	248
  4765   0012E0  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4766   0012E2  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4767   0012E4  0EFF               	movlw	255
  4768   0012E6  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4769   0012E8  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4770   0012EA  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4771   0012EE  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4772   0012F2                     	if	0	;tblptru may be non-zero
  4773   0012F2                     	endif
  4774   0012F2                     	if	0	;tblptru may be non-zero
  4775   0012F2                     	endif
  4776   0012F2  0008               	tblrd		*
  4777   0012F4  50F5               	movf	tablat,w,c
  4778   0012F6  EC03  F012         	call	_Lcd_Write_Char
  4779   0012FA  0100               	movlb	0	; () banked
  4780   0012FC  2B6C               	incf	Lcd_CGRAM_CreateChar@i_765& (0+255),f,b
  4781   0012FE                     
  4782                           ; BSR set to: 0
  4783   0012FE  0E0F               	movlw	15
  4784   001300  656C               	cpfsgt	Lcd_CGRAM_CreateChar@i_765& (0+255),b
  4785   001302  EF85  F009         	goto	u2211
  4786   001306  EF87  F009         	goto	u2210
  4787   00130A                     u2211:
  4788   00130A  EF69  F009         	goto	l3063
  4789   00130E                     u2210:
  4790   00130E  EF79  F00A         	goto	l308
  4791   001312                     l3069:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;lcd.c: 149:             for(char i=16; i<=23; i++)
  4795   001312  0E10               	movlw	16
  4796   001314  6F6D               	movwf	Lcd_CGRAM_CreateChar@i_766& (0+255),b
  4797   001316                     l3075:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;lcd.c: 150:                 Lcd_Write_Char(chardata[i-16]);
  4801   001316  516D               	movf	Lcd_CGRAM_CreateChar@i_766& (0+255),w,b
  4802   001318  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4803   00131A  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4804   00131C  0E00               	movlw	0
  4805   00131E  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4806   001320  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4807   001322  0EF0               	movlw	240
  4808   001324  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4809   001326  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4810   001328  0EFF               	movlw	255
  4811   00132A  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4812   00132C  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4813   00132E  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4814   001332  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4815   001336                     	if	0	;tblptru may be non-zero
  4816   001336                     	endif
  4817   001336                     	if	0	;tblptru may be non-zero
  4818   001336                     	endif
  4819   001336  0008               	tblrd		*
  4820   001338  50F5               	movf	tablat,w,c
  4821   00133A  EC03  F012         	call	_Lcd_Write_Char
  4822   00133E  0100               	movlb	0	; () banked
  4823   001340  2B6D               	incf	Lcd_CGRAM_CreateChar@i_766& (0+255),f,b
  4824   001342                     
  4825                           ; BSR set to: 0
  4826   001342  0E17               	movlw	23
  4827   001344  656D               	cpfsgt	Lcd_CGRAM_CreateChar@i_766& (0+255),b
  4828   001346  EFA7  F009         	goto	u2221
  4829   00134A  EFA9  F009         	goto	u2220
  4830   00134E                     u2221:
  4831   00134E  EF8B  F009         	goto	l3075
  4832   001352                     u2220:
  4833   001352  EF79  F00A         	goto	l308
  4834   001356                     l3081:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;lcd.c: 153:             for(char i=24; i<=31; i++)
  4838   001356  0E18               	movlw	24
  4839   001358  6F6E               	movwf	Lcd_CGRAM_CreateChar@i_767& (0+255),b
  4840   00135A                     l3087:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;lcd.c: 154:                 Lcd_Write_Char(chardata[i-24]);
  4844   00135A  516E               	movf	Lcd_CGRAM_CreateChar@i_767& (0+255),w,b
  4845   00135C  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4846   00135E  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4847   001360  0E00               	movlw	0
  4848   001362  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4849   001364  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4850   001366  0EE8               	movlw	232
  4851   001368  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4852   00136A  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4853   00136C  0EFF               	movlw	255
  4854   00136E  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4855   001370  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4856   001372  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4857   001376  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4858   00137A                     	if	0	;tblptru may be non-zero
  4859   00137A                     	endif
  4860   00137A                     	if	0	;tblptru may be non-zero
  4861   00137A                     	endif
  4862   00137A  0008               	tblrd		*
  4863   00137C  50F5               	movf	tablat,w,c
  4864   00137E  EC03  F012         	call	_Lcd_Write_Char
  4865   001382  0100               	movlb	0	; () banked
  4866   001384  2B6E               	incf	Lcd_CGRAM_CreateChar@i_767& (0+255),f,b
  4867   001386                     
  4868                           ; BSR set to: 0
  4869   001386  0E1F               	movlw	31
  4870   001388  656E               	cpfsgt	Lcd_CGRAM_CreateChar@i_767& (0+255),b
  4871   00138A  EFC9  F009         	goto	u2231
  4872   00138E  EFCB  F009         	goto	u2230
  4873   001392                     u2231:
  4874   001392  EFAD  F009         	goto	l3087
  4875   001396                     u2230:
  4876   001396  EF79  F00A         	goto	l308
  4877   00139A                     l3093:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;lcd.c: 157:             for(char i=32; i<=39; i++)
  4881   00139A  0E20               	movlw	32
  4882   00139C  6F6F               	movwf	Lcd_CGRAM_CreateChar@i_768& (0+255),b
  4883   00139E                     l3099:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;lcd.c: 158:                 Lcd_Write_Char(chardata[i-32]);
  4887   00139E  516F               	movf	Lcd_CGRAM_CreateChar@i_768& (0+255),w,b
  4888   0013A0  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4889   0013A2  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4890   0013A4  0E00               	movlw	0
  4891   0013A6  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4892   0013A8  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4893   0013AA  0EE0               	movlw	224
  4894   0013AC  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4895   0013AE  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4896   0013B0  0EFF               	movlw	255
  4897   0013B2  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4898   0013B4  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4899   0013B6  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4900   0013BA  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4901   0013BE                     	if	0	;tblptru may be non-zero
  4902   0013BE                     	endif
  4903   0013BE                     	if	0	;tblptru may be non-zero
  4904   0013BE                     	endif
  4905   0013BE  0008               	tblrd		*
  4906   0013C0  50F5               	movf	tablat,w,c
  4907   0013C2  EC03  F012         	call	_Lcd_Write_Char
  4908   0013C6  0100               	movlb	0	; () banked
  4909   0013C8  2B6F               	incf	Lcd_CGRAM_CreateChar@i_768& (0+255),f,b
  4910   0013CA                     
  4911                           ; BSR set to: 0
  4912   0013CA  0E27               	movlw	39
  4913   0013CC  656F               	cpfsgt	Lcd_CGRAM_CreateChar@i_768& (0+255),b
  4914   0013CE  EFEB  F009         	goto	u2241
  4915   0013D2  EFED  F009         	goto	u2240
  4916   0013D6                     u2241:
  4917   0013D6  EFCF  F009         	goto	l3099
  4918   0013DA                     u2240:
  4919   0013DA  EF79  F00A         	goto	l308
  4920   0013DE                     l3105:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;lcd.c: 161:             for(char i=40; i<=47; i++)
  4924   0013DE  0E28               	movlw	40
  4925   0013E0  6F70               	movwf	Lcd_CGRAM_CreateChar@i_769& (0+255),b
  4926   0013E2                     l3111:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;lcd.c: 162:                 Lcd_Write_Char(chardata[i-40]);
  4930   0013E2  5170               	movf	Lcd_CGRAM_CreateChar@i_769& (0+255),w,b
  4931   0013E4  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4932   0013E6  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4933   0013E8  0E00               	movlw	0
  4934   0013EA  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4935   0013EC  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4936   0013EE  0ED8               	movlw	216
  4937   0013F0  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4938   0013F2  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4939   0013F4  0EFF               	movlw	255
  4940   0013F6  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4941   0013F8  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4942   0013FA  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4943   0013FE  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4944   001402                     	if	0	;tblptru may be non-zero
  4945   001402                     	endif
  4946   001402                     	if	0	;tblptru may be non-zero
  4947   001402                     	endif
  4948   001402  0008               	tblrd		*
  4949   001404  50F5               	movf	tablat,w,c
  4950   001406  EC03  F012         	call	_Lcd_Write_Char
  4951   00140A  0100               	movlb	0	; () banked
  4952   00140C  2B70               	incf	Lcd_CGRAM_CreateChar@i_769& (0+255),f,b
  4953   00140E                     
  4954                           ; BSR set to: 0
  4955   00140E  0E2F               	movlw	47
  4956   001410  6570               	cpfsgt	Lcd_CGRAM_CreateChar@i_769& (0+255),b
  4957   001412  EF0D  F00A         	goto	u2251
  4958   001416  EF0F  F00A         	goto	u2250
  4959   00141A                     u2251:
  4960   00141A  EFF1  F009         	goto	l3111
  4961   00141E                     u2250:
  4962   00141E  EF79  F00A         	goto	l308
  4963   001422                     l3117:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;lcd.c: 165:             for(char i=48; i<=55; i++)
  4967   001422  0E30               	movlw	48
  4968   001424  6F71               	movwf	Lcd_CGRAM_CreateChar@i_770& (0+255),b
  4969   001426                     l3123:
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;lcd.c: 166:                 Lcd_Write_Char(chardata[i-48]);
  4973   001426  5171               	movf	Lcd_CGRAM_CreateChar@i_770& (0+255),w,b
  4974   001428  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  4975   00142A  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  4976   00142C  0E00               	movlw	0
  4977   00142E  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  4978   001430  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  4979   001432  0ED0               	movlw	208
  4980   001434  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  4981   001436  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  4982   001438  0EFF               	movlw	255
  4983   00143A  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  4984   00143C  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  4985   00143E  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  4986   001442  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  4987   001446                     	if	0	;tblptru may be non-zero
  4988   001446                     	endif
  4989   001446                     	if	0	;tblptru may be non-zero
  4990   001446                     	endif
  4991   001446  0008               	tblrd		*
  4992   001448  50F5               	movf	tablat,w,c
  4993   00144A  EC03  F012         	call	_Lcd_Write_Char
  4994   00144E  0100               	movlb	0	; () banked
  4995   001450  2B71               	incf	Lcd_CGRAM_CreateChar@i_770& (0+255),f,b
  4996   001452                     
  4997                           ; BSR set to: 0
  4998   001452  0E37               	movlw	55
  4999   001454  6571               	cpfsgt	Lcd_CGRAM_CreateChar@i_770& (0+255),b
  5000   001456  EF2F  F00A         	goto	u2261
  5001   00145A  EF31  F00A         	goto	u2260
  5002   00145E                     u2261:
  5003   00145E  EF13  F00A         	goto	l3123
  5004   001462                     u2260:
  5005   001462  EF79  F00A         	goto	l308
  5006   001466                     l3129:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;lcd.c: 169:             for(char i=56; i<=63; i++)
  5010   001466  0E38               	movlw	56
  5011   001468  6F72               	movwf	Lcd_CGRAM_CreateChar@i_771& (0+255),b
  5012   00146A                     l3135:
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;lcd.c: 170:                 Lcd_Write_Char(chardata[i-56]);
  5016   00146A  5172               	movf	Lcd_CGRAM_CreateChar@i_771& (0+255),w,b
  5017   00146C  2564               	addwf	Lcd_CGRAM_CreateChar@chardata& (0+255),w,b
  5018   00146E  6F66               	movwf	??_Lcd_CGRAM_CreateChar& (0+255),b
  5019   001470  0E00               	movlw	0
  5020   001472  2165               	addwfc	(Lcd_CGRAM_CreateChar@chardata+1)& (0+255),w,b
  5021   001474  6F67               	movwf	(??_Lcd_CGRAM_CreateChar+1)& (0+255),b
  5022   001476  0EC8               	movlw	200
  5023   001478  2566               	addwf	??_Lcd_CGRAM_CreateChar& (0+255),w,b
  5024   00147A  6F68               	movwf	(??_Lcd_CGRAM_CreateChar+2)& (0+255),b
  5025   00147C  0EFF               	movlw	255
  5026   00147E  2167               	addwfc	(??_Lcd_CGRAM_CreateChar+1)& (0+255),w,b
  5027   001480  6F69               	movwf	(??_Lcd_CGRAM_CreateChar+3)& (0+255),b
  5028   001482  C068  FFF6         	movff	??_Lcd_CGRAM_CreateChar+2,tblptrl
  5029   001486  C069  FFF7         	movff	??_Lcd_CGRAM_CreateChar+3,tblptrh
  5030   00148A                     	if	0	;tblptru may be non-zero
  5031   00148A                     	endif
  5032   00148A                     	if	0	;tblptru may be non-zero
  5033   00148A                     	endif
  5034   00148A  0008               	tblrd		*
  5035   00148C  50F5               	movf	tablat,w,c
  5036   00148E  EC03  F012         	call	_Lcd_Write_Char
  5037   001492  0100               	movlb	0	; () banked
  5038   001494  2B72               	incf	Lcd_CGRAM_CreateChar@i_771& (0+255),f,b
  5039   001496                     
  5040                           ; BSR set to: 0
  5041   001496  0E3F               	movlw	63
  5042   001498  6572               	cpfsgt	Lcd_CGRAM_CreateChar@i_771& (0+255),b
  5043   00149A  EF51  F00A         	goto	u2271
  5044   00149E  EF53  F00A         	goto	u2270
  5045   0014A2                     u2271:
  5046   0014A2  EF35  F00A         	goto	l3135
  5047   0014A6                     u2270:
  5048   0014A6  EF79  F00A         	goto	l308
  5049   0014AA                     l3143:
  5050   0014AA  0100               	movlb	0	; () banked
  5051   0014AC  516A               	movf	Lcd_CGRAM_CreateChar@add& (0+255),w,b
  5052                           
  5053                           ; Switch size 1, requested type "simple"
  5054                           ; Number of cases is 8, Range of values is 0 to 7
  5055                           ; switch strategies available:
  5056                           ; Name         Instructions Cycles
  5057                           ; simple_byte           25    13 (average)
  5058                           ;	Chosen strategy is simple_byte
  5059   0014AE  0A00               	xorlw	0	; case 0
  5060   0014B0  B4D8               	btfsc	status,2,c
  5061   0014B2  EF4B  F009         	goto	l3045
  5062   0014B6  0A01               	xorlw	1	; case 1
  5063   0014B8  B4D8               	btfsc	status,2,c
  5064   0014BA  EF67  F009         	goto	l3057
  5065   0014BE  0A03               	xorlw	3	; case 2
  5066   0014C0  B4D8               	btfsc	status,2,c
  5067   0014C2  EF89  F009         	goto	l3069
  5068   0014C6  0A01               	xorlw	1	; case 3
  5069   0014C8  B4D8               	btfsc	status,2,c
  5070   0014CA  EFAB  F009         	goto	l3081
  5071   0014CE  0A07               	xorlw	7	; case 4
  5072   0014D0  B4D8               	btfsc	status,2,c
  5073   0014D2  EFCD  F009         	goto	l3093
  5074   0014D6  0A01               	xorlw	1	; case 5
  5075   0014D8  B4D8               	btfsc	status,2,c
  5076   0014DA  EFEF  F009         	goto	l3105
  5077   0014DE  0A03               	xorlw	3	; case 6
  5078   0014E0  B4D8               	btfsc	status,2,c
  5079   0014E2  EF11  F00A         	goto	l3117
  5080   0014E6  0A01               	xorlw	1	; case 7
  5081   0014E8  B4D8               	btfsc	status,2,c
  5082   0014EA  EF33  F00A         	goto	l3129
  5083   0014EE  EF79  F00A         	goto	l308
  5084   0014F2                     l308:
  5085                           
  5086                           ; BSR set to: 0
  5087   0014F2  0012               	return		;funcret
  5088   0014F4                     __end_of_Lcd_CGRAM_CreateChar:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _Lcd_Write_Char *****************
  5092 ;; Defined at:
  5093 ;;		line 88 in file "lcd.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  a               1    wreg     unsigned char 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  a               1    3[BANK0 ] unsigned char 
  5098 ;;  y               1    2[BANK0 ] unsigned char 
  5099 ;;  temp            1    1[BANK0 ] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		wreg, status,2, status,0, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0
  5110 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5112 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5113 ;;Total ram usage:        3 bytes
  5114 ;; Hardware stack levels used: 1
  5115 ;; Hardware stack levels required when called: 8
  5116 ;; This function calls:
  5117 ;;		_Lcd_Port
  5118 ;; This function is called by:
  5119 ;;		_Lcd_Write_String
  5120 ;;		_Lcd_CGRAM_CreateChar
  5121 ;;		_Welcome
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text20
  5126   002406                     __ptext20:
  5127                           	callstack 0
  5128   002406                     _Lcd_Write_Char:
  5129                           	callstack 20
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;incstack = 0
  5133                           ;Lcd_Write_Char@a stored from wreg
  5134   002406  0100               	movlb	0	; () banked
  5135   002408  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
  5136   00240A                     
  5137                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  5138   00240A  0100               	movlb	0	; () banked
  5139   00240C  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
  5140   00240E  0B0F               	andlw	15
  5141   002410  6F61               	movwf	Lcd_Write_Char@temp& (0+255),b
  5142                           
  5143                           ;lcd.c: 92:     y = a&0xF0;
  5144   002412  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
  5145   002414  0BF0               	andlw	240
  5146   002416  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
  5147   002418                     
  5148                           ; BSR set to: 0
  5149                           ;lcd.c: 93:     LATAbits.LA4 = 1;
  5150   002418  8889               	bsf	137,4,c	;volatile
  5151   00241A                     
  5152                           ; BSR set to: 0
  5153                           ;lcd.c: 94:     Lcd_Port(y>>4);
  5154   00241A  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
  5155   00241C  0B0F               	andlw	15
  5156   00241E  ECFF  F010         	call	_Lcd_Port
  5157   002422                     
  5158                           ;lcd.c: 95:     LATAbits.LA5 = 1;
  5159   002422  8A89               	bsf	137,5,c	;volatile
  5160   002424                     
  5161                           ;lcd.c: 96:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  5162   002424  0E1A               	movlw	26
  5163   002426                     u3227:
  5164   002426  2EE8               	decfsz	wreg,f,c
  5165   002428  D7FE               	bra	u3227
  5166   00242A  D000               	nop2	
  5167   00242C                     
  5168                           ;lcd.c: 97:     LATAbits.LA5 = 0;
  5169   00242C  9A89               	bcf	137,5,c	;volatile
  5170   00242E                     
  5171                           ;lcd.c: 98:     Lcd_Port(temp);
  5172   00242E  0100               	movlb	0	; () banked
  5173   002430  5161               	movf	Lcd_Write_Char@temp& (0+255),w,b
  5174   002432  ECFF  F010         	call	_Lcd_Port
  5175   002436                     
  5176                           ;lcd.c: 99:     LATAbits.LA5 = 1;
  5177   002436  8A89               	bsf	137,5,c	;volatile
  5178   002438                     
  5179                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  5180   002438  0E1A               	movlw	26
  5181   00243A                     u3237:
  5182   00243A  2EE8               	decfsz	wreg,f,c
  5183   00243C  D7FE               	bra	u3237
  5184   00243E  D000               	nop2	
  5185   002440                     
  5186                           ;lcd.c: 101:     LATAbits.LA5 = 0;
  5187   002440  9A89               	bcf	137,5,c	;volatile
  5188   002442  0012               	return		;funcret
  5189   002444                     __end_of_Lcd_Write_Char:
  5190                           	callstack 0
  5191                           
  5192 ;; *************** function _Lcd_CGRAM_Close *****************
  5193 ;; Defined at:
  5194 ;;		line 181 in file "lcd.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5211 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5212 ;;Total ram usage:        0 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 9
  5215 ;; This function calls:
  5216 ;;		_Lcd_Cmd
  5217 ;; This function is called by:
  5218 ;;		_Welcome
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text21
  5223   0025AC                     __ptext21:
  5224                           	callstack 0
  5225   0025AC                     _Lcd_CGRAM_Close:
  5226                           	callstack 20
  5227   0025AC                     
  5228                           ;lcd.c: 183:     Lcd_Cmd(0x00);
  5229   0025AC  0E00               	movlw	0
  5230   0025AE  EC87  F012         	call	_Lcd_Cmd
  5231                           
  5232                           ;lcd.c: 184:     Lcd_Cmd(0x02);
  5233   0025B2  0E02               	movlw	2
  5234   0025B4  EC87  F012         	call	_Lcd_Cmd
  5235   0025B8  0012               	return		;funcret
  5236   0025BA                     __end_of_Lcd_CGRAM_Close:
  5237                           	callstack 0
  5238                           
  5239 ;; *************** function _RGB_BCD *****************
  5240 ;; Defined at:
  5241 ;;		line 29 in file "RGB_BCD.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  count_En        2    0[BANK0 ] int 
  5244 ;;  contador        1    2[BANK0 ] PTR int 
  5245 ;;		 -> contador(2), 
  5246 ;;  contador_dec    1    3[BANK0 ] PTR int 
  5247 ;;		 -> contador_dec(2), 
  5248 ;;  re_pcs          1    4[BANK0 ] PTR int 
  5249 ;;		 -> re_pcs(2), 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5261 ;;      Params:         0       5       0       0       0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5263 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5264 ;;      Totals:         0       7       0       0       0       0       0       0       0
  5265 ;;Total ram usage:        7 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; Hardware stack levels required when called: 7
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_main
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text22
  5276   0018C0                     __ptext22:
  5277                           	callstack 0
  5278   0018C0                     _RGB_BCD:
  5279                           	callstack 23
  5280   0018C0                     
  5281                           ;RGB_BCD.c: 29: void RGB_BCD(int count_En,int *contador, int *contador_dec, int*re_pcs )
      +                          ;RGB_BCD.c: 30: {;RGB_BCD.c: 33:     LATD = (*contador);
  5282   0018C0  0100               	movlb	0	; () banked
  5283   0018C2  5162               	movf	RGB_BCD@contador& (0+255),w,b
  5284   0018C4  6ED9               	movwf	fsr2l,c
  5285   0018C6  6ADA               	clrf	fsr2h,c
  5286   0018C8  50DF               	movf	indf2,w,c
  5287   0018CA  6E8C               	movwf	140,c	;volatile
  5288   0018CC                     
  5289                           ; BSR set to: 0
  5290                           ;RGB_BCD.c: 35:     if(PORTCbits.RC1 == 1 && count_En==1 )
  5291   0018CC  A282               	btfss	130,1,c	;volatile
  5292   0018CE  EF6B  F00C         	goto	u2351
  5293   0018D2  EF6D  F00C         	goto	u2350
  5294   0018D6                     u2351:
  5295   0018D6  EFFE  F00C         	goto	l409
  5296   0018DA                     u2350:
  5297   0018DA                     
  5298                           ; BSR set to: 0
  5299   0018DA  0560               	decf	RGB_BCD@count_En& (0+255),w,b
  5300   0018DC  1161               	iorwf	(RGB_BCD@count_En+1)& (0+255),w,b
  5301   0018DE  A4D8               	btfss	status,2,c
  5302   0018E0  EF74  F00C         	goto	u2361
  5303   0018E4  EF76  F00C         	goto	u2360
  5304   0018E8                     u2361:
  5305   0018E8  EFFE  F00C         	goto	l409
  5306   0018EC                     u2360:
  5307   0018EC  EF81  F00C         	goto	l3421
  5308   0018F0                     l3419:
  5309                           
  5310                           ;RGB_BCD.c: 38:               {;RGB_BCD.c: 39:                 _delay((unsigned long)((1
      +                          0)*(8000000UL/4000.0)));
  5311   0018F0  0E1A               	movlw	26
  5312   0018F2  0100               	movlb	0	; () banked
  5313   0018F4  6F65               	movwf	??_RGB_BCD& (0+255),b
  5314   0018F6  0EF8               	movlw	248
  5315   0018F8                     u3247:
  5316   0018F8  2EE8               	decfsz	wreg,f,c
  5317   0018FA  D7FE               	bra	u3247
  5318   0018FC  2F65               	decfsz	??_RGB_BCD& (0+255),f,b
  5319   0018FE  D7FC               	bra	u3247
  5320   001900  0000               	nop	
  5321   001902                     l3421:
  5322                           
  5323                           ;RGB_BCD.c: 37:             while(PORTCbits.RC1 == 1)
  5324   001902  B282               	btfsc	130,1,c	;volatile
  5325   001904  EF86  F00C         	goto	u2371
  5326   001908  EF88  F00C         	goto	u2370
  5327   00190C                     u2371:
  5328   00190C  EF78  F00C         	goto	l3419
  5329   001910                     u2370:
  5330   001910                     
  5331                           ;RGB_BCD.c: 41:             (*contador)++;
  5332   001910  0100               	movlb	0	; () banked
  5333   001912  5162               	movf	RGB_BCD@contador& (0+255),w,b
  5334   001914  6ED9               	movwf	fsr2l,c
  5335   001916  6ADA               	clrf	fsr2h,c
  5336   001918  2ADE               	incf	postinc2,f,c
  5337   00191A  0E00               	movlw	0
  5338   00191C  22DD               	addwfc	postdec2,f,c
  5339                           
  5340                           ;RGB_BCD.c: 42:             (*re_pcs)--;
  5341   00191E  5164               	movf	RGB_BCD@re_pcs& (0+255),w,b
  5342   001920  6ED9               	movwf	fsr2l,c
  5343   001922  6ADA               	clrf	fsr2h,c
  5344   001924  06DE               	decf	postinc2,f,c
  5345   001926  0E00               	movlw	0
  5346   001928  5ADD               	subwfb	postdec2,f,c
  5347                           
  5348                           ;RGB_BCD.c: 44:             if((*contador) > 9)
  5349   00192A  5162               	movf	RGB_BCD@contador& (0+255),w,b
  5350   00192C  6ED9               	movwf	fsr2l,c
  5351   00192E  6ADA               	clrf	fsr2h,c
  5352   001930  0E01               	movlw	1
  5353   001932  BEDB               	btfsc	plusw2,7,c
  5354   001934  EFA6  F00C         	goto	u2381
  5355   001938  0E01               	movlw	1
  5356   00193A  50DB               	movf	plusw2,w,c
  5357   00193C  E109               	bnz	u2380
  5358   00193E  0E0A               	movlw	10
  5359   001940  5CDE               	subwf	postinc2,w,c
  5360   001942  A0D8               	btfss	status,0,c
  5361   001944  EFA6  F00C         	goto	u2381
  5362   001948  EFA8  F00C         	goto	u2380
  5363   00194C                     u2381:
  5364   00194C  EFFE  F00C         	goto	l409
  5365   001950                     u2380:
  5366   001950                     
  5367                           ; BSR set to: 0
  5368                           ;RGB_BCD.c: 45:               {;RGB_BCD.c: 46:                 (*contador) = 0;
  5369   001950  5162               	movf	RGB_BCD@contador& (0+255),w,b
  5370   001952  6ED9               	movwf	fsr2l,c
  5371   001954  6ADA               	clrf	fsr2h,c
  5372   001956  6ADE               	clrf	postinc2,c
  5373   001958  6ADD               	clrf	postdec2,c
  5374   00195A                     
  5375                           ; BSR set to: 0
  5376                           ;RGB_BCD.c: 47:                 (*contador_dec)++;
  5377   00195A  5163               	movf	RGB_BCD@contador_dec& (0+255),w,b
  5378   00195C  6ED9               	movwf	fsr2l,c
  5379   00195E  6ADA               	clrf	fsr2h,c
  5380   001960  2ADE               	incf	postinc2,f,c
  5381   001962  0E00               	movlw	0
  5382   001964  22DD               	addwfc	postdec2,f,c
  5383                           
  5384                           ;RGB_BCD.c: 48:                 switch(*contador_dec)
  5385   001966  EFD1  F00C         	goto	l3447
  5386   00196A                     l3429:
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;RGB_BCD.c: 51:                     LATE=Negro;
  5390   00196A  0E07               	movlw	7
  5391   00196C  6E8D               	movwf	141,c	;volatile
  5392                           
  5393                           ;RGB_BCD.c: 52:                   break;
  5394   00196E  EFFE  F00C         	goto	l409
  5395   001972                     l3431:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;RGB_BCD.c: 55:                     LATE=magenta;
  5399   001972  0E02               	movlw	2
  5400   001974  6E8D               	movwf	141,c	;volatile
  5401                           
  5402                           ;RGB_BCD.c: 56:                   break;
  5403   001976  EFFE  F00C         	goto	l409
  5404   00197A                     l3433:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;RGB_BCD.c: 59:                     LATE=azul;
  5408   00197A  0E03               	movlw	3
  5409   00197C  6E8D               	movwf	141,c	;volatile
  5410                           
  5411                           ;RGB_BCD.c: 60:                   break;
  5412   00197E  EFFE  F00C         	goto	l409
  5413   001982                     l3435:
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;RGB_BCD.c: 63:                     LATE=cyan;
  5417   001982  0E01               	movlw	1
  5418   001984  6E8D               	movwf	141,c	;volatile
  5419                           
  5420                           ;RGB_BCD.c: 64:                   break;
  5421   001986  EFFE  F00C         	goto	l409
  5422   00198A                     l3437:
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;RGB_BCD.c: 67:                     LATE=verde;
  5426   00198A  0E05               	movlw	5
  5427   00198C  6E8D               	movwf	141,c	;volatile
  5428                           
  5429                           ;RGB_BCD.c: 68:                   break;
  5430   00198E  EFFE  F00C         	goto	l409
  5431   001992                     l3439:
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;RGB_BCD.c: 71:                     LATE=amarillo;
  5435   001992  0E04               	movlw	4
  5436   001994  6E8D               	movwf	141,c	;volatile
  5437                           
  5438                           ;RGB_BCD.c: 72:                   break;
  5439   001996  EFFE  F00C         	goto	l409
  5440   00199A                     l3441:
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;RGB_BCD.c: 75:                     LATE=blanco;
  5444   00199A  0E00               	movlw	0
  5445   00199C  6E8D               	movwf	141,c	;volatile
  5446                           
  5447                           ;RGB_BCD.c: 76:                   break;
  5448   00199E  EFFE  F00C         	goto	l409
  5449   0019A2                     l3447:
  5450                           
  5451                           ; BSR set to: 0
  5452   0019A2  5163               	movf	RGB_BCD@contador_dec& (0+255),w,b
  5453   0019A4  6ED9               	movwf	fsr2l,c
  5454   0019A6  6ADA               	clrf	fsr2h,c
  5455   0019A8  CFDE F065          	movff	postinc2,??_RGB_BCD
  5456   0019AC  CFDD F066          	movff	postdec2,??_RGB_BCD+1
  5457                           
  5458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5459                           ; Switch size 1, requested type "simple"
  5460                           ; Number of cases is 1, Range of values is 0 to 0
  5461                           ; switch strategies available:
  5462                           ; Name         Instructions Cycles
  5463                           ; simple_byte            4     3 (average)
  5464                           ;	Chosen strategy is simple_byte
  5465   0019B0  5166               	movf	(??_RGB_BCD+1)& (0+255),w,b
  5466   0019B2  0A00               	xorlw	0	; case 0
  5467   0019B4  B4D8               	btfsc	status,2,c
  5468   0019B6  EFDF  F00C         	goto	l4043
  5469   0019BA  EFB5  F00C         	goto	l3429
  5470   0019BE                     l4043:
  5471                           
  5472                           ; BSR set to: 0
  5473                           ; Switch size 1, requested type "simple"
  5474                           ; Number of cases is 7, Range of values is 0 to 6
  5475                           ; switch strategies available:
  5476                           ; Name         Instructions Cycles
  5477                           ; simple_byte           22    12 (average)
  5478                           ;	Chosen strategy is simple_byte
  5479   0019BE  5165               	movf	??_RGB_BCD& (0+255),w,b
  5480   0019C0  0A00               	xorlw	0	; case 0
  5481   0019C2  B4D8               	btfsc	status,2,c
  5482   0019C4  EFB5  F00C         	goto	l3429
  5483   0019C8  0A01               	xorlw	1	; case 1
  5484   0019CA  B4D8               	btfsc	status,2,c
  5485   0019CC  EFB9  F00C         	goto	l3431
  5486   0019D0  0A03               	xorlw	3	; case 2
  5487   0019D2  B4D8               	btfsc	status,2,c
  5488   0019D4  EFBD  F00C         	goto	l3433
  5489   0019D8  0A01               	xorlw	1	; case 3
  5490   0019DA  B4D8               	btfsc	status,2,c
  5491   0019DC  EFC1  F00C         	goto	l3435
  5492   0019E0  0A07               	xorlw	7	; case 4
  5493   0019E2  B4D8               	btfsc	status,2,c
  5494   0019E4  EFC5  F00C         	goto	l3437
  5495   0019E8  0A01               	xorlw	1	; case 5
  5496   0019EA  B4D8               	btfsc	status,2,c
  5497   0019EC  EFC9  F00C         	goto	l3439
  5498   0019F0  0A03               	xorlw	3	; case 6
  5499   0019F2  B4D8               	btfsc	status,2,c
  5500   0019F4  EFCD  F00C         	goto	l3441
  5501   0019F8  EFB5  F00C         	goto	l3429
  5502   0019FC                     l409:
  5503                           
  5504                           ; BSR set to: 0
  5505   0019FC  0012               	return		;funcret
  5506   0019FE                     __end_of_RGB_BCD:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function _Lcd_NoBlink *****************
  5510 ;; Defined at:
  5511 ;;		line 129 in file "lcd.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5528 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 9
  5532 ;; This function calls:
  5533 ;;		_Lcd_Cmd
  5534 ;; This function is called by:
  5535 ;;		_main
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text23
  5540   0025BA                     __ptext23:
  5541                           	callstack 0
  5542   0025BA                     _Lcd_NoBlink:
  5543                           	callstack 21
  5544   0025BA                     
  5545                           ;lcd.c: 131:     Lcd_Cmd(0x00);
  5546   0025BA  0E00               	movlw	0
  5547   0025BC  EC87  F012         	call	_Lcd_Cmd
  5548                           
  5549                           ;lcd.c: 132:     Lcd_Cmd(0x0C);
  5550   0025C0  0E0C               	movlw	12
  5551   0025C2  EC87  F012         	call	_Lcd_Cmd
  5552   0025C6  0012               	return		;funcret
  5553   0025C8                     __end_of_Lcd_NoBlink:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _Lcd_Blink *****************
  5557 ;; Defined at:
  5558 ;;		line 123 in file "lcd.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5572 ;;      Params:         0       0       0       0       0       0       0       0       0
  5573 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5575 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5576 ;;Total ram usage:        0 bytes
  5577 ;; Hardware stack levels used: 1
  5578 ;; Hardware stack levels required when called: 9
  5579 ;; This function calls:
  5580 ;;		_Lcd_Cmd
  5581 ;; This function is called by:
  5582 ;;		_main
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text24
  5587   0025C8                     __ptext24:
  5588                           	callstack 0
  5589   0025C8                     _Lcd_Blink:
  5590                           	callstack 21
  5591   0025C8                     
  5592                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  5593   0025C8  0E00               	movlw	0
  5594   0025CA  EC87  F012         	call	_Lcd_Cmd
  5595                           
  5596                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  5597   0025CE  0E0F               	movlw	15
  5598   0025D0  EC87  F012         	call	_Lcd_Cmd
  5599   0025D4  0012               	return		;funcret
  5600   0025D6                     __end_of_Lcd_Blink:
  5601                           	callstack 0
  5602                           
  5603 ;; *************** function _Lcd_Cmd *****************
  5604 ;; Defined at:
  5605 ;;		line 11 in file "lcd.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  a               1    wreg     unsigned char 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  a               1    2[BANK0 ] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, status,2, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0
  5620 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5621 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5622 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5623 ;;Total ram usage:        2 bytes
  5624 ;; Hardware stack levels used: 1
  5625 ;; Hardware stack levels required when called: 8
  5626 ;; This function calls:
  5627 ;;		_Lcd_Port
  5628 ;; This function is called by:
  5629 ;;		_Lcd_Clear
  5630 ;;		_Lcd_Set_Cursor
  5631 ;;		_Lcd_Init
  5632 ;;		_Lcd_Shift_Right
  5633 ;;		_Lcd_Shift_Left
  5634 ;;		_Lcd_Blink
  5635 ;;		_Lcd_NoBlink
  5636 ;;		_Lcd_CGRAM_Init
  5637 ;;		_Lcd_CGRAM_Close
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text25
  5642   00250E                     __ptext25:
  5643                           	callstack 0
  5644   00250E                     _Lcd_Cmd:
  5645                           	callstack 20
  5646                           
  5647                           ;incstack = 0
  5648                           ;Lcd_Cmd@a stored from wreg
  5649   00250E  0100               	movlb	0	; () banked
  5650   002510  6F62               	movwf	Lcd_Cmd@a& (0+255),b
  5651   002512                     
  5652                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATAbits.LA4 = 0;
  5653   002512  9889               	bcf	137,4,c	;volatile
  5654   002514                     
  5655                           ;lcd.c: 14:     Lcd_Port(a);
  5656   002514  0100               	movlb	0	; () banked
  5657   002516  5162               	movf	Lcd_Cmd@a& (0+255),w,b
  5658   002518  ECFF  F010         	call	_Lcd_Port
  5659   00251C                     
  5660                           ;lcd.c: 15:     LATAbits.LA5 = 1;
  5661   00251C  8A89               	bsf	137,5,c	;volatile
  5662   00251E                     
  5663                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  5664   00251E  0E0B               	movlw	11
  5665   002520  0100               	movlb	0	; () banked
  5666   002522  6F61               	movwf	??_Lcd_Cmd& (0+255),b
  5667   002524  0E62               	movlw	98
  5668   002526                     u3257:
  5669   002526  2EE8               	decfsz	wreg,f,c
  5670   002528  D7FE               	bra	u3257
  5671   00252A  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
  5672   00252C  D7FC               	bra	u3257
  5673   00252E  0000               	nop	
  5674   002530                     
  5675                           ;lcd.c: 17:     LATAbits.LA5 = 0;
  5676   002530  9A89               	bcf	137,5,c	;volatile
  5677   002532  0012               	return		;funcret
  5678   002534                     __end_of_Lcd_Cmd:
  5679                           	callstack 0
  5680                           
  5681 ;; *************** function _Lcd_Port *****************
  5682 ;; Defined at:
  5683 ;;		line 3 in file "lcd.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  a               1    wreg     unsigned char 
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  a               1    0[BANK0 ] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5697 ;;      Params:         0       0       0       0       0       0       0       0       0
  5698 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5700 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5701 ;;Total ram usage:        1 bytes
  5702 ;; Hardware stack levels used: 1
  5703 ;; Hardware stack levels required when called: 7
  5704 ;; This function calls:
  5705 ;;		Nothing
  5706 ;; This function is called by:
  5707 ;;		_Lcd_Cmd
  5708 ;;		_Lcd_Init
  5709 ;;		_Lcd_Write_Char
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text26
  5714   0021FE                     __ptext26:
  5715                           	callstack 0
  5716   0021FE                     _Lcd_Port:
  5717                           	callstack 20
  5718                           
  5719                           ;incstack = 0
  5720                           ;Lcd_Port@a stored from wreg
  5721   0021FE  0100               	movlb	0	; () banked
  5722   002200  6F60               	movwf	Lcd_Port@a& (0+255),b
  5723   002202                     
  5724                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  5725   002202  0100               	movlb	0	; () banked
  5726   002204  A160               	btfss	Lcd_Port@a& (0+255),0,b
  5727   002206  EF07  F011         	goto	u1511
  5728   00220A  EF09  F011         	goto	u1510
  5729   00220E                     u1511:
  5730   00220E  EF0C  F011         	goto	l224
  5731   002212                     u1510:
  5732   002212                     
  5733                           ; BSR set to: 0
  5734   002212  888C               	bsf	140,4,c	;volatile
  5735   002214  EF0D  F011         	goto	l2611
  5736   002218                     l224:
  5737                           
  5738                           ; BSR set to: 0
  5739   002218  988C               	bcf	140,4,c	;volatile
  5740   00221A                     l2611:
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  5744   00221A  A360               	btfss	Lcd_Port@a& (0+255),1,b
  5745   00221C  EF12  F011         	goto	u1521
  5746   002220  EF14  F011         	goto	u1520
  5747   002224                     u1521:
  5748   002224  EF17  F011         	goto	l228
  5749   002228                     u1520:
  5750   002228                     
  5751                           ; BSR set to: 0
  5752   002228  8A8C               	bsf	140,5,c	;volatile
  5753   00222A  EF18  F011         	goto	l2615
  5754   00222E                     l228:
  5755                           
  5756                           ; BSR set to: 0
  5757   00222E  9A8C               	bcf	140,5,c	;volatile
  5758   002230                     l2615:
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  5762   002230  A560               	btfss	Lcd_Port@a& (0+255),2,b
  5763   002232  EF1D  F011         	goto	u1531
  5764   002236  EF1F  F011         	goto	u1530
  5765   00223A                     u1531:
  5766   00223A  EF22  F011         	goto	l232
  5767   00223E                     u1530:
  5768   00223E                     
  5769                           ; BSR set to: 0
  5770   00223E  8C8C               	bsf	140,6,c	;volatile
  5771   002240  EF23  F011         	goto	l2619
  5772   002244                     l232:
  5773                           
  5774                           ; BSR set to: 0
  5775   002244  9C8C               	bcf	140,6,c	;volatile
  5776   002246                     l2619:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  5780   002246  A760               	btfss	Lcd_Port@a& (0+255),3,b
  5781   002248  EF28  F011         	goto	u1541
  5782   00224C  EF2A  F011         	goto	u1540
  5783   002250                     u1541:
  5784   002250  EF2D  F011         	goto	l236
  5785   002254                     u1540:
  5786   002254                     
  5787                           ; BSR set to: 0
  5788   002254  8E8C               	bsf	140,7,c	;volatile
  5789   002256  EF2E  F011         	goto	l239
  5790   00225A                     l236:
  5791                           
  5792                           ; BSR set to: 0
  5793   00225A  9E8C               	bcf	140,7,c	;volatile
  5794   00225C                     l239:
  5795                           
  5796                           ; BSR set to: 0
  5797   00225C  0012               	return		;funcret
  5798   00225E                     __end_of_Lcd_Port:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function _LOW_PRIORITY *****************
  5802 ;; Defined at:
  5803 ;;		line 232 in file "LAB4.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5819 ;;      Temps:         13       0       0       0       0       0       0       0       0
  5820 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5821 ;;Total ram usage:       13 bytes
  5822 ;; Hardware stack levels used: 1
  5823 ;; Hardware stack levels required when called: 6
  5824 ;; This function calls:
  5825 ;;		i1_Lcd_Blink
  5826 ;;		i1_Lcd_Clear
  5827 ;;		i1_Lcd_Set_Cursor
  5828 ;;		i1_Lcd_Write_String
  5829 ;;		i1_sprintf
  5830 ;; This function is called by:
  5831 ;;		Interrupt level 1
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	intcodelo
  5836   000018                     __pintcodelo:
  5837                           	callstack 0
  5838   000018                     _LOW_PRIORITY:
  5839                           	callstack 19
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;incstack = 0
  5843   000018  804D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5844   00001A  CFD8 F034          	movff	status,??_LOW_PRIORITY+2
  5845   00001E  CFE8 F035          	movff	wreg,??_LOW_PRIORITY+3
  5846   000022  CFE0 F036          	movff	bsr,??_LOW_PRIORITY+4
  5847   000026  CFE1 F037          	movff	fsr1l,??_LOW_PRIORITY+5
  5848   00002A  CFE2 F038          	movff	fsr1h,??_LOW_PRIORITY+6
  5849   00002E  CFD9 F039          	movff	fsr2l,??_LOW_PRIORITY+7
  5850   000032  CFDA F03A          	movff	fsr2h,??_LOW_PRIORITY+8
  5851   000036  CFF6 F03B          	movff	tblptrl,??_LOW_PRIORITY+9
  5852   00003A  CFF7 F03C          	movff	tblptrh,??_LOW_PRIORITY+10
  5853   00003E  CFF8 F03D          	movff	tblptru,??_LOW_PRIORITY+11
  5854   000042  CFF5 F03E          	movff	tablat,??_LOW_PRIORITY+12
  5855   000046                     
  5856                           ;LAB4.c: 236:   if(INTCONbits.RBIF==1)
  5857   000046  A0F2               	btfss	242,0,c	;volatile
  5858   000048  EF28  F000         	goto	i1u256_21
  5859   00004C  EF2A  F000         	goto	i1u256_20
  5860   000050                     i1u256_21:
  5861   000050  EF66  F004         	goto	i1l207
  5862   000054                     i1u256_20:
  5863   000054                     
  5864                           ;LAB4.c: 237:     {;LAB4.c: 238:       if(PORTB != 0b11110000)
  5865   000054  0EF0               	movlw	240
  5866   000056  1881               	xorwf	129,w,c	;volatile
  5867   000058  B4D8               	btfsc	status,2,c
  5868   00005A  EF31  F000         	goto	i1u257_21
  5869   00005E  EF33  F000         	goto	i1u257_20
  5870   000062                     i1u257_21:
  5871   000062  EF41  F004         	goto	i1l3941
  5872   000066                     i1u257_20:
  5873   000066                     
  5874                           ;LAB4.c: 239:         {;LAB4.c: 240:         if(Borrado==1)
  5875   000066  0100               	movlb	0	; () banked
  5876   000068  05B8               	decf	_Borrado& (0+255),w,b
  5877   00006A  11B9               	iorwf	(_Borrado+1)& (0+255),w,b
  5878   00006C  A4D8               	btfss	status,2,c
  5879   00006E  EF3B  F000         	goto	i1u258_21
  5880   000072  EF3D  F000         	goto	i1u258_20
  5881   000076                     i1u258_21:
  5882   000076  EF45  F000         	goto	i1l137
  5883   00007A                     i1u258_20:
  5884   00007A                     
  5885                           ; BSR set to: 0
  5886                           ;LAB4.c: 241:         {;LAB4.c: 242:           Numpad_en=1;
  5887   00007A  0E00               	movlw	0
  5888   00007C  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  5889   00007E  0E01               	movlw	1
  5890   000080  6FBA               	movwf	_Numpad_en& (0+255),b
  5891                           
  5892                           ;LAB4.c: 243:           Borrado=0;
  5893   000082  0E00               	movlw	0
  5894   000084  6FB9               	movwf	(_Borrado+1)& (0+255),b
  5895   000086  0E00               	movlw	0
  5896   000088  6FB8               	movwf	_Borrado& (0+255),b
  5897   00008A                     i1l137:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;LAB4.c: 246:         Enter_en=0;
  5901   00008A  0E00               	movlw	0
  5902   00008C  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  5903   00008E  0E00               	movlw	0
  5904   000090  6FBC               	movwf	_Enter_en& (0+255),b
  5905                           
  5906                           ;LAB4.c: 247:         Tecla=0;
  5907   000092  0E00               	movlw	0
  5908   000094  6E4B               	movwf	_Tecla^0,c
  5909                           
  5910                           ;LAB4.c: 248:         LATB=0b11111110;
  5911   000096  0EFE               	movlw	254
  5912   000098  6E8A               	movwf	138,c	;volatile
  5913   00009A                     
  5914                           ; BSR set to: 0
  5915                           ;LAB4.c: 249:         if(PORTBbits.RB4==0) Tecla=1;
  5916   00009A  B881               	btfsc	129,4,c	;volatile
  5917   00009C  EF52  F000         	goto	i1u259_21
  5918   0000A0  EF54  F000         	goto	i1u259_20
  5919   0000A4                     i1u259_21:
  5920   0000A4  EF58  F000         	goto	i1l138
  5921   0000A8                     i1u259_20:
  5922   0000A8                     
  5923                           ; BSR set to: 0
  5924   0000A8  0E01               	movlw	1
  5925   0000AA  6E4B               	movwf	_Tecla^0,c
  5926   0000AC  EF03  F001         	goto	i1l3787
  5927   0000B0                     i1l138:
  5928                           
  5929                           ; BSR set to: 0
  5930   0000B0  BA81               	btfsc	129,5,c	;volatile
  5931   0000B2  EF5D  F000         	goto	i1u260_21
  5932   0000B6  EF5F  F000         	goto	i1u260_20
  5933   0000BA                     i1u260_21:
  5934   0000BA  EF63  F000         	goto	i1l140
  5935   0000BE                     i1u260_20:
  5936   0000BE                     
  5937                           ; BSR set to: 0
  5938   0000BE  0E02               	movlw	2
  5939   0000C0  6E4B               	movwf	_Tecla^0,c
  5940   0000C2  EF03  F001         	goto	i1l3787
  5941   0000C6                     i1l140:
  5942                           
  5943                           ; BSR set to: 0
  5944   0000C6  BC81               	btfsc	129,6,c	;volatile
  5945   0000C8  EF68  F000         	goto	i1u261_21
  5946   0000CC  EF6A  F000         	goto	i1u261_20
  5947   0000D0                     i1u261_21:
  5948   0000D0  EF6E  F000         	goto	i1l142
  5949   0000D4                     i1u261_20:
  5950   0000D4                     
  5951                           ; BSR set to: 0
  5952   0000D4  0E03               	movlw	3
  5953   0000D6  6E4B               	movwf	_Tecla^0,c
  5954   0000D8  EF03  F001         	goto	i1l3787
  5955   0000DC                     i1l142:
  5956                           
  5957                           ; BSR set to: 0
  5958   0000DC  BE81               	btfsc	129,7,c	;volatile
  5959   0000DE  EF73  F000         	goto	i1u262_21
  5960   0000E2  EF75  F000         	goto	i1u262_20
  5961   0000E6                     i1u262_21:
  5962   0000E6  EF79  F000         	goto	i1l3751
  5963   0000EA                     i1u262_20:
  5964   0000EA                     
  5965                           ; BSR set to: 0
  5966   0000EA  0E04               	movlw	4
  5967   0000EC  6E4B               	movwf	_Tecla^0,c
  5968   0000EE  EF03  F001         	goto	i1l3787
  5969   0000F2                     i1l3751:
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;LAB4.c: 254:           {;LAB4.c: 255:           LATB=0b11111101;
  5973   0000F2  0EFD               	movlw	253
  5974   0000F4  6E8A               	movwf	138,c	;volatile
  5975   0000F6                     
  5976                           ; BSR set to: 0
  5977                           ;LAB4.c: 256:           if(PORTBbits.RB4==0) Tecla=5;
  5978   0000F6  B881               	btfsc	129,4,c	;volatile
  5979   0000F8  EF80  F000         	goto	i1u263_21
  5980   0000FC  EF82  F000         	goto	i1u263_20
  5981   000100                     i1u263_21:
  5982   000100  EF86  F000         	goto	i1l146
  5983   000104                     i1u263_20:
  5984   000104                     
  5985                           ; BSR set to: 0
  5986   000104  0E05               	movlw	5
  5987   000106  6E4B               	movwf	_Tecla^0,c
  5988   000108  EF03  F001         	goto	i1l3787
  5989   00010C                     i1l146:
  5990                           
  5991                           ; BSR set to: 0
  5992   00010C  BA81               	btfsc	129,5,c	;volatile
  5993   00010E  EF8B  F000         	goto	i1u264_21
  5994   000112  EF8D  F000         	goto	i1u264_20
  5995   000116                     i1u264_21:
  5996   000116  EF91  F000         	goto	i1l148
  5997   00011A                     i1u264_20:
  5998   00011A                     
  5999                           ; BSR set to: 0
  6000   00011A  0E06               	movlw	6
  6001   00011C  6E4B               	movwf	_Tecla^0,c
  6002   00011E  EF03  F001         	goto	i1l3787
  6003   000122                     i1l148:
  6004                           
  6005                           ; BSR set to: 0
  6006   000122  BC81               	btfsc	129,6,c	;volatile
  6007   000124  EF96  F000         	goto	i1u265_21
  6008   000128  EF98  F000         	goto	i1u265_20
  6009   00012C                     i1u265_21:
  6010   00012C  EF9C  F000         	goto	i1l150
  6011   000130                     i1u265_20:
  6012   000130                     
  6013                           ; BSR set to: 0
  6014   000130  0E07               	movlw	7
  6015   000132  6E4B               	movwf	_Tecla^0,c
  6016   000134  EF03  F001         	goto	i1l3787
  6017   000138                     i1l150:
  6018                           
  6019                           ; BSR set to: 0
  6020   000138  BE81               	btfsc	129,7,c	;volatile
  6021   00013A  EFA1  F000         	goto	i1u266_21
  6022   00013E  EFA3  F000         	goto	i1u266_20
  6023   000142                     i1u266_21:
  6024   000142  EFA7  F000         	goto	i1l3763
  6025   000146                     i1u266_20:
  6026   000146                     
  6027                           ; BSR set to: 0
  6028   000146  0E08               	movlw	8
  6029   000148  6E4B               	movwf	_Tecla^0,c
  6030   00014A  EF03  F001         	goto	i1l3787
  6031   00014E                     i1l3763:
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;LAB4.c: 261:             {;LAB4.c: 262:             LATB=0b11111011;
  6035   00014E  0EFB               	movlw	251
  6036   000150  6E8A               	movwf	138,c	;volatile
  6037   000152                     
  6038                           ; BSR set to: 0
  6039                           ;LAB4.c: 263:             if(PORTBbits.RB4==0) Tecla=9;
  6040   000152  B881               	btfsc	129,4,c	;volatile
  6041   000154  EFAE  F000         	goto	i1u267_21
  6042   000158  EFB0  F000         	goto	i1u267_20
  6043   00015C                     i1u267_21:
  6044   00015C  EFB4  F000         	goto	i1l154
  6045   000160                     i1u267_20:
  6046   000160                     
  6047                           ; BSR set to: 0
  6048   000160  0E09               	movlw	9
  6049   000162  6E4B               	movwf	_Tecla^0,c
  6050   000164  EF03  F001         	goto	i1l3787
  6051   000168                     i1l154:
  6052                           
  6053                           ; BSR set to: 0
  6054   000168  BA81               	btfsc	129,5,c	;volatile
  6055   00016A  EFB9  F000         	goto	i1u268_21
  6056   00016E  EFBB  F000         	goto	i1u268_20
  6057   000172                     i1u268_21:
  6058   000172  EFBF  F000         	goto	i1l156
  6059   000176                     i1u268_20:
  6060   000176                     
  6061                           ; BSR set to: 0
  6062   000176  0E0A               	movlw	10
  6063   000178  6E4B               	movwf	_Tecla^0,c
  6064   00017A  EF03  F001         	goto	i1l3787
  6065   00017E                     i1l156:
  6066                           
  6067                           ; BSR set to: 0
  6068   00017E  BC81               	btfsc	129,6,c	;volatile
  6069   000180  EFC4  F000         	goto	i1u269_21
  6070   000184  EFC6  F000         	goto	i1u269_20
  6071   000188                     i1u269_21:
  6072   000188  EFCA  F000         	goto	i1l158
  6073   00018C                     i1u269_20:
  6074   00018C                     
  6075                           ; BSR set to: 0
  6076   00018C  0E0B               	movlw	11
  6077   00018E  6E4B               	movwf	_Tecla^0,c
  6078   000190  EF03  F001         	goto	i1l3787
  6079   000194                     i1l158:
  6080                           
  6081                           ; BSR set to: 0
  6082   000194  BE81               	btfsc	129,7,c	;volatile
  6083   000196  EFCF  F000         	goto	i1u270_21
  6084   00019A  EFD1  F000         	goto	i1u270_20
  6085   00019E                     i1u270_21:
  6086   00019E  EFD5  F000         	goto	i1l3775
  6087   0001A2                     i1u270_20:
  6088   0001A2                     
  6089                           ; BSR set to: 0
  6090   0001A2  0E0C               	movlw	12
  6091   0001A4  6E4B               	movwf	_Tecla^0,c
  6092   0001A6  EF03  F001         	goto	i1l3787
  6093   0001AA                     i1l3775:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;LAB4.c: 268:               {;LAB4.c: 269:                 LATB=0b11110111;
  6097   0001AA  0EF7               	movlw	247
  6098   0001AC  6E8A               	movwf	138,c	;volatile
  6099   0001AE                     
  6100                           ; BSR set to: 0
  6101                           ;LAB4.c: 270:                 if(PORTBbits.RB4==0) Tecla=13;
  6102   0001AE  B881               	btfsc	129,4,c	;volatile
  6103   0001B0  EFDC  F000         	goto	i1u271_21
  6104   0001B4  EFDE  F000         	goto	i1u271_20
  6105   0001B8                     i1u271_21:
  6106   0001B8  EFE2  F000         	goto	i1l162
  6107   0001BC                     i1u271_20:
  6108   0001BC                     
  6109                           ; BSR set to: 0
  6110   0001BC  0E0D               	movlw	13
  6111   0001BE  6E4B               	movwf	_Tecla^0,c
  6112   0001C0  EF03  F001         	goto	i1l3787
  6113   0001C4                     i1l162:
  6114                           
  6115                           ; BSR set to: 0
  6116   0001C4  BA81               	btfsc	129,5,c	;volatile
  6117   0001C6  EFE7  F000         	goto	i1u272_21
  6118   0001CA  EFE9  F000         	goto	i1u272_20
  6119   0001CE                     i1u272_21:
  6120   0001CE  EFED  F000         	goto	i1l164
  6121   0001D2                     i1u272_20:
  6122   0001D2                     
  6123                           ; BSR set to: 0
  6124   0001D2  0E0E               	movlw	14
  6125   0001D4  6E4B               	movwf	_Tecla^0,c
  6126   0001D6  EF03  F001         	goto	i1l3787
  6127   0001DA                     i1l164:
  6128                           
  6129                           ; BSR set to: 0
  6130   0001DA  BC81               	btfsc	129,6,c	;volatile
  6131   0001DC  EFF2  F000         	goto	i1u273_21
  6132   0001E0  EFF4  F000         	goto	i1u273_20
  6133   0001E4                     i1u273_21:
  6134   0001E4  EFF8  F000         	goto	i1l166
  6135   0001E8                     i1u273_20:
  6136   0001E8                     
  6137                           ; BSR set to: 0
  6138   0001E8  0E0F               	movlw	15
  6139   0001EA  6E4B               	movwf	_Tecla^0,c
  6140   0001EC  EF03  F001         	goto	i1l3787
  6141   0001F0                     i1l166:
  6142                           
  6143                           ; BSR set to: 0
  6144   0001F0  BE81               	btfsc	129,7,c	;volatile
  6145   0001F2  EFFD  F000         	goto	i1u274_21
  6146   0001F6  EFFF  F000         	goto	i1u274_20
  6147   0001FA                     i1u274_21:
  6148   0001FA  EF03  F001         	goto	i1l163
  6149   0001FE                     i1u274_20:
  6150   0001FE                     
  6151                           ; BSR set to: 0
  6152   0001FE  0E10               	movlw	16
  6153   000200  6E4B               	movwf	_Tecla^0,c
  6154   000202  EF03  F001         	goto	i1l3787
  6155   000206                     i1l163:
  6156   000206                     i1l3787:
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;LAB4.c: 278:         if (E_stop_En==0)
  6160   000206  5041               	movf	_E_stop_En^0,w,c
  6161   000208  1042               	iorwf	(_E_stop_En+1)^0,w,c
  6162   00020A  A4D8               	btfss	status,2,c
  6163   00020C  EF0A  F001         	goto	i1u275_21
  6164   000210  EF0C  F001         	goto	i1u275_20
  6165   000214                     i1u275_21:
  6166   000214  EFFC  F003         	goto	i1l3925
  6167   000218                     i1u275_20:
  6168   000218  EFB9  F003         	goto	i1l3923
  6169   00021C                     i1l3791:
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;LAB4.c: 284:                   if (Numpad_en==1)
  6173   00021C  05BA               	decf	_Numpad_en& (0+255),w,b
  6174   00021E  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6175   000220  A4D8               	btfss	status,2,c
  6176   000222  EF15  F001         	goto	i1u276_21
  6177   000226  EF17  F001         	goto	i1u276_20
  6178   00022A                     i1u276_21:
  6179   00022A  EFFC  F003         	goto	i1l3925
  6180   00022E                     i1u276_20:
  6181   00022E                     
  6182                           ; BSR set to: 0
  6183                           ;LAB4.c: 285:                     {;LAB4.c: 286:                     num=1;
  6184   00022E  0E00               	movlw	0
  6185   000230  6FE3               	movwf	(_num+1)& (0+255),b
  6186   000232  0E01               	movlw	1
  6187   000234  6FE2               	movwf	_num& (0+255),b
  6188                           
  6189                           ;LAB4.c: 287:                     Borrado=0;
  6190   000236  0E00               	movlw	0
  6191   000238  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6192   00023A  0E00               	movlw	0
  6193   00023C  6FB8               	movwf	_Borrado& (0+255),b
  6194                           
  6195                           ;LAB4.c: 288:                     back_l_En=0;
  6196   00023E  0E00               	movlw	0
  6197   000240  6E46               	movwf	(_back_l_En+1)^0,c
  6198   000242  0E00               	movlw	0
  6199   000244  6E45               	movwf	_back_l_En^0,c
  6200                           
  6201                           ;LAB4.c: 289:                     reset_En=0;
  6202   000246  0E00               	movlw	0
  6203   000248  6E44               	movwf	(_reset_En+1)^0,c
  6204   00024A  0E00               	movlw	0
  6205   00024C  6E43               	movwf	_reset_En^0,c
  6206                           
  6207                           ;LAB4.c: 290:                     E_stop_En=0;
  6208   00024E  0E00               	movlw	0
  6209   000250  6E42               	movwf	(_E_stop_En+1)^0,c
  6210   000252  0E00               	movlw	0
  6211   000254  6E41               	movwf	_E_stop_En^0,c
  6212   000256  EFFC  F003         	goto	i1l3925
  6213   00025A                     i1l3795:
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;LAB4.c: 294:                   if (Numpad_en==1)
  6217   00025A  05BA               	decf	_Numpad_en& (0+255),w,b
  6218   00025C  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6219   00025E  A4D8               	btfss	status,2,c
  6220   000260  EF34  F001         	goto	i1u277_21
  6221   000264  EF36  F001         	goto	i1u277_20
  6222   000268                     i1u277_21:
  6223   000268  EFFC  F003         	goto	i1l3925
  6224   00026C                     i1u277_20:
  6225   00026C                     
  6226                           ; BSR set to: 0
  6227                           ;LAB4.c: 295:                     {;LAB4.c: 296:                      num=2;
  6228   00026C  0E00               	movlw	0
  6229   00026E  6FE3               	movwf	(_num+1)& (0+255),b
  6230   000270  0E02               	movlw	2
  6231   000272  6FE2               	movwf	_num& (0+255),b
  6232                           
  6233                           ;LAB4.c: 297:                      Borrado=0;
  6234   000274  0E00               	movlw	0
  6235   000276  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6236   000278  0E00               	movlw	0
  6237   00027A  6FB8               	movwf	_Borrado& (0+255),b
  6238                           
  6239                           ;LAB4.c: 298:                      reset_En=0;
  6240   00027C  0E00               	movlw	0
  6241   00027E  6E44               	movwf	(_reset_En+1)^0,c
  6242   000280  0E00               	movlw	0
  6243   000282  6E43               	movwf	_reset_En^0,c
  6244                           
  6245                           ;LAB4.c: 299:                      E_stop_En=0;
  6246   000284  0E00               	movlw	0
  6247   000286  6E42               	movwf	(_E_stop_En+1)^0,c
  6248   000288  0E00               	movlw	0
  6249   00028A  6E41               	movwf	_E_stop_En^0,c
  6250   00028C  EFFC  F003         	goto	i1l3925
  6251   000290                     i1l3799:
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;LAB4.c: 305:                   if (Numpad_en==1)
  6255   000290  05BA               	decf	_Numpad_en& (0+255),w,b
  6256   000292  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6257   000294  A4D8               	btfss	status,2,c
  6258   000296  EF4F  F001         	goto	i1u278_21
  6259   00029A  EF51  F001         	goto	i1u278_20
  6260   00029E                     i1u278_21:
  6261   00029E  EFFC  F003         	goto	i1l3925
  6262   0002A2                     i1u278_20:
  6263   0002A2                     
  6264                           ; BSR set to: 0
  6265                           ;LAB4.c: 306:                     {;LAB4.c: 307:                       num=3;
  6266   0002A2  0E00               	movlw	0
  6267   0002A4  6FE3               	movwf	(_num+1)& (0+255),b
  6268   0002A6  0E03               	movlw	3
  6269   0002A8  6FE2               	movwf	_num& (0+255),b
  6270                           
  6271                           ;LAB4.c: 308:                       Borrado=0;
  6272   0002AA  0E00               	movlw	0
  6273   0002AC  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6274   0002AE  0E00               	movlw	0
  6275   0002B0  6FB8               	movwf	_Borrado& (0+255),b
  6276                           
  6277                           ;LAB4.c: 309:                       back_l_En=0;
  6278   0002B2  0E00               	movlw	0
  6279   0002B4  6E46               	movwf	(_back_l_En+1)^0,c
  6280   0002B6  0E00               	movlw	0
  6281   0002B8  6E45               	movwf	_back_l_En^0,c
  6282                           
  6283                           ;LAB4.c: 310:                       reset_En=0;
  6284   0002BA  0E00               	movlw	0
  6285   0002BC  6E44               	movwf	(_reset_En+1)^0,c
  6286   0002BE  0E00               	movlw	0
  6287   0002C0  6E43               	movwf	_reset_En^0,c
  6288                           
  6289                           ;LAB4.c: 311:                       E_stop_En=0;
  6290   0002C2  0E00               	movlw	0
  6291   0002C4  6E42               	movwf	(_E_stop_En+1)^0,c
  6292   0002C6  0E00               	movlw	0
  6293   0002C8  6E41               	movwf	_E_stop_En^0,c
  6294   0002CA  EFFC  F003         	goto	i1l3925
  6295   0002CE                     i1l3803:
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;LAB4.c: 316:                   if (Numpad_en==1)
  6299   0002CE  05BA               	decf	_Numpad_en& (0+255),w,b
  6300   0002D0  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6301   0002D2  A4D8               	btfss	status,2,c
  6302   0002D4  EF6E  F001         	goto	i1u279_21
  6303   0002D8  EF70  F001         	goto	i1u279_20
  6304   0002DC                     i1u279_21:
  6305   0002DC  EFFC  F003         	goto	i1l3925
  6306   0002E0                     i1u279_20:
  6307   0002E0                     
  6308                           ; BSR set to: 0
  6309                           ;LAB4.c: 317:                     {;LAB4.c: 318:                       num=4;
  6310   0002E0  0E00               	movlw	0
  6311   0002E2  6FE3               	movwf	(_num+1)& (0+255),b
  6312   0002E4  0E04               	movlw	4
  6313   0002E6  6FE2               	movwf	_num& (0+255),b
  6314                           
  6315                           ;LAB4.c: 319:                       Borrado=0;
  6316   0002E8  0E00               	movlw	0
  6317   0002EA  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6318   0002EC  0E00               	movlw	0
  6319   0002EE  6FB8               	movwf	_Borrado& (0+255),b
  6320                           
  6321                           ;LAB4.c: 320:                       back_l_En=0;
  6322   0002F0  0E00               	movlw	0
  6323   0002F2  6E46               	movwf	(_back_l_En+1)^0,c
  6324   0002F4  0E00               	movlw	0
  6325   0002F6  6E45               	movwf	_back_l_En^0,c
  6326                           
  6327                           ;LAB4.c: 321:                       reset_En=0;
  6328   0002F8  0E00               	movlw	0
  6329   0002FA  6E44               	movwf	(_reset_En+1)^0,c
  6330   0002FC  0E00               	movlw	0
  6331   0002FE  6E43               	movwf	_reset_En^0,c
  6332                           
  6333                           ;LAB4.c: 322:                       E_stop_En=0;
  6334   000300  0E00               	movlw	0
  6335   000302  6E42               	movwf	(_E_stop_En+1)^0,c
  6336   000304  0E00               	movlw	0
  6337   000306  6E41               	movwf	_E_stop_En^0,c
  6338   000308  EFFC  F003         	goto	i1l3925
  6339   00030C                     i1l3807:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;LAB4.c: 327:                    if (Numpad_en==1)
  6343   00030C  05BA               	decf	_Numpad_en& (0+255),w,b
  6344   00030E  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6345   000310  A4D8               	btfss	status,2,c
  6346   000312  EF8D  F001         	goto	i1u280_21
  6347   000316  EF8F  F001         	goto	i1u280_20
  6348   00031A                     i1u280_21:
  6349   00031A  EFFC  F003         	goto	i1l3925
  6350   00031E                     i1u280_20:
  6351   00031E                     
  6352                           ; BSR set to: 0
  6353                           ;LAB4.c: 328:                     {;LAB4.c: 329:                       num=5;
  6354   00031E  0E00               	movlw	0
  6355   000320  6FE3               	movwf	(_num+1)& (0+255),b
  6356   000322  0E05               	movlw	5
  6357   000324  6FE2               	movwf	_num& (0+255),b
  6358                           
  6359                           ;LAB4.c: 330:                       Borrado=0;
  6360   000326  0E00               	movlw	0
  6361   000328  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6362   00032A  0E00               	movlw	0
  6363   00032C  6FB8               	movwf	_Borrado& (0+255),b
  6364                           
  6365                           ;LAB4.c: 331:                       back_l_En=0;
  6366   00032E  0E00               	movlw	0
  6367   000330  6E46               	movwf	(_back_l_En+1)^0,c
  6368   000332  0E00               	movlw	0
  6369   000334  6E45               	movwf	_back_l_En^0,c
  6370                           
  6371                           ;LAB4.c: 332:                       reset_En=0;
  6372   000336  0E00               	movlw	0
  6373   000338  6E44               	movwf	(_reset_En+1)^0,c
  6374   00033A  0E00               	movlw	0
  6375   00033C  6E43               	movwf	_reset_En^0,c
  6376                           
  6377                           ;LAB4.c: 333:                       E_stop_En=0;
  6378   00033E  0E00               	movlw	0
  6379   000340  6E42               	movwf	(_E_stop_En+1)^0,c
  6380   000342  0E00               	movlw	0
  6381   000344  6E41               	movwf	_E_stop_En^0,c
  6382   000346  EFFC  F003         	goto	i1l3925
  6383   00034A                     i1l3811:
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;LAB4.c: 338:                    if (Numpad_en==1)
  6387   00034A  05BA               	decf	_Numpad_en& (0+255),w,b
  6388   00034C  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6389   00034E  A4D8               	btfss	status,2,c
  6390   000350  EFAC  F001         	goto	i1u281_21
  6391   000354  EFAE  F001         	goto	i1u281_20
  6392   000358                     i1u281_21:
  6393   000358  EFFC  F003         	goto	i1l3925
  6394   00035C                     i1u281_20:
  6395   00035C                     
  6396                           ; BSR set to: 0
  6397                           ;LAB4.c: 339:                     {;LAB4.c: 340:                       num=6;
  6398   00035C  0E00               	movlw	0
  6399   00035E  6FE3               	movwf	(_num+1)& (0+255),b
  6400   000360  0E06               	movlw	6
  6401   000362  6FE2               	movwf	_num& (0+255),b
  6402                           
  6403                           ;LAB4.c: 341:                       Borrado=0;
  6404   000364  0E00               	movlw	0
  6405   000366  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6406   000368  0E00               	movlw	0
  6407   00036A  6FB8               	movwf	_Borrado& (0+255),b
  6408                           
  6409                           ;LAB4.c: 342:                       back_l_En=0;
  6410   00036C  0E00               	movlw	0
  6411   00036E  6E46               	movwf	(_back_l_En+1)^0,c
  6412   000370  0E00               	movlw	0
  6413   000372  6E45               	movwf	_back_l_En^0,c
  6414                           
  6415                           ;LAB4.c: 343:                       reset_En=0;
  6416   000374  0E00               	movlw	0
  6417   000376  6E44               	movwf	(_reset_En+1)^0,c
  6418   000378  0E00               	movlw	0
  6419   00037A  6E43               	movwf	_reset_En^0,c
  6420                           
  6421                           ;LAB4.c: 344:                       E_stop_En=0;
  6422   00037C  0E00               	movlw	0
  6423   00037E  6E42               	movwf	(_E_stop_En+1)^0,c
  6424   000380  0E00               	movlw	0
  6425   000382  6E41               	movwf	_E_stop_En^0,c
  6426   000384  EFFC  F003         	goto	i1l3925
  6427   000388                     i1l3815:
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;LAB4.c: 348:                   if (Numpad_en==1)
  6431   000388  05BA               	decf	_Numpad_en& (0+255),w,b
  6432   00038A  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6433   00038C  A4D8               	btfss	status,2,c
  6434   00038E  EFCB  F001         	goto	i1u282_21
  6435   000392  EFCD  F001         	goto	i1u282_20
  6436   000396                     i1u282_21:
  6437   000396  EFFC  F003         	goto	i1l3925
  6438   00039A                     i1u282_20:
  6439   00039A                     
  6440                           ; BSR set to: 0
  6441                           ;LAB4.c: 349:                     {;LAB4.c: 350:                       num=7;
  6442   00039A  0E00               	movlw	0
  6443   00039C  6FE3               	movwf	(_num+1)& (0+255),b
  6444   00039E  0E07               	movlw	7
  6445   0003A0  6FE2               	movwf	_num& (0+255),b
  6446                           
  6447                           ;LAB4.c: 351:                       Borrado=0;
  6448   0003A2  0E00               	movlw	0
  6449   0003A4  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6450   0003A6  0E00               	movlw	0
  6451   0003A8  6FB8               	movwf	_Borrado& (0+255),b
  6452                           
  6453                           ;LAB4.c: 352:                       back_l_En=0;
  6454   0003AA  0E00               	movlw	0
  6455   0003AC  6E46               	movwf	(_back_l_En+1)^0,c
  6456   0003AE  0E00               	movlw	0
  6457   0003B0  6E45               	movwf	_back_l_En^0,c
  6458                           
  6459                           ;LAB4.c: 353:                       reset_En=0;
  6460   0003B2  0E00               	movlw	0
  6461   0003B4  6E44               	movwf	(_reset_En+1)^0,c
  6462   0003B6  0E00               	movlw	0
  6463   0003B8  6E43               	movwf	_reset_En^0,c
  6464                           
  6465                           ;LAB4.c: 354:                       E_stop_En=0;
  6466   0003BA  0E00               	movlw	0
  6467   0003BC  6E42               	movwf	(_E_stop_En+1)^0,c
  6468   0003BE  0E00               	movlw	0
  6469   0003C0  6E41               	movwf	_E_stop_En^0,c
  6470   0003C2  EFFC  F003         	goto	i1l3925
  6471   0003C6                     i1l3819:
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;LAB4.c: 359:                   if (Numpad_en==1)
  6475   0003C6  05BA               	decf	_Numpad_en& (0+255),w,b
  6476   0003C8  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6477   0003CA  A4D8               	btfss	status,2,c
  6478   0003CC  EFEA  F001         	goto	i1u283_21
  6479   0003D0  EFEC  F001         	goto	i1u283_20
  6480   0003D4                     i1u283_21:
  6481   0003D4  EFFC  F003         	goto	i1l3925
  6482   0003D8                     i1u283_20:
  6483   0003D8                     
  6484                           ; BSR set to: 0
  6485                           ;LAB4.c: 360:                     {;LAB4.c: 361:                       num=8;
  6486   0003D8  0E00               	movlw	0
  6487   0003DA  6FE3               	movwf	(_num+1)& (0+255),b
  6488   0003DC  0E08               	movlw	8
  6489   0003DE  6FE2               	movwf	_num& (0+255),b
  6490                           
  6491                           ;LAB4.c: 362:                       Borrado=0;
  6492   0003E0  0E00               	movlw	0
  6493   0003E2  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6494   0003E4  0E00               	movlw	0
  6495   0003E6  6FB8               	movwf	_Borrado& (0+255),b
  6496                           
  6497                           ;LAB4.c: 363:                       back_l_En=0;
  6498   0003E8  0E00               	movlw	0
  6499   0003EA  6E46               	movwf	(_back_l_En+1)^0,c
  6500   0003EC  0E00               	movlw	0
  6501   0003EE  6E45               	movwf	_back_l_En^0,c
  6502                           
  6503                           ;LAB4.c: 364:                       reset_En=0;
  6504   0003F0  0E00               	movlw	0
  6505   0003F2  6E44               	movwf	(_reset_En+1)^0,c
  6506   0003F4  0E00               	movlw	0
  6507   0003F6  6E43               	movwf	_reset_En^0,c
  6508                           
  6509                           ;LAB4.c: 365:                       E_stop_En=0;
  6510   0003F8  0E00               	movlw	0
  6511   0003FA  6E42               	movwf	(_E_stop_En+1)^0,c
  6512   0003FC  0E00               	movlw	0
  6513   0003FE  6E41               	movwf	_E_stop_En^0,c
  6514   000400  EFFC  F003         	goto	i1l3925
  6515   000404                     i1l3823:
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;LAB4.c: 370:                   if (Numpad_en==1)
  6519   000404  05BA               	decf	_Numpad_en& (0+255),w,b
  6520   000406  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6521   000408  A4D8               	btfss	status,2,c
  6522   00040A  EF09  F002         	goto	i1u284_21
  6523   00040E  EF0B  F002         	goto	i1u284_20
  6524   000412                     i1u284_21:
  6525   000412  EFFC  F003         	goto	i1l3925
  6526   000416                     i1u284_20:
  6527   000416                     
  6528                           ; BSR set to: 0
  6529                           ;LAB4.c: 371:                     {;LAB4.c: 372:                       num=9;
  6530   000416  0E00               	movlw	0
  6531   000418  6FE3               	movwf	(_num+1)& (0+255),b
  6532   00041A  0E09               	movlw	9
  6533   00041C  6FE2               	movwf	_num& (0+255),b
  6534                           
  6535                           ;LAB4.c: 373:                       Borrado=0;
  6536   00041E  0E00               	movlw	0
  6537   000420  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6538   000422  0E00               	movlw	0
  6539   000424  6FB8               	movwf	_Borrado& (0+255),b
  6540                           
  6541                           ;LAB4.c: 374:                       back_l_En=0;
  6542   000426  0E00               	movlw	0
  6543   000428  6E46               	movwf	(_back_l_En+1)^0,c
  6544   00042A  0E00               	movlw	0
  6545   00042C  6E45               	movwf	_back_l_En^0,c
  6546                           
  6547                           ;LAB4.c: 375:                       reset_En=0;
  6548   00042E  0E00               	movlw	0
  6549   000430  6E44               	movwf	(_reset_En+1)^0,c
  6550   000432  0E00               	movlw	0
  6551   000434  6E43               	movwf	_reset_En^0,c
  6552                           
  6553                           ;LAB4.c: 376:                       E_stop_En=0;
  6554   000436  0E00               	movlw	0
  6555   000438  6E42               	movwf	(_E_stop_En+1)^0,c
  6556   00043A  0E00               	movlw	0
  6557   00043C  6E41               	movwf	_E_stop_En^0,c
  6558   00043E  EFFC  F003         	goto	i1l3925
  6559   000442                     i1l3827:
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;LAB4.c: 382:                   if (Numpad_en==1)
  6563   000442  05BA               	decf	_Numpad_en& (0+255),w,b
  6564   000444  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  6565   000446  A4D8               	btfss	status,2,c
  6566   000448  EF28  F002         	goto	i1u285_21
  6567   00044C  EF2A  F002         	goto	i1u285_20
  6568   000450                     i1u285_21:
  6569   000450  EFFC  F003         	goto	i1l3925
  6570   000454                     i1u285_20:
  6571   000454                     
  6572                           ; BSR set to: 0
  6573                           ;LAB4.c: 383:                     {;LAB4.c: 384:                       num=0;
  6574   000454  0E00               	movlw	0
  6575   000456  6FE3               	movwf	(_num+1)& (0+255),b
  6576   000458  0E00               	movlw	0
  6577   00045A  6FE2               	movwf	_num& (0+255),b
  6578                           
  6579                           ;LAB4.c: 385:                       Borrado=0;
  6580   00045C  0E00               	movlw	0
  6581   00045E  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6582   000460  0E00               	movlw	0
  6583   000462  6FB8               	movwf	_Borrado& (0+255),b
  6584                           
  6585                           ;LAB4.c: 386:                       back_l_En=0;
  6586   000464  0E00               	movlw	0
  6587   000466  6E46               	movwf	(_back_l_En+1)^0,c
  6588   000468  0E00               	movlw	0
  6589   00046A  6E45               	movwf	_back_l_En^0,c
  6590                           
  6591                           ;LAB4.c: 387:                       reset_En=0;
  6592   00046C  0E00               	movlw	0
  6593   00046E  6E44               	movwf	(_reset_En+1)^0,c
  6594   000470  0E00               	movlw	0
  6595   000472  6E43               	movwf	_reset_En^0,c
  6596                           
  6597                           ;LAB4.c: 388:                       E_stop_En=0;
  6598   000474  0E00               	movlw	0
  6599   000476  6E42               	movwf	(_E_stop_En+1)^0,c
  6600   000478  0E00               	movlw	0
  6601   00047A  6E41               	movwf	_E_stop_En^0,c
  6602   00047C  EFFC  F003         	goto	i1l3925
  6603   000480                     i1l3831:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;LAB4.c: 394:                 if(Borrado_En==1)
  6607   000480  0447               	decf	_Borrado_En^0,w,c
  6608   000482  1048               	iorwf	(_Borrado_En+1)^0,w,c
  6609   000484  A4D8               	btfss	status,2,c
  6610   000486  EF47  F002         	goto	i1u286_21
  6611   00048A  EF49  F002         	goto	i1u286_20
  6612   00048E                     i1u286_21:
  6613   00048E  EFFC  F003         	goto	i1l3925
  6614   000492                     i1u286_20:
  6615   000492                     
  6616                           ; BSR set to: 0
  6617                           ;LAB4.c: 395:                 {;LAB4.c: 396:                   Lcd_Set_Cursor(2,12);
  6618   000492  0E0C               	movlw	12
  6619   000494  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  6620   000496  0E02               	movlw	2
  6621   000498  EC6E  F00D         	call	i1_Lcd_Set_Cursor
  6622   00049C                     
  6623                           ;LAB4.c: 397:                   Lcd_Write_String(" ");
  6624   00049C  0E34               	movlw	low (STR_18+15)
  6625   00049E  6E06               	movwf	i1Lcd_Write_String@a^0,c
  6626   0004A0  0E7F               	movlw	high (STR_18+15)
  6627   0004A2  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  6628   0004A4  EC8E  F010         	call	i1_Lcd_Write_String	;wreg free
  6629   0004A8                     
  6630                           ;LAB4.c: 398:                   Lcd_Set_Cursor(2,13);
  6631   0004A8  0E0D               	movlw	13
  6632   0004AA  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  6633   0004AC  0E02               	movlw	2
  6634   0004AE  EC6E  F00D         	call	i1_Lcd_Set_Cursor
  6635                           
  6636                           ;LAB4.c: 399:                   Lcd_Write_String(" ");
  6637   0004B2  0E34               	movlw	low (STR_18+15)
  6638   0004B4  6E06               	movwf	i1Lcd_Write_String@a^0,c
  6639   0004B6  0E7F               	movlw	high (STR_18+15)
  6640   0004B8  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  6641   0004BA  EC8E  F010         	call	i1_Lcd_Write_String	;wreg free
  6642   0004BE                     
  6643                           ;LAB4.c: 400:                   Lcd_Set_Cursor(2,12);
  6644   0004BE  0E0C               	movlw	12
  6645   0004C0  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  6646   0004C2  0E02               	movlw	2
  6647   0004C4  EC6E  F00D         	call	i1_Lcd_Set_Cursor
  6648   0004C8                     
  6649                           ;LAB4.c: 401:                   Lcd_Blink();
  6650   0004C8  ECF2  F012         	call	i1_Lcd_Blink	;wreg free
  6651   0004CC                     
  6652                           ;LAB4.c: 402:                   result=0;
  6653   0004CC  0E00               	movlw	0
  6654   0004CE  0100               	movlb	0	; () banked
  6655   0004D0  6FB5               	movwf	(_result+1)& (0+255),b
  6656   0004D2  0E00               	movlw	0
  6657   0004D4  6FB4               	movwf	_result& (0+255),b
  6658   0004D6                     
  6659                           ; BSR set to: 0
  6660                           ;LAB4.c: 403:                   digito=0;
  6661   0004D6  0E00               	movlw	0
  6662   0004D8  6FB3               	movwf	(_digito+1)& (0+255),b
  6663   0004DA  0E00               	movlw	0
  6664   0004DC  6FB2               	movwf	_digito& (0+255),b
  6665   0004DE                     
  6666                           ; BSR set to: 0
  6667                           ;LAB4.c: 404:                   Borrado=1;
  6668   0004DE  0E00               	movlw	0
  6669   0004E0  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6670   0004E2  0E01               	movlw	1
  6671   0004E4  6FB8               	movwf	_Borrado& (0+255),b
  6672   0004E6                     
  6673                           ; BSR set to: 0
  6674                           ;LAB4.c: 405:                   back_l_En=0;
  6675   0004E6  0E00               	movlw	0
  6676   0004E8  6E46               	movwf	(_back_l_En+1)^0,c
  6677   0004EA  0E00               	movlw	0
  6678   0004EC  6E45               	movwf	_back_l_En^0,c
  6679   0004EE                     
  6680                           ; BSR set to: 0
  6681                           ;LAB4.c: 406:                   reset_En=0;
  6682   0004EE  0E00               	movlw	0
  6683   0004F0  6E44               	movwf	(_reset_En+1)^0,c
  6684   0004F2  0E00               	movlw	0
  6685   0004F4  6E43               	movwf	_reset_En^0,c
  6686   0004F6                     
  6687                           ; BSR set to: 0
  6688                           ;LAB4.c: 407:                   E_stop_En=0;
  6689   0004F6  0E00               	movlw	0
  6690   0004F8  6E42               	movwf	(_E_stop_En+1)^0,c
  6691   0004FA  0E00               	movlw	0
  6692   0004FC  6E41               	movwf	_E_stop_En^0,c
  6693   0004FE  EFFC  F003         	goto	i1l3925
  6694   000502                     i1l3855:
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;LAB4.c: 413:                 if(ok_en==1)
  6698   000502  043F               	decf	_ok_en^0,w,c
  6699   000504  1040               	iorwf	(_ok_en+1)^0,w,c
  6700   000506  A4D8               	btfss	status,2,c
  6701   000508  EF88  F002         	goto	i1u287_21
  6702   00050C  EF8A  F002         	goto	i1u287_20
  6703   000510                     i1u287_21:
  6704   000510  EFFC  F003         	goto	i1l3925
  6705   000514                     i1u287_20:
  6706   000514                     
  6707                           ; BSR set to: 0
  6708                           ;LAB4.c: 414:                   {;LAB4.c: 415:                   if(state==1)
  6709   000514  05BE               	decf	_state& (0+255),w,b
  6710   000516  11BF               	iorwf	(_state+1)& (0+255),w,b
  6711   000518  A4D8               	btfss	status,2,c
  6712   00051A  EF91  F002         	goto	i1u288_21
  6713   00051E  EF93  F002         	goto	i1u288_20
  6714   000522                     i1u288_21:
  6715   000522  EFC2  F002         	goto	i1l3869
  6716   000526                     i1u288_20:
  6717   000526                     
  6718                           ; BSR set to: 0
  6719                           ;LAB4.c: 416:                   {;LAB4.c: 417:                     if (result>0 && resul
      +                          t<=59 )
  6720   000526  BFB5               	btfsc	(_result+1)& (0+255),7,b
  6721   000528  EF9E  F002         	goto	i1u289_21
  6722   00052C  51B5               	movf	(_result+1)& (0+255),w,b
  6723   00052E  E108               	bnz	i1u289_20
  6724   000530  05B4               	decf	_result& (0+255),w,b
  6725   000532  A0D8               	btfss	status,0,c
  6726   000534  EF9E  F002         	goto	i1u289_21
  6727   000538  EFA0  F002         	goto	i1u289_20
  6728   00053C                     i1u289_21:
  6729   00053C  EF0E  F003         	goto	i1l199
  6730   000540                     i1u289_20:
  6731   000540                     
  6732                           ; BSR set to: 0
  6733   000540  BFB5               	btfsc	(_result+1)& (0+255),7,b
  6734   000542  EFAE  F002         	goto	i1u290_20
  6735   000546  51B5               	movf	(_result+1)& (0+255),w,b
  6736   000548  E107               	bnz	i1u290_21
  6737   00054A  0E3C               	movlw	60
  6738   00054C  5DB4               	subwf	_result& (0+255),w,b
  6739   00054E  B0D8               	btfsc	status,0,c
  6740   000550  EFAC  F002         	goto	i1u290_21
  6741   000554  EFAE  F002         	goto	i1u290_20
  6742   000558                     i1u290_21:
  6743   000558  EF0E  F003         	goto	i1l199
  6744   00055C                     i1u290_20:
  6745   00055C                     
  6746                           ; BSR set to: 0
  6747                           ;LAB4.c: 418:                       {;LAB4.c: 419:                         re_pcs=result
      +                          ;
  6748   00055C  C0B4  F0E0         	movff	_result,_re_pcs
  6749   000560  C0B5  F0E1         	movff	_result+1,_re_pcs+1
  6750   000564                     
  6751                           ; BSR set to: 0
  6752                           ;LAB4.c: 420:                         Numpad_en=0;
  6753   000564  0E00               	movlw	0
  6754   000566  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  6755   000568  0E00               	movlw	0
  6756   00056A  6FBA               	movwf	_Numpad_en& (0+255),b
  6757                           
  6758                           ;LAB4.c: 422:                         count_En=1;
  6759   00056C  0E00               	movlw	0
  6760   00056E  6FB7               	movwf	(_count_En+1)& (0+255),b
  6761   000570  0E01               	movlw	1
  6762   000572  6FB6               	movwf	_count_En& (0+255),b
  6763                           
  6764                           ;LAB4.c: 423:                         ok_en=0;
  6765   000574  0E00               	movlw	0
  6766   000576  6E40               	movwf	(_ok_en+1)^0,c
  6767   000578  0E00               	movlw	0
  6768   00057A  6E3F               	movwf	_ok_en^0,c
  6769   00057C                     
  6770                           ; BSR set to: 0
  6771                           ;LAB4.c: 424:                         state++;
  6772   00057C  4BBE               	infsnz	_state& (0+255),f,b
  6773   00057E  2BBF               	incf	(_state+1)& (0+255),f,b
  6774                           
  6775                           ;LAB4.c: 425:                       }
  6776   000580  EF0E  F003         	goto	i1l199
  6777   000584                     i1l3869:
  6778                           
  6779                           ; BSR set to: 0
  6780   000584  0E03               	movlw	3
  6781   000586  19BE               	xorwf	_state& (0+255),w,b
  6782   000588  11BF               	iorwf	(_state+1)& (0+255),w,b
  6783   00058A  A4D8               	btfss	status,2,c
  6784   00058C  EFCA  F002         	goto	i1u291_21
  6785   000590  EFCC  F002         	goto	i1u291_20
  6786   000594                     i1u291_21:
  6787   000594  EF0E  F003         	goto	i1l199
  6788   000598                     i1u291_20:
  6789   000598                     
  6790                           ; BSR set to: 0
  6791                           ;LAB4.c: 433:                   {;LAB4.c: 435:                     ok_en=0;
  6792   000598  0E00               	movlw	0
  6793   00059A  6E40               	movwf	(_ok_en+1)^0,c
  6794   00059C  0E00               	movlw	0
  6795   00059E  6E3F               	movwf	_ok_en^0,c
  6796                           
  6797                           ;LAB4.c: 436:                     Enter_en=0;
  6798   0005A0  0E00               	movlw	0
  6799   0005A2  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  6800   0005A4  0E00               	movlw	0
  6801   0005A6  6FBC               	movwf	_Enter_en& (0+255),b
  6802                           
  6803                           ;LAB4.c: 437:                     Numpad_en=0;
  6804   0005A8  0E00               	movlw	0
  6805   0005AA  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  6806   0005AC  0E00               	movlw	0
  6807   0005AE  6FBA               	movwf	_Numpad_en& (0+255),b
  6808                           
  6809                           ;LAB4.c: 438:                     Keypad_en=0;
  6810   0005B0  0E00               	movlw	0
  6811   0005B2  6E4A               	movwf	(_Keypad_en+1)^0,c
  6812   0005B4  0E00               	movlw	0
  6813   0005B6  6E49               	movwf	_Keypad_en^0,c
  6814                           
  6815                           ;LAB4.c: 439:                     Borrado=0;
  6816   0005B8  0E00               	movlw	0
  6817   0005BA  6FB9               	movwf	(_Borrado+1)& (0+255),b
  6818   0005BC  0E00               	movlw	0
  6819   0005BE  6FB8               	movwf	_Borrado& (0+255),b
  6820                           
  6821                           ;LAB4.c: 440:                     Borrado_En=0;
  6822   0005C0  0E00               	movlw	0
  6823   0005C2  6E48               	movwf	(_Borrado_En+1)^0,c
  6824   0005C4  0E00               	movlw	0
  6825   0005C6  6E47               	movwf	_Borrado_En^0,c
  6826                           
  6827                           ;LAB4.c: 441:                     count_En=0;
  6828   0005C8  0E00               	movlw	0
  6829   0005CA  6FB7               	movwf	(_count_En+1)& (0+255),b
  6830   0005CC  0E00               	movlw	0
  6831   0005CE  6FB6               	movwf	_count_En& (0+255),b
  6832                           
  6833                           ;LAB4.c: 442:                     result=0;
  6834   0005D0  0E00               	movlw	0
  6835   0005D2  6FB5               	movwf	(_result+1)& (0+255),b
  6836   0005D4  0E00               	movlw	0
  6837   0005D6  6FB4               	movwf	_result& (0+255),b
  6838                           
  6839                           ;LAB4.c: 443:                     digito=0;
  6840   0005D8  0E00               	movlw	0
  6841   0005DA  6FB3               	movwf	(_digito+1)& (0+255),b
  6842   0005DC  0E00               	movlw	0
  6843   0005DE  6FB2               	movwf	_digito& (0+255),b
  6844                           
  6845                           ;LAB4.c: 444:                     times=0;
  6846   0005E0  0E00               	movlw	0
  6847   0005E2  6FB1               	movwf	(_times+1)& (0+255),b
  6848   0005E4  0E00               	movlw	0
  6849   0005E6  6FB0               	movwf	_times& (0+255),b
  6850                           
  6851                           ;LAB4.c: 445:                     times_1=0;
  6852   0005E8  0E00               	movlw	0
  6853   0005EA  6FAF               	movwf	(_times_1+1)& (0+255),b
  6854   0005EC  0E00               	movlw	0
  6855   0005EE  6FAE               	movwf	_times_1& (0+255),b
  6856                           
  6857                           ;LAB4.c: 446:                     check =0;
  6858   0005F0  0E00               	movlw	0
  6859   0005F2  6FAD               	movwf	(_check+1)& (0+255),b
  6860   0005F4  0E00               	movlw	0
  6861   0005F6  6FAC               	movwf	_check& (0+255),b
  6862                           
  6863                           ;LAB4.c: 447:                     state=1;
  6864   0005F8  0E00               	movlw	0
  6865   0005FA  6FBF               	movwf	(_state+1)& (0+255),b
  6866   0005FC  0E01               	movlw	1
  6867   0005FE  6FBE               	movwf	_state& (0+255),b
  6868                           
  6869                           ;LAB4.c: 448:                     contador=0;
  6870   000600  0E00               	movlw	0
  6871   000602  6FE7               	movwf	(_contador+1)& (0+255),b
  6872   000604  0E00               	movlw	0
  6873   000606  6FE6               	movwf	_contador& (0+255),b
  6874                           
  6875                           ;LAB4.c: 449:                     contador_dec=0;
  6876   000608  0E00               	movlw	0
  6877   00060A  6FE5               	movwf	(_contador_dec+1)& (0+255),b
  6878   00060C  0E00               	movlw	0
  6879   00060E  6FE4               	movwf	_contador_dec& (0+255),b
  6880                           
  6881                           ;LAB4.c: 450:                     LATE=0b111;
  6882   000610  0E07               	movlw	7
  6883   000612  6E8D               	movwf	141,c	;volatile
  6884   000614                     
  6885                           ; BSR set to: 0
  6886                           ;LAB4.c: 451:                     LATDbits.LATD0=0;
  6887   000614  908C               	bcf	140,0,c	;volatile
  6888   000616                     
  6889                           ; BSR set to: 0
  6890                           ;LAB4.c: 452:                     LATDbits.LATD1=0;
  6891   000616  928C               	bcf	140,1,c	;volatile
  6892   000618                     
  6893                           ; BSR set to: 0
  6894                           ;LAB4.c: 453:                     LATDbits.LATD2=0;
  6895   000618  948C               	bcf	140,2,c	;volatile
  6896   00061A                     
  6897                           ; BSR set to: 0
  6898                           ;LAB4.c: 454:                     LATDbits.LATD3=0;
  6899   00061A  968C               	bcf	140,3,c	;volatile
  6900   00061C                     i1l199:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;LAB4.c: 456:                   back_l_En=0;
  6904   00061C  0E00               	movlw	0
  6905   00061E  6E46               	movwf	(_back_l_En+1)^0,c
  6906   000620  0E00               	movlw	0
  6907   000622  6E45               	movwf	_back_l_En^0,c
  6908                           
  6909                           ;LAB4.c: 457:                   reset_En=0;
  6910   000624  0E00               	movlw	0
  6911   000626  6E44               	movwf	(_reset_En+1)^0,c
  6912   000628  0E00               	movlw	0
  6913   00062A  6E43               	movwf	_reset_En^0,c
  6914                           
  6915                           ;LAB4.c: 458:                   E_stop_En=0;
  6916   00062C  0E00               	movlw	0
  6917   00062E  6E42               	movwf	(_E_stop_En+1)^0,c
  6918   000630  0E00               	movlw	0
  6919   000632  6E41               	movwf	_E_stop_En^0,c
  6920   000634  EFFC  F003         	goto	i1l3925
  6921   000638                     i1l3881:
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;LAB4.c: 464:                     contador=0;
  6925   000638  0E00               	movlw	0
  6926   00063A  6FE7               	movwf	(_contador+1)& (0+255),b
  6927   00063C  0E00               	movlw	0
  6928   00063E  6FE6               	movwf	_contador& (0+255),b
  6929                           
  6930                           ;LAB4.c: 465:                     contador_dec=0;
  6931   000640  0E00               	movlw	0
  6932   000642  6FE5               	movwf	(_contador_dec+1)& (0+255),b
  6933   000644  0E00               	movlw	0
  6934   000646  6FE4               	movwf	_contador_dec& (0+255),b
  6935                           
  6936                           ;LAB4.c: 466:                     LATE=0b111;
  6937   000648  0E07               	movlw	7
  6938   00064A  6E8D               	movwf	141,c	;volatile
  6939   00064C                     
  6940                           ; BSR set to: 0
  6941                           ;LAB4.c: 467:                     LATDbits.LATD0=0;
  6942   00064C  908C               	bcf	140,0,c	;volatile
  6943   00064E                     
  6944                           ; BSR set to: 0
  6945                           ;LAB4.c: 468:                     LATDbits.LATD1=0;
  6946   00064E  928C               	bcf	140,1,c	;volatile
  6947   000650                     
  6948                           ; BSR set to: 0
  6949                           ;LAB4.c: 469:                     LATDbits.LATD2=0;
  6950   000650  948C               	bcf	140,2,c	;volatile
  6951   000652                     
  6952                           ; BSR set to: 0
  6953                           ;LAB4.c: 470:                     LATDbits.LATD3=0;
  6954   000652  968C               	bcf	140,3,c	;volatile
  6955   000654                     
  6956                           ; BSR set to: 0
  6957                           ;LAB4.c: 471:                     re_pcs=result;
  6958   000654  C0B4  F0E0         	movff	_result,_re_pcs
  6959   000658  C0B5  F0E1         	movff	_result+1,_re_pcs+1
  6960                           
  6961                           ;LAB4.c: 472:                     reset_En=1;
  6962   00065C  0E00               	movlw	0
  6963   00065E  6E44               	movwf	(_reset_En+1)^0,c
  6964   000660  0E01               	movlw	1
  6965   000662  6E43               	movwf	_reset_En^0,c
  6966                           
  6967                           ;LAB4.c: 473:                     E_stop_En=0;
  6968   000664  0E00               	movlw	0
  6969   000666  6E42               	movwf	(_E_stop_En+1)^0,c
  6970   000668  0E00               	movlw	0
  6971   00066A  6E41               	movwf	_E_stop_En^0,c
  6972                           
  6973                           ;LAB4.c: 474:                   break;
  6974   00066C  EFFC  F003         	goto	i1l3925
  6975   000670                     i1l3893:
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;LAB4.c: 476:                 if(state==2)
  6979   000670  0E02               	movlw	2
  6980   000672  19BE               	xorwf	_state& (0+255),w,b
  6981   000674  11BF               	iorwf	(_state+1)& (0+255),w,b
  6982   000676  A4D8               	btfss	status,2,c
  6983   000678  EF40  F003         	goto	i1u292_21
  6984   00067C  EF42  F003         	goto	i1u292_20
  6985   000680                     i1u292_21:
  6986   000680  EFFC  F003         	goto	i1l3925
  6987   000684                     i1u292_20:
  6988   000684                     
  6989                           ; BSR set to: 0
  6990                           ;LAB4.c: 477:                 {;LAB4.c: 479:                   Lcd_Clear();
  6991   000684  ECEB  F012         	call	i1_Lcd_Clear	;wreg free
  6992   000688                     
  6993                           ;LAB4.c: 480:                   Lcd_Set_Cursor(1,1);
  6994   000688  0E01               	movlw	1
  6995   00068A  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  6996   00068C  0E01               	movlw	1
  6997   00068E  EC6E  F00D         	call	i1_Lcd_Set_Cursor
  6998   000692                     
  6999                           ;LAB4.c: 481:                   Lcd_Write_String("Parada De");
  7000   000692  0EE3               	movlw	low STR_14
  7001   000694  6E06               	movwf	i1Lcd_Write_String@a^0,c
  7002   000696  0E7F               	movlw	high STR_14
  7003   000698  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  7004   00069A  EC8E  F010         	call	i1_Lcd_Write_String	;wreg free
  7005   00069E                     
  7006                           ;LAB4.c: 482:                   Lcd_Set_Cursor(2,1);
  7007   00069E  0E01               	movlw	1
  7008   0006A0  6E05               	movwf	i1Lcd_Set_Cursor@b^0,c
  7009   0006A2  0E02               	movlw	2
  7010   0006A4  EC6E  F00D         	call	i1_Lcd_Set_Cursor
  7011   0006A8                     
  7012                           ;LAB4.c: 483:                   Lcd_Write_String("Emrgencia");
  7013   0006A8  0ED9               	movlw	low STR_15
  7014   0006AA  6E06               	movwf	i1Lcd_Write_String@a^0,c
  7015   0006AC  0E7F               	movlw	high STR_15
  7016   0006AE  6E07               	movwf	(i1Lcd_Write_String@a+1)^0,c
  7017   0006B0  EC8E  F010         	call	i1_Lcd_Write_String	;wreg free
  7018   0006B4                     
  7019                           ;LAB4.c: 485:                   E_stop_En=1;
  7020   0006B4  0E00               	movlw	0
  7021   0006B6  6E42               	movwf	(_E_stop_En+1)^0,c
  7022   0006B8  0E01               	movlw	1
  7023   0006BA  6E41               	movwf	_E_stop_En^0,c
  7024   0006BC  EFFC  F003         	goto	i1l3925
  7025   0006C0                     i1l3907:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;LAB4.c: 493:                     Enter_en=0;
  7029   0006C0  0E00               	movlw	0
  7030   0006C2  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  7031   0006C4  0E00               	movlw	0
  7032   0006C6  6FBC               	movwf	_Enter_en& (0+255),b
  7033                           
  7034                           ;LAB4.c: 494:                     Numpad_en=0;
  7035   0006C8  0E00               	movlw	0
  7036   0006CA  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  7037   0006CC  0E00               	movlw	0
  7038   0006CE  6FBA               	movwf	_Numpad_en& (0+255),b
  7039                           
  7040                           ;LAB4.c: 495:                     Keypad_en=0;
  7041   0006D0  0E00               	movlw	0
  7042   0006D2  6E4A               	movwf	(_Keypad_en+1)^0,c
  7043   0006D4  0E00               	movlw	0
  7044   0006D6  6E49               	movwf	_Keypad_en^0,c
  7045                           
  7046                           ;LAB4.c: 496:                     Borrado=0;
  7047   0006D8  0E00               	movlw	0
  7048   0006DA  6FB9               	movwf	(_Borrado+1)& (0+255),b
  7049   0006DC  0E00               	movlw	0
  7050   0006DE  6FB8               	movwf	_Borrado& (0+255),b
  7051                           
  7052                           ;LAB4.c: 497:                     Borrado_En=0;
  7053   0006E0  0E00               	movlw	0
  7054   0006E2  6E48               	movwf	(_Borrado_En+1)^0,c
  7055   0006E4  0E00               	movlw	0
  7056   0006E6  6E47               	movwf	_Borrado_En^0,c
  7057                           
  7058                           ;LAB4.c: 498:                     count_En=0;
  7059   0006E8  0E00               	movlw	0
  7060   0006EA  6FB7               	movwf	(_count_En+1)& (0+255),b
  7061   0006EC  0E00               	movlw	0
  7062   0006EE  6FB6               	movwf	_count_En& (0+255),b
  7063                           
  7064                           ;LAB4.c: 499:                     result=0;
  7065   0006F0  0E00               	movlw	0
  7066   0006F2  6FB5               	movwf	(_result+1)& (0+255),b
  7067   0006F4  0E00               	movlw	0
  7068   0006F6  6FB4               	movwf	_result& (0+255),b
  7069                           
  7070                           ;LAB4.c: 500:                     digito=0;
  7071   0006F8  0E00               	movlw	0
  7072   0006FA  6FB3               	movwf	(_digito+1)& (0+255),b
  7073   0006FC  0E00               	movlw	0
  7074   0006FE  6FB2               	movwf	_digito& (0+255),b
  7075                           
  7076                           ;LAB4.c: 501:                     times=0;
  7077   000700  0E00               	movlw	0
  7078   000702  6FB1               	movwf	(_times+1)& (0+255),b
  7079   000704  0E00               	movlw	0
  7080   000706  6FB0               	movwf	_times& (0+255),b
  7081                           
  7082                           ;LAB4.c: 502:                     times_1=0;
  7083   000708  0E00               	movlw	0
  7084   00070A  6FAF               	movwf	(_times_1+1)& (0+255),b
  7085   00070C  0E00               	movlw	0
  7086   00070E  6FAE               	movwf	_times_1& (0+255),b
  7087                           
  7088                           ;LAB4.c: 503:                     check =0;
  7089   000710  0E00               	movlw	0
  7090   000712  6FAD               	movwf	(_check+1)& (0+255),b
  7091   000714  0E00               	movlw	0
  7092   000716  6FAC               	movwf	_check& (0+255),b
  7093                           
  7094                           ;LAB4.c: 504:                     state=1;
  7095   000718  0E00               	movlw	0
  7096   00071A  6FBF               	movwf	(_state+1)& (0+255),b
  7097   00071C  0E01               	movlw	1
  7098   00071E  6FBE               	movwf	_state& (0+255),b
  7099                           
  7100                           ;LAB4.c: 505:                     contador=0;
  7101   000720  0E00               	movlw	0
  7102   000722  6FE7               	movwf	(_contador+1)& (0+255),b
  7103   000724  0E00               	movlw	0
  7104   000726  6FE6               	movwf	_contador& (0+255),b
  7105                           
  7106                           ;LAB4.c: 506:                     contador_dec=0;
  7107   000728  0E00               	movlw	0
  7108   00072A  6FE5               	movwf	(_contador_dec+1)& (0+255),b
  7109   00072C  0E00               	movlw	0
  7110   00072E  6FE4               	movwf	_contador_dec& (0+255),b
  7111                           
  7112                           ;LAB4.c: 507:                     LATE=0b111;
  7113   000730  0E07               	movlw	7
  7114   000732  6E8D               	movwf	141,c	;volatile
  7115   000734                     
  7116                           ; BSR set to: 0
  7117                           ;LAB4.c: 508:                     LATDbits.LATD0=0;
  7118   000734  908C               	bcf	140,0,c	;volatile
  7119   000736                     
  7120                           ; BSR set to: 0
  7121                           ;LAB4.c: 509:                     LATDbits.LATD1=0;
  7122   000736  928C               	bcf	140,1,c	;volatile
  7123   000738                     
  7124                           ; BSR set to: 0
  7125                           ;LAB4.c: 510:                     LATDbits.LATD2=0;
  7126   000738  948C               	bcf	140,2,c	;volatile
  7127   00073A                     
  7128                           ; BSR set to: 0
  7129                           ;LAB4.c: 511:                     LATDbits.LATD3=0;
  7130   00073A  968C               	bcf	140,3,c	;volatile
  7131                           
  7132                           ;LAB4.c: 513:                   break;
  7133   00073C  EFFC  F003         	goto	i1l3925
  7134   000740                     i1l3917:
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;LAB4.c: 515:                   back_l_En=1;
  7138   000740  0E00               	movlw	0
  7139   000742  6E46               	movwf	(_back_l_En+1)^0,c
  7140   000744  0E01               	movlw	1
  7141   000746  6E45               	movwf	_back_l_En^0,c
  7142   000748                     
  7143                           ; BSR set to: 0
  7144                           ;LAB4.c: 516:                   LATAbits.LA3=~LATAbits.LA3;
  7145   000748  B689               	btfsc	137,3,c	;volatile
  7146   00074A  EFA9  F003         	goto	i1u293_21
  7147   00074E  EFAC  F003         	goto	i1u293_20
  7148   000752                     i1u293_21:
  7149   000752  0E01               	movlw	1
  7150   000754  EFAD  F003         	goto	i1u293_26
  7151   000758                     i1u293_20:
  7152   000758  0E00               	movlw	0
  7153   00075A                     i1u293_26:
  7154   00075A  0AFF               	xorlw	255
  7155   00075C  6E32               	movwf	??_LOW_PRIORITY^0,c
  7156   00075E  4632               	rlncf	??_LOW_PRIORITY^0,f,c
  7157   000760  4632               	rlncf	??_LOW_PRIORITY^0,f,c
  7158   000762  4632               	rlncf	??_LOW_PRIORITY^0,f,c
  7159   000764  5089               	movf	137,w,c	;volatile
  7160   000766  1832               	xorwf	??_LOW_PRIORITY^0,w,c
  7161   000768  0BF7               	andlw	-9
  7162   00076A  1832               	xorwf	??_LOW_PRIORITY^0,w,c
  7163   00076C  6E89               	movwf	137,c	;volatile
  7164                           
  7165                           ;LAB4.c: 518:                   break;
  7166   00076E  EFFC  F003         	goto	i1l3925
  7167   000772                     i1l3923:
  7168                           
  7169                           ; BSR set to: 0
  7170   000772  504B               	movf	_Tecla^0,w,c
  7171                           
  7172                           ; Switch size 1, requested type "simple"
  7173                           ; Number of cases is 16, Range of values is 1 to 16
  7174                           ; switch strategies available:
  7175                           ; Name         Instructions Cycles
  7176                           ; simple_byte           49    25 (average)
  7177                           ;	Chosen strategy is simple_byte
  7178   000774  0A01               	xorlw	1	; case 1
  7179   000776  B4D8               	btfsc	status,2,c
  7180   000778  EF0E  F001         	goto	i1l3791
  7181   00077C  0A03               	xorlw	3	; case 2
  7182   00077E  B4D8               	btfsc	status,2,c
  7183   000780  EF2D  F001         	goto	i1l3795
  7184   000784  0A01               	xorlw	1	; case 3
  7185   000786  B4D8               	btfsc	status,2,c
  7186   000788  EF48  F001         	goto	i1l3799
  7187   00078C  0A07               	xorlw	7	; case 4
  7188   00078E  B4D8               	btfsc	status,2,c
  7189   000790  EF81  F002         	goto	i1l3855
  7190   000794  0A01               	xorlw	1	; case 5
  7191   000796  B4D8               	btfsc	status,2,c
  7192   000798  EF67  F001         	goto	i1l3803
  7193   00079C  0A03               	xorlw	3	; case 6
  7194   00079E  B4D8               	btfsc	status,2,c
  7195   0007A0  EF86  F001         	goto	i1l3807
  7196   0007A4  0A01               	xorlw	1	; case 7
  7197   0007A6  B4D8               	btfsc	status,2,c
  7198   0007A8  EFA5  F001         	goto	i1l3811
  7199   0007AC  0A0F               	xorlw	15	; case 8
  7200   0007AE  B4D8               	btfsc	status,2,c
  7201   0007B0  EF40  F002         	goto	i1l3831
  7202   0007B4  0A01               	xorlw	1	; case 9
  7203   0007B6  B4D8               	btfsc	status,2,c
  7204   0007B8  EFC4  F001         	goto	i1l3815
  7205   0007BC  0A03               	xorlw	3	; case 10
  7206   0007BE  B4D8               	btfsc	status,2,c
  7207   0007C0  EFE3  F001         	goto	i1l3819
  7208   0007C4  0A01               	xorlw	1	; case 11
  7209   0007C6  B4D8               	btfsc	status,2,c
  7210   0007C8  EF02  F002         	goto	i1l3823
  7211   0007CC  0A07               	xorlw	7	; case 12
  7212   0007CE  B4D8               	btfsc	status,2,c
  7213   0007D0  EF1C  F003         	goto	i1l3881
  7214   0007D4  0A01               	xorlw	1	; case 13
  7215   0007D6  B4D8               	btfsc	status,2,c
  7216   0007D8  EF38  F003         	goto	i1l3893
  7217   0007DC  0A03               	xorlw	3	; case 14
  7218   0007DE  B4D8               	btfsc	status,2,c
  7219   0007E0  EF21  F002         	goto	i1l3827
  7220   0007E4  0A01               	xorlw	1	; case 15
  7221   0007E6  B4D8               	btfsc	status,2,c
  7222   0007E8  EF60  F003         	goto	i1l3907
  7223   0007EC  0A1F               	xorlw	31	; case 16
  7224   0007EE  B4D8               	btfsc	status,2,c
  7225   0007F0  EFA0  F003         	goto	i1l3917
  7226   0007F4  EF66  F004         	goto	i1l207
  7227   0007F8                     i1l3925:
  7228                           
  7229                           ;LAB4.c: 525:           if(Numpad_en==1 && Borrado==0 && back_l_En==0 && reset_En==0)
  7230   0007F8  0100               	movlb	0	; () banked
  7231   0007FA  05BA               	decf	_Numpad_en& (0+255),w,b
  7232   0007FC  11BB               	iorwf	(_Numpad_en+1)& (0+255),w,b
  7233   0007FE  A4D8               	btfss	status,2,c
  7234   000800  EF04  F004         	goto	i1u294_21
  7235   000804  EF06  F004         	goto	i1u294_20
  7236   000808                     i1u294_21:
  7237   000808  EF33  F004         	goto	i1l3937
  7238   00080C                     i1u294_20:
  7239   00080C                     
  7240                           ; BSR set to: 0
  7241   00080C  51B8               	movf	_Borrado& (0+255),w,b
  7242   00080E  11B9               	iorwf	(_Borrado+1)& (0+255),w,b
  7243   000810  A4D8               	btfss	status,2,c
  7244   000812  EF0D  F004         	goto	i1u295_21
  7245   000816  EF0F  F004         	goto	i1u295_20
  7246   00081A                     i1u295_21:
  7247   00081A  EF33  F004         	goto	i1l3937
  7248   00081E                     i1u295_20:
  7249   00081E                     
  7250                           ; BSR set to: 0
  7251   00081E  5045               	movf	_back_l_En^0,w,c
  7252   000820  1046               	iorwf	(_back_l_En+1)^0,w,c
  7253   000822  A4D8               	btfss	status,2,c
  7254   000824  EF16  F004         	goto	i1u296_21
  7255   000828  EF18  F004         	goto	i1u296_20
  7256   00082C                     i1u296_21:
  7257   00082C  EF33  F004         	goto	i1l3937
  7258   000830                     i1u296_20:
  7259   000830                     
  7260                           ; BSR set to: 0
  7261   000830  5043               	movf	_reset_En^0,w,c
  7262   000832  1044               	iorwf	(_reset_En+1)^0,w,c
  7263   000834  A4D8               	btfss	status,2,c
  7264   000836  EF1F  F004         	goto	i1u297_21
  7265   00083A  EF21  F004         	goto	i1u297_20
  7266   00083E                     i1u297_21:
  7267   00083E  EF33  F004         	goto	i1l3937
  7268   000842                     i1u297_20:
  7269   000842                     
  7270                           ; BSR set to: 0
  7271                           ;LAB4.c: 526:           {;LAB4.c: 527:             sprintf(num_str, "%d", num);
  7272   000842  0ED6               	movlw	low _num_str
  7273   000844  6E1F               	movwf	i1sprintf@s^0,c
  7274   000846  6A20               	clrf	(i1sprintf@s+1)^0,c
  7275   000848  0E86               	movlw	low (STR_5+13)
  7276   00084A  6E21               	movwf	i1sprintf@fmt^0,c
  7277   00084C  0E7F               	movlw	high (STR_5+13)
  7278   00084E  6E22               	movwf	(i1sprintf@fmt+1)^0,c
  7279   000850  C0E2  F023         	movff	_num,?i1_sprintf+4
  7280   000854  C0E3  F024         	movff	_num+1,?i1_sprintf+5
  7281   000858  ECC3  F011         	call	i1_sprintf	;wreg free
  7282   00085C                     
  7283                           ;LAB4.c: 528:             Enter_en=1;
  7284   00085C  0E00               	movlw	0
  7285   00085E  0100               	movlb	0	; () banked
  7286   000860  6FBD               	movwf	(_Enter_en+1)& (0+255),b
  7287   000862  0E01               	movlw	1
  7288   000864  6FBC               	movwf	_Enter_en& (0+255),b
  7289   000866                     i1l3937:
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;LAB4.c: 531:         LATB=0b11110000;
  7293   000866  0EF0               	movlw	240
  7294   000868  6E8A               	movwf	138,c	;volatile
  7295   00086A                     
  7296                           ; BSR set to: 0
  7297                           ;LAB4.c: 532:         _delay((unsigned long)((100)*(8000000UL/4000.0)));
  7298   00086A  0E02               	movlw	2
  7299   00086C  6E33               	movwf	(??_LOW_PRIORITY+1)^0,c
  7300   00086E  0E04               	movlw	4
  7301   000870  6E32               	movwf	??_LOW_PRIORITY^0,c
  7302   000872  0EBA               	movlw	186
  7303   000874                     i1u326_27:
  7304   000874  2EE8               	decfsz	wreg,f,c
  7305   000876  D7FE               	bra	i1u326_27
  7306   000878  2E32               	decfsz	??_LOW_PRIORITY^0,f,c
  7307   00087A  D7FC               	bra	i1u326_27
  7308   00087C  2E33               	decfsz	(??_LOW_PRIORITY+1)^0,f,c
  7309   00087E  D7FA               	bra	i1u326_27
  7310   000880  D000               	nop2	
  7311   000882                     i1l3941:
  7312                           
  7313                           ;LAB4.c: 540:   if (E_stop_En==1)
  7314   000882  0441               	decf	_E_stop_En^0,w,c
  7315   000884  1042               	iorwf	(_E_stop_En+1)^0,w,c
  7316   000886  A4D8               	btfss	status,2,c
  7317   000888  EF48  F004         	goto	i1u298_21
  7318   00088C  EF4A  F004         	goto	i1u298_20
  7319   000890                     i1u298_21:
  7320   000890  EF65  F004         	goto	i1l209
  7321   000894                     i1u298_20:
  7322   000894                     
  7323                           ;LAB4.c: 541:   {;LAB4.c: 542:      INTCONbits.RBIF=1;
  7324   000894  80F2               	bsf	242,0,c	;volatile
  7325   000896                     
  7326                           ;LAB4.c: 544:      Numpad_en=0;
  7327   000896  0E00               	movlw	0
  7328   000898  0100               	movlb	0	; () banked
  7329   00089A  6FBB               	movwf	(_Numpad_en+1)& (0+255),b
  7330   00089C  0E00               	movlw	0
  7331   00089E  6FBA               	movwf	_Numpad_en& (0+255),b
  7332                           
  7333                           ;LAB4.c: 545:      Borrado=0;
  7334   0008A0  0E00               	movlw	0
  7335   0008A2  6FB9               	movwf	(_Borrado+1)& (0+255),b
  7336   0008A4  0E00               	movlw	0
  7337   0008A6  6FB8               	movwf	_Borrado& (0+255),b
  7338                           
  7339                           ;LAB4.c: 546:      back_l_En=0;
  7340   0008A8  0E00               	movlw	0
  7341   0008AA  6E46               	movwf	(_back_l_En+1)^0,c
  7342   0008AC  0E00               	movlw	0
  7343   0008AE  6E45               	movwf	_back_l_En^0,c
  7344                           
  7345                           ;LAB4.c: 547:      reset_En=0;
  7346   0008B0  0E00               	movlw	0
  7347   0008B2  6E44               	movwf	(_reset_En+1)^0,c
  7348   0008B4  0E00               	movlw	0
  7349   0008B6  6E43               	movwf	_reset_En^0,c
  7350                           
  7351                           ;LAB4.c: 548:      LATE=0b110;
  7352   0008B8  0E06               	movlw	6
  7353   0008BA  6E8D               	movwf	141,c	;volatile
  7354   0008BC                     
  7355                           ; BSR set to: 0
  7356                           ;LAB4.c: 549:      LATAbits.LA3=1;
  7357   0008BC  8689               	bsf	137,3,c	;volatile
  7358                           
  7359                           ;LAB4.c: 550:      count_En=0;
  7360   0008BE  0E00               	movlw	0
  7361   0008C0  6FB7               	movwf	(_count_En+1)& (0+255),b
  7362   0008C2  0E00               	movlw	0
  7363   0008C4  6FB6               	movwf	_count_En& (0+255),b
  7364                           
  7365                           ;LAB4.c: 551:   }
  7366   0008C6  EF66  F004         	goto	i1l207
  7367   0008CA                     i1l209:
  7368                           
  7369                           ;LAB4.c: 553:   {;LAB4.c: 554:   INTCONbits.RBIF=0;
  7370   0008CA  90F2               	bcf	242,0,c	;volatile
  7371   0008CC                     i1l207:
  7372   0008CC  C03E  FFF5         	movff	??_LOW_PRIORITY+12,tablat
  7373   0008D0  C03D  FFF8         	movff	??_LOW_PRIORITY+11,tblptru
  7374   0008D4  C03C  FFF7         	movff	??_LOW_PRIORITY+10,tblptrh
  7375   0008D8  C03B  FFF6         	movff	??_LOW_PRIORITY+9,tblptrl
  7376   0008DC  C03A  FFDA         	movff	??_LOW_PRIORITY+8,fsr2h
  7377   0008E0  C039  FFD9         	movff	??_LOW_PRIORITY+7,fsr2l
  7378   0008E4  C038  FFE2         	movff	??_LOW_PRIORITY+6,fsr1h
  7379   0008E8  C037  FFE1         	movff	??_LOW_PRIORITY+5,fsr1l
  7380   0008EC  C036  FFE0         	movff	??_LOW_PRIORITY+4,bsr
  7381   0008F0  C035  FFE8         	movff	??_LOW_PRIORITY+3,wreg
  7382   0008F4  C034  FFD8         	movff	??_LOW_PRIORITY+2,status
  7383   0008F8  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7384   0008FA  0010               	retfie	
  7385   0008FC                     __end_of_LOW_PRIORITY:
  7386                           	callstack 0
  7387                           
  7388 ;; *************** function i1_sprintf *****************
  7389 ;; Defined at:
  7390 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  s               2   30[COMRAM] PTR unsigned char 
  7393 ;;		 -> re_pcs_str(20), counted_pcs_str(20), main@countdown(20), num_str(10), 
  7394 ;;  fmt             2   32[COMRAM] PTR const unsigned char 
  7395 ;;		 -> STR_16(3), STR_7(13), STR_6(12), STR_5(16), 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;  f              12   37[COMRAM] struct _IO_FILE
  7398 ;;  ret             2    0        int 
  7399 ;;  ap              1   36[COMRAM] PTR void [1]
  7400 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  2   30[COMRAM] int 
  7403 ;; Registers used:
  7404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7410 ;;      Params:         6       0       0       0       0       0       0       0       0
  7411 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7413 ;;      Totals:        19       0       0       0       0       0       0       0       0
  7414 ;;Total ram usage:       19 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; Hardware stack levels required when called: 5
  7417 ;; This function calls:
  7418 ;;		i1_vfprintf
  7419 ;; This function is called by:
  7420 ;;		_LOW_PRIORITY
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text28
  7425   002386                     __ptext28:
  7426                           	callstack 0
  7427   002386                     i1_sprintf:
  7428                           	callstack 19
  7429   002386  0E23               	movlw	low (?i1_sprintf+4)
  7430   002388  6E25               	movwf	i1sprintf@ap^0,c
  7431   00238A  C01F  F026         	movff	i1sprintf@s,i1sprintf@f
  7432   00238E  C020  F027         	movff	i1sprintf@s+1,i1sprintf@f+1
  7433   002392  0E00               	movlw	0
  7434   002394  6E2A               	movwf	(i1sprintf@f+4)^0,c
  7435   002396  0E00               	movlw	0
  7436   002398  6E29               	movwf	(i1sprintf@f+3)^0,c
  7437   00239A  0E00               	movlw	0
  7438   00239C  6E31               	movwf	(i1sprintf@f+11)^0,c
  7439   00239E  0E00               	movlw	0
  7440   0023A0  6E30               	movwf	(i1sprintf@f+10)^0,c
  7441   0023A2  0E26               	movlw	low i1sprintf@f
  7442   0023A4  6E19               	movwf	i1vfprintf@fp^0,c
  7443   0023A6  C021  F01A         	movff	i1sprintf@fmt,i1vfprintf@fmt
  7444   0023AA  C022  F01B         	movff	i1sprintf@fmt+1,i1vfprintf@fmt+1
  7445   0023AE  0E25               	movlw	low i1sprintf@ap
  7446   0023B0  6E1C               	movwf	i1vfprintf@ap^0,c
  7447   0023B2  ECA2  F011         	call	i1_vfprintf	;wreg free
  7448   0023B6  5029               	movf	(i1sprintf@f+3)^0,w,c
  7449   0023B8  241F               	addwf	i1sprintf@s^0,w,c
  7450   0023BA  6ED9               	movwf	fsr2l,c
  7451   0023BC  502A               	movf	(i1sprintf@f+4)^0,w,c
  7452   0023BE  2020               	addwfc	(i1sprintf@s+1)^0,w,c
  7453   0023C0  6EDA               	movwf	fsr2h,c
  7454   0023C2  6ADF               	clrf	indf2,c
  7455   0023C4  0012               	return		;funcret
  7456   0023C6                     __end_ofi1_sprintf:
  7457                           	callstack 0
  7458                           
  7459 ;; *************** function i1_vfprintf *****************
  7460 ;; Defined at:
  7461 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  7464 ;;		 -> i1sprintf@f(12), sprintf@f(12), 
  7465 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
  7466 ;;		 -> STR_16(3), STR_7(13), STR_6(12), STR_5(16), 
  7467 ;;  ap              1   27[COMRAM] PTR PTR void 
  7468 ;;		 -> i1sprintf@ap(1), sprintf@ap(1), 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  cfmt            2   28[COMRAM] PTR unsigned char 
  7471 ;;		 -> STR_16(3), STR_7(13), STR_6(12), STR_5(16), 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  2   24[COMRAM] int 
  7474 ;; Registers used:
  7475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7481 ;;      Params:         4       0       0       0       0       0       0       0       0
  7482 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7484 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7485 ;;Total ram usage:        6 bytes
  7486 ;; Hardware stack levels used: 1
  7487 ;; Hardware stack levels required when called: 4
  7488 ;; This function calls:
  7489 ;;		i1_vfpfcnvrt
  7490 ;; This function is called by:
  7491 ;;		i1_sprintf
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text29
  7496   002344                     __ptext29:
  7497                           	callstack 0
  7498   002344                     i1_vfprintf:
  7499                           	callstack 19
  7500   002344                     
  7501                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7502   002344  C01A  F01D         	movff	i1vfprintf@fmt,i1vfprintf@cfmt
  7503   002348  C01B  F01E         	movff	i1vfprintf@fmt+1,i1vfprintf@cfmt+1
  7504                           
  7505                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7506   00234C  EFB0  F011         	goto	i1l3193
  7507   002350                     i1l3191:
  7508                           
  7509                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7510   002350  C019  F00C         	movff	i1vfprintf@fp,i1vfpfcnvrt@fp
  7511   002354  0E1D               	movlw	low i1vfprintf@cfmt
  7512   002356  6E0D               	movwf	i1vfpfcnvrt@fmt^0,c
  7513   002358  C01C  F00E         	movff	i1vfprintf@ap,i1vfpfcnvrt@ap
  7514   00235C  EC6F  F00B         	call	i1_vfpfcnvrt	;wreg free
  7515   002360                     i1l3193:
  7516                           
  7517                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7518   002360  C01D  FFF6         	movff	i1vfprintf@cfmt,tblptrl
  7519   002364  C01E  FFF7         	movff	i1vfprintf@cfmt+1,tblptrh
  7520   002368                     	if	0	;tblptru may be non-zero
  7521   002368                     	endif
  7522   002368                     	if	0	;tblptru may be non-zero
  7523   002368                     	endif
  7524   002368  0008               	tblrd		*
  7525   00236A  50F5               	movf	tablat,w,c
  7526   00236C  0900               	iorlw	0
  7527   00236E  A4D8               	btfss	status,2,c
  7528   002370  EFBC  F011         	goto	i1u229_21
  7529   002374  EFBE  F011         	goto	i1u229_20
  7530   002378                     i1u229_21:
  7531   002378  EFA8  F011         	goto	i1l3191
  7532   00237C                     i1u229_20:
  7533   00237C                     
  7534                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7535   00237C  0E00               	movlw	0
  7536   00237E  6E1A               	movwf	(?i1_vfprintf+1)^0,c
  7537   002380  0E00               	movlw	0
  7538   002382  6E19               	movwf	?i1_vfprintf^0,c
  7539   002384  0012               	return		;funcret
  7540   002386                     __end_ofi1_vfprintf:
  7541                           	callstack 0
  7542                           
  7543 ;; *************** function i1_vfpfcnvrt *****************
  7544 ;; Defined at:
  7545 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  7548 ;;		 -> i1sprintf@f(12), sprintf@f(12), 
  7549 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  7550 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
  7551 ;;  ap              1   13[COMRAM] PTR PTR void 
  7552 ;;		 -> i1sprintf@ap(1), sprintf@ap(1), 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;  convarg         4   19[COMRAM] struct .
  7555 ;;  cp              2   17[COMRAM] PTR unsigned char 
  7556 ;;		 -> STR_16(3), STR_7(13), STR_6(12), STR_5(16), 
  7557 ;;  c               1   23[COMRAM] unsigned char 
  7558 ;;  done            1   16[COMRAM] _Bool 
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7568 ;;      Params:         3       0       0       0       0       0       0       0       0
  7569 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7570 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7571 ;;      Totals:        13       0       0       0       0       0       0       0       0
  7572 ;;Total ram usage:       13 bytes
  7573 ;; Hardware stack levels used: 1
  7574 ;; Hardware stack levels required when called: 3
  7575 ;; This function calls:
  7576 ;;		i1___awdiv
  7577 ;;		i1___awmod
  7578 ;;		i1_abs
  7579 ;;		i1_fputc
  7580 ;; This function is called by:
  7581 ;;		i1_vfprintf
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text30
  7586   0016DE                     __ptext30:
  7587                           	callstack 0
  7588   0016DE                     i1_vfpfcnvrt:
  7589                           	callstack 19
  7590   0016DE                     
  7591                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7592   0016DE  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7593   0016E0  6ED9               	movwf	fsr2l,c
  7594   0016E2  6ADA               	clrf	fsr2h,c
  7595   0016E4  CFDE FFF6          	movff	postinc2,tblptrl
  7596   0016E8  CFDD FFF7          	movff	postdec2,tblptrh
  7597   0016EC                     	if	0	;tblptru may be non-zero
  7598   0016EC                     	endif
  7599   0016EC                     	if	0	;tblptru may be non-zero
  7600   0016EC                     	endif
  7601   0016EC  0008               	tblrd		*
  7602   0016EE  50F5               	movf	tablat,w,c
  7603   0016F0  0A25               	xorlw	37
  7604   0016F2  A4D8               	btfss	status,2,c
  7605   0016F4  EF7E  F00B         	goto	i1u203_21
  7606   0016F8  EF80  F00B         	goto	i1u203_20
  7607   0016FC                     i1u203_21:
  7608   0016FC  EF4E  F00C         	goto	i1l2961
  7609   001700                     i1u203_20:
  7610   001700                     
  7611                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7612   001700  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7613   001702  6ED9               	movwf	fsr2l,c
  7614   001704  6ADA               	clrf	fsr2h,c
  7615   001706  2ADE               	incf	postinc2,f,c
  7616   001708  0E00               	movlw	0
  7617   00170A  22DD               	addwfc	postdec2,f,c
  7618   00170C                     
  7619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7620   00170C  0E00               	movlw	0
  7621   00170E  0100               	movlb	0	; () banked
  7622   001710  6FA9               	movwf	(_width+1)& (0+255),b
  7623   001712  0E00               	movlw	0
  7624   001714  6FA8               	movwf	_width& (0+255),b
  7625   001716  C0A8  F0C0         	movff	_width,_flags
  7626   00171A                     
  7627                           ; BSR set to: 0
  7628                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7629   00171A  69AA               	setf	_prec& (0+255),b
  7630   00171C  69AB               	setf	(_prec+1)& (0+255),b
  7631   00171E                     
  7632                           ; BSR set to: 0
  7633                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  7634   00171E  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7635   001720  6ED9               	movwf	fsr2l,c
  7636   001722  6ADA               	clrf	fsr2h,c
  7637   001724  CFDE F012          	movff	postinc2,i1vfpfcnvrt@cp
  7638   001728  CFDD F013          	movff	postdec2,i1vfpfcnvrt@cp+1
  7639   00172C                     
  7640                           ; BSR set to: 0
  7641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7642   00172C  C012  FFF6         	movff	i1vfpfcnvrt@cp,tblptrl
  7643   001730  C013  FFF7         	movff	i1vfpfcnvrt@cp+1,tblptrh
  7644   001734                     	if	0	;tblptru may be non-zero
  7645   001734                     	endif
  7646   001734                     	if	0	;tblptru may be non-zero
  7647   001734                     	endif
  7648   001734  0008               	tblrd		*
  7649   001736  50F5               	movf	tablat,w,c
  7650   001738  0A64               	xorlw	100
  7651   00173A  B4D8               	btfsc	status,2,c
  7652   00173C  EFA2  F00B         	goto	i1u204_21
  7653   001740  EFA4  F00B         	goto	i1u204_20
  7654   001744                     i1u204_21:
  7655   001744  EFB2  F00B         	goto	i1l2931
  7656   001748                     i1u204_20:
  7657   001748                     
  7658                           ; BSR set to: 0
  7659   001748  C012  FFF6         	movff	i1vfpfcnvrt@cp,tblptrl
  7660   00174C  C013  FFF7         	movff	i1vfpfcnvrt@cp+1,tblptrh
  7661   001750                     	if	0	;tblptru may be non-zero
  7662   001750                     	endif
  7663   001750                     	if	0	;tblptru may be non-zero
  7664   001750                     	endif
  7665   001750  0008               	tblrd		*
  7666   001752  50F5               	movf	tablat,w,c
  7667   001754  0A69               	xorlw	105
  7668   001756  A4D8               	btfss	status,2,c
  7669   001758  EFB0  F00B         	goto	i1u205_21
  7670   00175C  EFB2  F00B         	goto	i1u205_20
  7671   001760                     i1u205_21:
  7672   001760  EF46  F00C         	goto	i1l2957
  7673   001764                     i1u205_20:
  7674   001764                     i1l2931:
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7678   001764  500E               	movf	i1vfpfcnvrt@ap^0,w,c
  7679   001766  6ED9               	movwf	fsr2l,c
  7680   001768  6ADA               	clrf	fsr2h,c
  7681   00176A  0E02               	movlw	2
  7682   00176C  26DF               	addwf	indf2,f,c
  7683   00176E  5CDF               	subwf	indf2,w,c
  7684   001770  6ED9               	movwf	fsr2l,c
  7685   001772  6ADA               	clrf	fsr2h,c
  7686   001774  CFDE F014          	movff	postinc2,i1vfpfcnvrt@convarg
  7687   001778  CFDE F015          	movff	postinc2,i1vfpfcnvrt@convarg+1
  7688   00177C                     
  7689                           ; BSR set to: 0
  7690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  7691   00177C  0E01               	movlw	1
  7692   00177E  2412               	addwf	i1vfpfcnvrt@cp^0,w,c
  7693   001780  6E0F               	movwf	??i1_vfpfcnvrt^0,c
  7694   001782  0E00               	movlw	0
  7695   001784  2013               	addwfc	(i1vfpfcnvrt@cp+1)^0,w,c
  7696   001786  6E10               	movwf	(??i1_vfpfcnvrt+1)^0,c
  7697   001788  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7698   00178A  6ED9               	movwf	fsr2l,c
  7699   00178C  6ADA               	clrf	fsr2h,c
  7700   00178E  C00F  FFDE         	movff	??i1_vfpfcnvrt,postinc2
  7701   001792  C010  FFDD         	movff	??i1_vfpfcnvrt+1,postdec2
  7702   001796                     
  7703                           ; BSR set to: 0
  7704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  7705   001796  0E20               	movlw	32
  7706   001798  6E18               	movwf	i1vfpfcnvrt@c^0,c
  7707                           
  7708                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  7709   00179A  BE15               	btfsc	(i1vfpfcnvrt@convarg+1)^0,7,c
  7710   00179C  EFD2  F00B         	goto	i1u206_21
  7711   0017A0  EFD5  F00B         	goto	i1u206_20
  7712   0017A4                     i1u206_21:
  7713   0017A4  0E01               	movlw	1
  7714   0017A6  EFD6  F00B         	goto	i1u207_20
  7715   0017AA                     i1u206_20:
  7716   0017AA  0E00               	movlw	0
  7717   0017AC                     i1u207_20:
  7718   0017AC  6E11               	movwf	i1vfpfcnvrt@done^0,c
  7719   0017AE                     i1l2937:
  7720                           
  7721                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  7722   0017AE  0618               	decf	i1vfpfcnvrt@c^0,f,c
  7723   0017B0  0E00               	movlw	low _dbuf
  7724   0017B2  2418               	addwf	i1vfpfcnvrt@c^0,w,c
  7725   0017B4  6ED9               	movwf	fsr2l,c
  7726   0017B6  6ADA               	clrf	fsr2h,c
  7727   0017B8  0E01               	movlw	high _dbuf
  7728   0017BA  22DA               	addwfc	fsr2h,f,c
  7729   0017BC  C014  F002         	movff	i1vfpfcnvrt@convarg,i1___awmod@dividend
  7730   0017C0  C015  F003         	movff	i1vfpfcnvrt@convarg+1,i1___awmod@dividend+1
  7731   0017C4  0E00               	movlw	0
  7732   0017C6  6E05               	movwf	(i1___awmod@divisor+1)^0,c
  7733   0017C8  0E0A               	movlw	10
  7734   0017CA  6E04               	movwf	i1___awmod@divisor^0,c
  7735   0017CC  ECB0  F00F         	call	i1___awmod	;wreg free
  7736   0017D0  C002  F008         	movff	?i1___awmod,i1abs@a
  7737   0017D4  C003  F009         	movff	?i1___awmod+1,i1abs@a+1
  7738   0017D8  EC59  F012         	call	i1_abs	;wreg free
  7739   0017DC  5008               	movf	?i1_abs^0,w,c
  7740   0017DE  0F30               	addlw	48
  7741   0017E0  6EDF               	movwf	indf2,c
  7742   0017E2                     
  7743                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  7744   0017E2  C014  F002         	movff	i1vfpfcnvrt@convarg,i1___awdiv@dividend
  7745   0017E6  C015  F003         	movff	i1vfpfcnvrt@convarg+1,i1___awdiv@dividend+1
  7746   0017EA  0E00               	movlw	0
  7747   0017EC  6E05               	movwf	(i1___awdiv@divisor+1)^0,c
  7748   0017EE  0E0A               	movlw	10
  7749   0017F0  6E04               	movwf	i1___awdiv@divisor^0,c
  7750   0017F2  EC3A  F00E         	call	i1___awdiv	;wreg free
  7751   0017F6  C002  F014         	movff	?i1___awdiv,i1vfpfcnvrt@convarg
  7752   0017FA  C003  F015         	movff	?i1___awdiv+1,i1vfpfcnvrt@convarg+1
  7753   0017FE                     
  7754                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  7755   0017FE  5014               	movf	i1vfpfcnvrt@convarg^0,w,c
  7756   001800  1015               	iorwf	(i1vfpfcnvrt@convarg+1)^0,w,c
  7757   001802  B4D8               	btfsc	status,2,c
  7758   001804  EF06  F00C         	goto	i1u208_21
  7759   001808  EF08  F00C         	goto	i1u208_20
  7760   00180C                     i1u208_21:
  7761   00180C  EF10  F00C         	goto	i1l2945
  7762   001810                     i1u208_20:
  7763   001810  5018               	movf	i1vfpfcnvrt@c^0,w,c
  7764   001812  A4D8               	btfss	status,2,c
  7765   001814  EF0E  F00C         	goto	i1u209_21
  7766   001818  EF10  F00C         	goto	i1u209_20
  7767   00181C                     i1u209_21:
  7768   00181C  EFD7  F00B         	goto	i1l2937
  7769   001820                     i1u209_20:
  7770   001820                     i1l2945:
  7771                           
  7772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  7773   001820  5018               	movf	i1vfpfcnvrt@c^0,w,c
  7774   001822  B4D8               	btfsc	status,2,c
  7775   001824  EF16  F00C         	goto	i1u210_21
  7776   001828  EF18  F00C         	goto	i1u210_20
  7777   00182C                     i1u210_21:
  7778   00182C  EF3B  F00C         	goto	i1l2955
  7779   001830                     i1u210_20:
  7780   001830  5011               	movf	i1vfpfcnvrt@done^0,w,c
  7781   001832  B4D8               	btfsc	status,2,c
  7782   001834  EF1E  F00C         	goto	i1u211_21
  7783   001838  EF20  F00C         	goto	i1u211_20
  7784   00183C                     i1u211_21:
  7785   00183C  EF3B  F00C         	goto	i1l2955
  7786   001840                     i1u211_20:
  7787   001840                     
  7788                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  7789   001840  0618               	decf	i1vfpfcnvrt@c^0,f,c
  7790   001842  0E00               	movlw	low _dbuf
  7791   001844  2418               	addwf	i1vfpfcnvrt@c^0,w,c
  7792   001846  6ED9               	movwf	fsr2l,c
  7793   001848  6ADA               	clrf	fsr2h,c
  7794   00184A  0E01               	movlw	high _dbuf
  7795   00184C  22DA               	addwfc	fsr2h,f,c
  7796   00184E  0E2D               	movlw	45
  7797   001850  6EDF               	movwf	indf2,c
  7798   001852  EF3B  F00C         	goto	i1l2955
  7799   001856                     i1l2951:
  7800                           
  7801                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  7802   001856  0E00               	movlw	low _dbuf
  7803   001858  2418               	addwf	i1vfpfcnvrt@c^0,w,c
  7804   00185A  6ED9               	movwf	fsr2l,c
  7805   00185C  6ADA               	clrf	fsr2h,c
  7806   00185E  0E01               	movlw	high _dbuf
  7807   001860  22DA               	addwfc	fsr2h,f,c
  7808   001862  50DF               	movf	indf2,w,c
  7809   001864  6E0F               	movwf	??i1_vfpfcnvrt^0,c
  7810   001866  500F               	movf	??i1_vfpfcnvrt^0,w,c
  7811   001868  6E02               	movwf	i1fputc@c^0,c
  7812   00186A  6A03               	clrf	(i1fputc@c+1)^0,c
  7813   00186C  C00C  F004         	movff	i1vfpfcnvrt@fp,i1fputc@fp
  7814   001870  ECFA  F00E         	call	i1_fputc	;wreg free
  7815   001874  2A18               	incf	i1vfpfcnvrt@c^0,f,c
  7816   001876                     i1l2955:
  7817                           
  7818                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  7819   001876  0E20               	movlw	32
  7820   001878  1818               	xorwf	i1vfpfcnvrt@c^0,w,c
  7821   00187A  A4D8               	btfss	status,2,c
  7822   00187C  EF42  F00C         	goto	i1u212_21
  7823   001880  EF44  F00C         	goto	i1u212_20
  7824   001884                     i1u212_21:
  7825   001884  EF2B  F00C         	goto	i1l2951
  7826   001888                     i1u212_20:
  7827   001888  EF5F  F00C         	goto	i1l1151
  7828   00188C                     i1l2957:
  7829                           
  7830                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7831   00188C  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7832   00188E  6ED9               	movwf	fsr2l,c
  7833   001890  6ADA               	clrf	fsr2h,c
  7834   001892  2ADE               	incf	postinc2,f,c
  7835   001894  0E00               	movlw	0
  7836   001896  22DD               	addwfc	postdec2,f,c
  7837   001898  EF5F  F00C         	goto	i1l1151
  7838   00189C                     i1l2961:
  7839                           
  7840                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7841   00189C  500D               	movf	i1vfpfcnvrt@fmt^0,w,c
  7842   00189E  6ED9               	movwf	fsr2l,c
  7843   0018A0  6ADA               	clrf	fsr2h,c
  7844   0018A2  CFDE FFF6          	movff	postinc2,tblptrl
  7845   0018A6  CFDD FFF7          	movff	postdec2,tblptrh
  7846   0018AA                     	if	0	;tblptru may be non-zero
  7847   0018AA                     	endif
  7848   0018AA                     	if	0	;tblptru may be non-zero
  7849   0018AA                     	endif
  7850   0018AA  0008               	tblrd		*
  7851   0018AC  50F5               	movf	tablat,w,c
  7852   0018AE  6E02               	movwf	i1fputc@c^0,c
  7853   0018B0  6A03               	clrf	(i1fputc@c+1)^0,c
  7854   0018B2  C00C  F004         	movff	i1vfpfcnvrt@fp,i1fputc@fp
  7855   0018B6  ECFA  F00E         	call	i1_fputc	;wreg free
  7856   0018BA  EF46  F00C         	goto	i1l2957
  7857   0018BE                     i1l1151:
  7858   0018BE  0012               	return		;funcret
  7859   0018C0                     __end_ofi1_vfpfcnvrt:
  7860                           	callstack 0
  7861                           
  7862 ;; *************** function i1_fputc *****************
  7863 ;; Defined at:
  7864 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  c               2    1[COMRAM] int 
  7867 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  7868 ;;		 -> i1sprintf@f(12), sprintf@f(12), 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;		None
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  2    1[COMRAM] int 
  7873 ;; Registers used:
  7874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7880 ;;      Params:         3       0       0       0       0       0       0       0       0
  7881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7882 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7883 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7884 ;;Total ram usage:        8 bytes
  7885 ;; Hardware stack levels used: 1
  7886 ;; Hardware stack levels required when called: 2
  7887 ;; This function calls:
  7888 ;;		i1_putch
  7889 ;; This function is called by:
  7890 ;;		i1_vfpfcnvrt
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text31
  7895   001DF4                     __ptext31:
  7896                           	callstack 0
  7897   001DF4                     i1_fputc:
  7898                           	callstack 19
  7899   001DF4  5004               	movf	i1fputc@fp^0,w,c
  7900   001DF6  B4D8               	btfsc	status,2,c
  7901   001DF8  EF00  F00F         	goto	i1u185_21
  7902   001DFC  EF02  F00F         	goto	i1u185_20
  7903   001E00                     i1u185_21:
  7904   001E00  EF0A  F00F         	goto	i1l2819
  7905   001E04                     i1u185_20:
  7906   001E04  5004               	movf	i1fputc@fp^0,w,c
  7907   001E06  A4D8               	btfss	status,2,c
  7908   001E08  EF08  F00F         	goto	i1u186_21
  7909   001E0C  EF0A  F00F         	goto	i1u186_20
  7910   001E10                     i1u186_21:
  7911   001E10  EF0F  F00F         	goto	i1l2821
  7912   001E14                     i1u186_20:
  7913   001E14                     i1l2819:
  7914   001E14  5002               	movf	i1fputc@c^0,w,c
  7915   001E16  ECFD  F012         	call	i1_putch
  7916   001E1A  EF56  F00F         	goto	i1l1176
  7917   001E1E                     i1l2821:
  7918   001E1E  5004               	movf	i1fputc@fp^0,w,c
  7919   001E20  6ED9               	movwf	fsr2l,c
  7920   001E22  6ADA               	clrf	fsr2h,c
  7921   001E24  0E0A               	movlw	10
  7922   001E26  26D9               	addwf	fsr2l,f,c
  7923   001E28  50DE               	movf	postinc2,w,c
  7924   001E2A  10DE               	iorwf	postinc2,w,c
  7925   001E2C  B4D8               	btfsc	status,2,c
  7926   001E2E  EF1B  F00F         	goto	i1u187_21
  7927   001E32  EF1D  F00F         	goto	i1u187_20
  7928   001E36                     i1u187_21:
  7929   001E36  EF36  F00F         	goto	i1l2825
  7930   001E3A                     i1u187_20:
  7931   001E3A  5004               	movf	i1fputc@fp^0,w,c
  7932   001E3C  6ED9               	movwf	fsr2l,c
  7933   001E3E  6ADA               	clrf	fsr2h,c
  7934   001E40  0E0A               	movlw	10
  7935   001E42  26D9               	addwf	fsr2l,f,c
  7936   001E44  5004               	movf	i1fputc@fp^0,w,c
  7937   001E46  6EE1               	movwf	fsr1l,c
  7938   001E48  6AE2               	clrf	fsr1h,c
  7939   001E4A  0E03               	movlw	3
  7940   001E4C  26E1               	addwf	fsr1l,f,c
  7941   001E4E  50DE               	movf	postinc2,w,c
  7942   001E50  5CE6               	subwf	postinc1,w,c
  7943   001E52  50E6               	movf	postinc1,w,c
  7944   001E54  0A80               	xorlw	128
  7945   001E56  6E09               	movwf	(??i1_fputc+4)^0,c
  7946   001E58  50DE               	movf	postinc2,w,c
  7947   001E5A  0A80               	xorlw	128
  7948   001E5C  5809               	subwfb	(??i1_fputc+4)^0,w,c
  7949   001E5E  B0D8               	btfsc	status,0,c
  7950   001E60  EF34  F00F         	goto	i1u188_21
  7951   001E64  EF36  F00F         	goto	i1u188_20
  7952   001E68                     i1u188_21:
  7953   001E68  EF56  F00F         	goto	i1l1176
  7954   001E6C                     i1u188_20:
  7955   001E6C                     i1l2825:
  7956   001E6C  5004               	movf	i1fputc@fp^0,w,c
  7957   001E6E  6ED9               	movwf	fsr2l,c
  7958   001E70  6ADA               	clrf	fsr2h,c
  7959   001E72  0E03               	movlw	3
  7960   001E74  26D9               	addwf	fsr2l,f,c
  7961   001E76  CFDE F005          	movff	postinc2,??i1_fputc
  7962   001E7A  CFDD F006          	movff	postdec2,??i1_fputc+1
  7963   001E7E  5004               	movf	i1fputc@fp^0,w,c
  7964   001E80  6ED9               	movwf	fsr2l,c
  7965   001E82  6ADA               	clrf	fsr2h,c
  7966   001E84  CFDE F007          	movff	postinc2,??i1_fputc+2
  7967   001E88  CFDD F008          	movff	postdec2,??i1_fputc+3
  7968   001E8C  5005               	movf	??i1_fputc^0,w,c
  7969   001E8E  2407               	addwf	(??i1_fputc+2)^0,w,c
  7970   001E90  6ED9               	movwf	fsr2l,c
  7971   001E92  5006               	movf	(??i1_fputc+1)^0,w,c
  7972   001E94  2008               	addwfc	(??i1_fputc+3)^0,w,c
  7973   001E96  6EDA               	movwf	fsr2h,c
  7974   001E98  C002  FFDF         	movff	i1fputc@c,indf2
  7975   001E9C  5004               	movf	i1fputc@fp^0,w,c
  7976   001E9E  6ED9               	movwf	fsr2l,c
  7977   001EA0  6ADA               	clrf	fsr2h,c
  7978   001EA2  0E03               	movlw	3
  7979   001EA4  26D9               	addwf	fsr2l,f,c
  7980   001EA6  2ADE               	incf	postinc2,f,c
  7981   001EA8  0E00               	movlw	0
  7982   001EAA  22DD               	addwfc	postdec2,f,c
  7983   001EAC                     i1l1176:
  7984   001EAC  0012               	return		;funcret
  7985   001EAE                     __end_ofi1_fputc:
  7986                           	callstack 0
  7987                           
  7988 ;; *************** function i1_putch *****************
  7989 ;; Defined at:
  7990 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  c               1    wreg     unsigned char 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  c               1  (no storage) unsigned char 
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      void 
  7997 ;; Registers used:
  7998 ;;		wreg
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8004 ;;      Params:         0       0       0       0       0       0       0       0       0
  8005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8008 ;;Total ram usage:        0 bytes
  8009 ;; Hardware stack levels used: 1
  8010 ;; Hardware stack levels required when called: 1
  8011 ;; This function calls:
  8012 ;;		Nothing
  8013 ;; This function is called by:
  8014 ;;		i1_fputc
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text32
  8019   0025FA                     __ptext32:
  8020                           	callstack 0
  8021   0025FA                     i1_putch:
  8022                           	callstack 19
  8023   0025FA  0012               	return		;funcret
  8024   0025FC                     __end_ofi1_putch:
  8025                           	callstack 0
  8026                           
  8027 ;; *************** function i1_abs *****************
  8028 ;; Defined at:
  8029 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  a               2    7[COMRAM] int 
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;		None
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  2    7[COMRAM] int 
  8036 ;; Registers used:
  8037 ;;		wreg, status,2, status,0
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8043 ;;      Params:         2       0       0       0       0       0       0       0       0
  8044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8045 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8046 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8047 ;;Total ram usage:        4 bytes
  8048 ;; Hardware stack levels used: 1
  8049 ;; Hardware stack levels required when called: 1
  8050 ;; This function calls:
  8051 ;;		Nothing
  8052 ;; This function is called by:
  8053 ;;		i1_vfpfcnvrt
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text33
  8058   0024B2                     __ptext33:
  8059                           	callstack 0
  8060   0024B2                     i1_abs:
  8061                           	callstack 20
  8062   0024B2  BE09               	btfsc	(i1abs@a+1)^0,7,c
  8063   0024B4  EF5E  F012         	goto	i1u184_21
  8064   0024B8  EF60  F012         	goto	i1u184_20
  8065   0024BC                     i1u184_21:
  8066   0024BC  EF66  F012         	goto	i1l1161
  8067   0024C0                     i1u184_20:
  8068   0024C0  C008  F008         	movff	i1abs@a,?i1_abs
  8069   0024C4  C009  F009         	movff	i1abs@a+1,?i1_abs+1
  8070   0024C8  EF72  F012         	goto	i1l1164
  8071   0024CC                     i1l1161:
  8072   0024CC  C008  F00A         	movff	i1abs@a,??i1_abs
  8073   0024D0  C009  F00B         	movff	i1abs@a+1,??i1_abs+1
  8074   0024D4  1E0A               	comf	??i1_abs^0,f,c
  8075   0024D6  1E0B               	comf	(??i1_abs+1)^0,f,c
  8076   0024D8  4A0A               	infsnz	??i1_abs^0,f,c
  8077   0024DA  2A0B               	incf	(??i1_abs+1)^0,f,c
  8078   0024DC  C00A  F008         	movff	??i1_abs,?i1_abs
  8079   0024E0  C00B  F009         	movff	??i1_abs+1,?i1_abs+1
  8080   0024E4                     i1l1164:
  8081   0024E4  0012               	return		;funcret
  8082   0024E6                     __end_ofi1_abs:
  8083                           	callstack 0
  8084                           
  8085 ;; *************** function i1___awmod *****************
  8086 ;; Defined at:
  8087 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  dividend        2    1[COMRAM] int 
  8090 ;;  divisor         2    3[COMRAM] int 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;  sign            1    6[COMRAM] unsigned char 
  8093 ;;  counter         1    5[COMRAM] unsigned char 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  2    1[COMRAM] int 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8103 ;;      Params:         4       0       0       0       0       0       0       0       0
  8104 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8106 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8107 ;;Total ram usage:        6 bytes
  8108 ;; Hardware stack levels used: 1
  8109 ;; Hardware stack levels required when called: 1
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		i1_vfpfcnvrt
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text34
  8118   001F60                     __ptext34:
  8119                           	callstack 0
  8120   001F60                     i1___awmod:
  8121                           	callstack 20
  8122   001F60  0E00               	movlw	0
  8123   001F62  6E07               	movwf	i1___awmod@sign^0,c
  8124   001F64  BE03               	btfsc	(i1___awmod@dividend+1)^0,7,c
  8125   001F66  EFB9  F00F         	goto	i1u178_20
  8126   001F6A  EFB7  F00F         	goto	i1u178_21
  8127   001F6E                     i1u178_21:
  8128   001F6E  EFBF  F00F         	goto	i1l2783
  8129   001F72                     i1u178_20:
  8130   001F72  6C02               	negf	i1___awmod@dividend^0,c
  8131   001F74  1E03               	comf	(i1___awmod@dividend+1)^0,f,c
  8132   001F76  B0D8               	btfsc	status,0,c
  8133   001F78  2A03               	incf	(i1___awmod@dividend+1)^0,f,c
  8134   001F7A  0E01               	movlw	1
  8135   001F7C  6E07               	movwf	i1___awmod@sign^0,c
  8136   001F7E                     i1l2783:
  8137   001F7E  BE05               	btfsc	(i1___awmod@divisor+1)^0,7,c
  8138   001F80  EFC6  F00F         	goto	i1u179_20
  8139   001F84  EFC4  F00F         	goto	i1u179_21
  8140   001F88                     i1u179_21:
  8141   001F88  EFCA  F00F         	goto	i1l2787
  8142   001F8C                     i1u179_20:
  8143   001F8C  6C04               	negf	i1___awmod@divisor^0,c
  8144   001F8E  1E05               	comf	(i1___awmod@divisor+1)^0,f,c
  8145   001F90  B0D8               	btfsc	status,0,c
  8146   001F92  2A05               	incf	(i1___awmod@divisor+1)^0,f,c
  8147   001F94                     i1l2787:
  8148   001F94  5004               	movf	i1___awmod@divisor^0,w,c
  8149   001F96  1005               	iorwf	(i1___awmod@divisor+1)^0,w,c
  8150   001F98  B4D8               	btfsc	status,2,c
  8151   001F9A  EFD1  F00F         	goto	i1u180_21
  8152   001F9E  EFD3  F00F         	goto	i1u180_20
  8153   001FA2                     i1u180_21:
  8154   001FA2  EFF7  F00F         	goto	i1l2803
  8155   001FA6                     i1u180_20:
  8156   001FA6  0E01               	movlw	1
  8157   001FA8  6E06               	movwf	i1___awmod@counter^0,c
  8158   001FAA  EFDB  F00F         	goto	i1l2793
  8159   001FAE                     i1l2791:
  8160   001FAE  90D8               	bcf	status,0,c
  8161   001FB0  3604               	rlcf	i1___awmod@divisor^0,f,c
  8162   001FB2  3605               	rlcf	(i1___awmod@divisor+1)^0,f,c
  8163   001FB4  2A06               	incf	i1___awmod@counter^0,f,c
  8164   001FB6                     i1l2793:
  8165   001FB6  AE05               	btfss	(i1___awmod@divisor+1)^0,7,c
  8166   001FB8  EFE0  F00F         	goto	i1u181_21
  8167   001FBC  EFE2  F00F         	goto	i1u181_20
  8168   001FC0                     i1u181_21:
  8169   001FC0  EFD7  F00F         	goto	i1l2791
  8170   001FC4                     i1u181_20:
  8171   001FC4                     i1l2795:
  8172   001FC4  5004               	movf	i1___awmod@divisor^0,w,c
  8173   001FC6  5C02               	subwf	i1___awmod@dividend^0,w,c
  8174   001FC8  5005               	movf	(i1___awmod@divisor+1)^0,w,c
  8175   001FCA  5803               	subwfb	(i1___awmod@dividend+1)^0,w,c
  8176   001FCC  A0D8               	btfss	status,0,c
  8177   001FCE  EFEB  F00F         	goto	i1u182_21
  8178   001FD2  EFED  F00F         	goto	i1u182_20
  8179   001FD6                     i1u182_21:
  8180   001FD6  EFF1  F00F         	goto	i1l2799
  8181   001FDA                     i1u182_20:
  8182   001FDA  5004               	movf	i1___awmod@divisor^0,w,c
  8183   001FDC  5E02               	subwf	i1___awmod@dividend^0,f,c
  8184   001FDE  5005               	movf	(i1___awmod@divisor+1)^0,w,c
  8185   001FE0  5A03               	subwfb	(i1___awmod@dividend+1)^0,f,c
  8186   001FE2                     i1l2799:
  8187   001FE2  90D8               	bcf	status,0,c
  8188   001FE4  3205               	rrcf	(i1___awmod@divisor+1)^0,f,c
  8189   001FE6  3204               	rrcf	i1___awmod@divisor^0,f,c
  8190   001FE8  2E06               	decfsz	i1___awmod@counter^0,f,c
  8191   001FEA  EFE2  F00F         	goto	i1l2795
  8192   001FEE                     i1l2803:
  8193   001FEE  5007               	movf	i1___awmod@sign^0,w,c
  8194   001FF0  B4D8               	btfsc	status,2,c
  8195   001FF2  EFFD  F00F         	goto	i1u183_21
  8196   001FF6  EFFF  F00F         	goto	i1u183_20
  8197   001FFA                     i1u183_21:
  8198   001FFA  EF03  F010         	goto	i1l2807
  8199   001FFE                     i1u183_20:
  8200   001FFE  6C02               	negf	i1___awmod@dividend^0,c
  8201   002000  1E03               	comf	(i1___awmod@dividend+1)^0,f,c
  8202   002002  B0D8               	btfsc	status,0,c
  8203   002004  2A03               	incf	(i1___awmod@dividend+1)^0,f,c
  8204   002006                     i1l2807:
  8205   002006  C002  F002         	movff	i1___awmod@dividend,?i1___awmod
  8206   00200A  C003  F003         	movff	i1___awmod@dividend+1,?i1___awmod+1
  8207   00200E  0012               	return		;funcret
  8208   002010                     __end_ofi1___awmod:
  8209                           	callstack 0
  8210                           
  8211 ;; *************** function i1___awdiv *****************
  8212 ;; Defined at:
  8213 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;  dividend        2    1[COMRAM] int 
  8216 ;;  divisor         2    3[COMRAM] int 
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  quotient        2    7[COMRAM] int 
  8219 ;;  sign            1    6[COMRAM] unsigned char 
  8220 ;;  counter         1    5[COMRAM] unsigned char 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  2    1[COMRAM] int 
  8223 ;; Registers used:
  8224 ;;		wreg, status,2, status,0
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8230 ;;      Params:         4       0       0       0       0       0       0       0       0
  8231 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8233 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8234 ;;Total ram usage:        8 bytes
  8235 ;; Hardware stack levels used: 1
  8236 ;; Hardware stack levels required when called: 1
  8237 ;; This function calls:
  8238 ;;		Nothing
  8239 ;; This function is called by:
  8240 ;;		i1_vfpfcnvrt
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244                           	psect	text35
  8245   001C74                     __ptext35:
  8246                           	callstack 0
  8247   001C74                     i1___awdiv:
  8248                           	callstack 20
  8249   001C74  0E00               	movlw	0
  8250   001C76  6E07               	movwf	i1___awdiv@sign^0,c
  8251   001C78  BE05               	btfsc	(i1___awdiv@divisor+1)^0,7,c
  8252   001C7A  EF43  F00E         	goto	i1u172_20
  8253   001C7E  EF41  F00E         	goto	i1u172_21
  8254   001C82                     i1u172_21:
  8255   001C82  EF49  F00E         	goto	i1l2739
  8256   001C86                     i1u172_20:
  8257   001C86  6C04               	negf	i1___awdiv@divisor^0,c
  8258   001C88  1E05               	comf	(i1___awdiv@divisor+1)^0,f,c
  8259   001C8A  B0D8               	btfsc	status,0,c
  8260   001C8C  2A05               	incf	(i1___awdiv@divisor+1)^0,f,c
  8261   001C8E  0E01               	movlw	1
  8262   001C90  6E07               	movwf	i1___awdiv@sign^0,c
  8263   001C92                     i1l2739:
  8264   001C92  BE03               	btfsc	(i1___awdiv@dividend+1)^0,7,c
  8265   001C94  EF50  F00E         	goto	i1u173_20
  8266   001C98  EF4E  F00E         	goto	i1u173_21
  8267   001C9C                     i1u173_21:
  8268   001C9C  EF56  F00E         	goto	i1l2745
  8269   001CA0                     i1u173_20:
  8270   001CA0  6C02               	negf	i1___awdiv@dividend^0,c
  8271   001CA2  1E03               	comf	(i1___awdiv@dividend+1)^0,f,c
  8272   001CA4  B0D8               	btfsc	status,0,c
  8273   001CA6  2A03               	incf	(i1___awdiv@dividend+1)^0,f,c
  8274   001CA8  0E01               	movlw	1
  8275   001CAA  1A07               	xorwf	i1___awdiv@sign^0,f,c
  8276   001CAC                     i1l2745:
  8277   001CAC  0E00               	movlw	0
  8278   001CAE  6E09               	movwf	(i1___awdiv@quotient+1)^0,c
  8279   001CB0  0E00               	movlw	0
  8280   001CB2  6E08               	movwf	i1___awdiv@quotient^0,c
  8281   001CB4  5004               	movf	i1___awdiv@divisor^0,w,c
  8282   001CB6  1005               	iorwf	(i1___awdiv@divisor+1)^0,w,c
  8283   001CB8  B4D8               	btfsc	status,2,c
  8284   001CBA  EF61  F00E         	goto	i1u174_21
  8285   001CBE  EF63  F00E         	goto	i1u174_20
  8286   001CC2                     i1u174_21:
  8287   001CC2  EF8B  F00E         	goto	i1l2767
  8288   001CC6                     i1u174_20:
  8289   001CC6  0E01               	movlw	1
  8290   001CC8  6E06               	movwf	i1___awdiv@counter^0,c
  8291   001CCA  EF6B  F00E         	goto	i1l2753
  8292   001CCE                     i1l2751:
  8293   001CCE  90D8               	bcf	status,0,c
  8294   001CD0  3604               	rlcf	i1___awdiv@divisor^0,f,c
  8295   001CD2  3605               	rlcf	(i1___awdiv@divisor+1)^0,f,c
  8296   001CD4  2A06               	incf	i1___awdiv@counter^0,f,c
  8297   001CD6                     i1l2753:
  8298   001CD6  AE05               	btfss	(i1___awdiv@divisor+1)^0,7,c
  8299   001CD8  EF70  F00E         	goto	i1u175_21
  8300   001CDC  EF72  F00E         	goto	i1u175_20
  8301   001CE0                     i1u175_21:
  8302   001CE0  EF67  F00E         	goto	i1l2751
  8303   001CE4                     i1u175_20:
  8304   001CE4                     i1l2755:
  8305   001CE4  90D8               	bcf	status,0,c
  8306   001CE6  3608               	rlcf	i1___awdiv@quotient^0,f,c
  8307   001CE8  3609               	rlcf	(i1___awdiv@quotient+1)^0,f,c
  8308   001CEA  5004               	movf	i1___awdiv@divisor^0,w,c
  8309   001CEC  5C02               	subwf	i1___awdiv@dividend^0,w,c
  8310   001CEE  5005               	movf	(i1___awdiv@divisor+1)^0,w,c
  8311   001CF0  5803               	subwfb	(i1___awdiv@dividend+1)^0,w,c
  8312   001CF2  A0D8               	btfss	status,0,c
  8313   001CF4  EF7E  F00E         	goto	i1u176_21
  8314   001CF8  EF80  F00E         	goto	i1u176_20
  8315   001CFC                     i1u176_21:
  8316   001CFC  EF85  F00E         	goto	i1l2763
  8317   001D00                     i1u176_20:
  8318   001D00  5004               	movf	i1___awdiv@divisor^0,w,c
  8319   001D02  5E02               	subwf	i1___awdiv@dividend^0,f,c
  8320   001D04  5005               	movf	(i1___awdiv@divisor+1)^0,w,c
  8321   001D06  5A03               	subwfb	(i1___awdiv@dividend+1)^0,f,c
  8322   001D08  8008               	bsf	i1___awdiv@quotient^0,0,c
  8323   001D0A                     i1l2763:
  8324   001D0A  90D8               	bcf	status,0,c
  8325   001D0C  3205               	rrcf	(i1___awdiv@divisor+1)^0,f,c
  8326   001D0E  3204               	rrcf	i1___awdiv@divisor^0,f,c
  8327   001D10  2E06               	decfsz	i1___awdiv@counter^0,f,c
  8328   001D12  EF72  F00E         	goto	i1l2755
  8329   001D16                     i1l2767:
  8330   001D16  5007               	movf	i1___awdiv@sign^0,w,c
  8331   001D18  B4D8               	btfsc	status,2,c
  8332   001D1A  EF91  F00E         	goto	i1u177_21
  8333   001D1E  EF93  F00E         	goto	i1u177_20
  8334   001D22                     i1u177_21:
  8335   001D22  EF97  F00E         	goto	i1l2771
  8336   001D26                     i1u177_20:
  8337   001D26  6C08               	negf	i1___awdiv@quotient^0,c
  8338   001D28  1E09               	comf	(i1___awdiv@quotient+1)^0,f,c
  8339   001D2A  B0D8               	btfsc	status,0,c
  8340   001D2C  2A09               	incf	(i1___awdiv@quotient+1)^0,f,c
  8341   001D2E                     i1l2771:
  8342   001D2E  C008  F002         	movff	i1___awdiv@quotient,?i1___awdiv
  8343   001D32  C009  F003         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
  8344   001D36  0012               	return		;funcret
  8345   001D38                     __end_ofi1___awdiv:
  8346                           	callstack 0
  8347                           
  8348 ;; *************** function i1_Lcd_Write_String *****************
  8349 ;; Defined at:
  8350 ;;		line 104 in file "lcd.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  a               2    5[COMRAM] PTR const unsigned char 
  8353 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  8354 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(17), 
  8355 ;;		 -> STR_18(17), STR_17(17), STR_15(10), STR_14(10), 
  8356 ;;		 -> STR_13(2), STR_12(2), STR_11(15), STR_10(14), 
  8357 ;;		 -> STR_9(10), STR_8(7), re_pcs_str(20), counted_pcs_str(20), 
  8358 ;;		 -> main@countdown(20), num_str(10), STR_4(17), STR_3(11), 
  8359 ;;		 -> STR_2(16), STR_1(15), 
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;  i               2    9[COMRAM] int 
  8362 ;; Return value:  Size  Location     Type
  8363 ;;                  1    wreg      void 
  8364 ;; Registers used:
  8365 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8366 ;; Tracked objects:
  8367 ;;		On entry : 0/0
  8368 ;;		On exit  : 0/0
  8369 ;;		Unchanged: 0/0
  8370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8371 ;;      Params:         2       0       0       0       0       0       0       0       0
  8372 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8373 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8374 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8375 ;;Total ram usage:        6 bytes
  8376 ;; Hardware stack levels used: 1
  8377 ;; Hardware stack levels required when called: 3
  8378 ;; This function calls:
  8379 ;;		i1_Lcd_Write_Char
  8380 ;; This function is called by:
  8381 ;;		_LOW_PRIORITY
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           	psect	text36
  8386   00211C                     __ptext36:
  8387                           	callstack 0
  8388   00211C                     i1_Lcd_Write_String:
  8389                           	callstack 21
  8390   00211C                     
  8391                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  8392   00211C  0E00               	movlw	0
  8393   00211E  6E0B               	movwf	(i1Lcd_Write_String@i+1)^0,c
  8394   002120  0E00               	movlw	0
  8395   002122  6E0A               	movwf	i1Lcd_Write_String@i^0,c
  8396   002124  EFAE  F010         	goto	i1l3501
  8397   002128                     i1l3497:
  8398                           
  8399                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  8400   002128  500A               	movf	i1Lcd_Write_String@i^0,w,c
  8401   00212A  2406               	addwf	i1Lcd_Write_String@a^0,w,c
  8402   00212C  6E08               	movwf	??i1_Lcd_Write_String^0,c
  8403   00212E  500B               	movf	(i1Lcd_Write_String@i+1)^0,w,c
  8404   002130  2007               	addwfc	(i1Lcd_Write_String@a+1)^0,w,c
  8405   002132  6E09               	movwf	(??i1_Lcd_Write_String+1)^0,c
  8406   002134  C008  FFF6         	movff	??i1_Lcd_Write_String,tblptrl
  8407   002138  C009  FFF7         	movff	??i1_Lcd_Write_String+1,tblptrh
  8408   00213C  6AF8               	clrf	tblptru,c
  8409   00213E  0E07               	movlw	(high __ramtop+-1)
  8410   002140  64F7               	cpfsgt	tblptrh,c
  8411   002142  D003               	bra	i1u243_27
  8412   002144  0008               	tblrd		*
  8413   002146  50F5               	movf	tablat,w,c
  8414   002148  D005               	bra	i1u243_20
  8415   00214A                     i1u243_27:
  8416   00214A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8417   00214E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8418   002152  50E7               	movf	indf1,w,c
  8419   002154                     i1u243_20:
  8420   002154  EC22  F012         	call	i1_Lcd_Write_Char
  8421   002158  4A0A               	infsnz	i1Lcd_Write_String@i^0,f,c
  8422   00215A  2A0B               	incf	(i1Lcd_Write_String@i+1)^0,f,c
  8423   00215C                     i1l3501:
  8424   00215C  500A               	movf	i1Lcd_Write_String@i^0,w,c
  8425   00215E  2406               	addwf	i1Lcd_Write_String@a^0,w,c
  8426   002160  6E08               	movwf	??i1_Lcd_Write_String^0,c
  8427   002162  500B               	movf	(i1Lcd_Write_String@i+1)^0,w,c
  8428   002164  2007               	addwfc	(i1Lcd_Write_String@a+1)^0,w,c
  8429   002166  6E09               	movwf	(??i1_Lcd_Write_String+1)^0,c
  8430   002168  C008  FFF6         	movff	??i1_Lcd_Write_String,tblptrl
  8431   00216C  C009  FFF7         	movff	??i1_Lcd_Write_String+1,tblptrh
  8432   002170  6AF8               	clrf	tblptru,c
  8433   002172  0E07               	movlw	(high __ramtop+-1)
  8434   002174  64F7               	cpfsgt	tblptrh,c
  8435   002176  D003               	bra	i1u244_27
  8436   002178  0008               	tblrd		*
  8437   00217A  50F5               	movf	tablat,w,c
  8438   00217C  D005               	bra	i1u244_20
  8439   00217E                     i1u244_27:
  8440   00217E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8441   002182  CFF7 FFE2          	movff	tblptrh,fsr1h
  8442   002186  50E7               	movf	indf1,w,c
  8443   002188                     i1u244_20:
  8444   002188  0900               	iorlw	0
  8445   00218A  A4D8               	btfss	status,2,c
  8446   00218C  EFCA  F010         	goto	i1u245_21
  8447   002190  EFCC  F010         	goto	i1u245_20
  8448   002194                     i1u245_21:
  8449   002194  EF94  F010         	goto	i1l3497
  8450   002198                     i1u245_20:
  8451   002198  0012               	return		;funcret
  8452   00219A                     __end_ofi1_Lcd_Write_String:
  8453                           	callstack 0
  8454                           
  8455 ;; *************** function i1_Lcd_Write_Char *****************
  8456 ;; Defined at:
  8457 ;;		line 88 in file "lcd.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  a               1    wreg     unsigned char 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  a               1    4[COMRAM] unsigned char 
  8462 ;;  y               1    3[COMRAM] unsigned char 
  8463 ;;  temp            1    2[COMRAM] unsigned char 
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  1    wreg      void 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, status,0, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8473 ;;      Params:         0       0       0       0       0       0       0       0       0
  8474 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8476 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8477 ;;Total ram usage:        3 bytes
  8478 ;; Hardware stack levels used: 1
  8479 ;; Hardware stack levels required when called: 2
  8480 ;; This function calls:
  8481 ;;		i1_Lcd_Port
  8482 ;; This function is called by:
  8483 ;;		i1_Lcd_Write_String
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           	psect	text37
  8488   002444                     __ptext37:
  8489                           	callstack 0
  8490   002444                     i1_Lcd_Write_Char:
  8491                           	callstack 21
  8492                           
  8493                           ;incstack = 0
  8494                           ;i1Lcd_Write_Char@a stored from wreg
  8495   002444  6E05               	movwf	i1Lcd_Write_Char@a^0,c
  8496   002446                     
  8497                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  8498   002446  5005               	movf	i1Lcd_Write_Char@a^0,w,c
  8499   002448  0B0F               	andlw	15
  8500   00244A  6E03               	movwf	i1Lcd_Write_Char@temp^0,c
  8501                           
  8502                           ;lcd.c: 92:     y = a&0xF0;
  8503   00244C  5005               	movf	i1Lcd_Write_Char@a^0,w,c
  8504   00244E  0BF0               	andlw	240
  8505   002450  6E04               	movwf	i1Lcd_Write_Char@y^0,c
  8506   002452                     
  8507                           ;lcd.c: 93:     LATAbits.LA4 = 1;
  8508   002452  8889               	bsf	137,4,c	;volatile
  8509   002454                     
  8510                           ;lcd.c: 94:     Lcd_Port(y>>4);
  8511   002454  3804               	swapf	i1Lcd_Write_Char@y^0,w,c
  8512   002456  0B0F               	andlw	15
  8513   002458  EC2F  F011         	call	i1_Lcd_Port
  8514   00245C                     
  8515                           ;lcd.c: 95:     LATAbits.LA5 = 1;
  8516   00245C  8A89               	bsf	137,5,c	;volatile
  8517   00245E                     
  8518                           ;lcd.c: 96:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  8519   00245E  0E1A               	movlw	26
  8520   002460                     i1u327_27:
  8521   002460  2EE8               	decfsz	wreg,f,c
  8522   002462  D7FE               	bra	i1u327_27
  8523   002464  D000               	nop2	
  8524   002466                     
  8525                           ;lcd.c: 97:     LATAbits.LA5 = 0;
  8526   002466  9A89               	bcf	137,5,c	;volatile
  8527   002468                     
  8528                           ;lcd.c: 98:     Lcd_Port(temp);
  8529   002468  5003               	movf	i1Lcd_Write_Char@temp^0,w,c
  8530   00246A  EC2F  F011         	call	i1_Lcd_Port
  8531   00246E                     
  8532                           ;lcd.c: 99:     LATAbits.LA5 = 1;
  8533   00246E  8A89               	bsf	137,5,c	;volatile
  8534   002470                     
  8535                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  8536   002470  0E1A               	movlw	26
  8537   002472                     i1u328_27:
  8538   002472  2EE8               	decfsz	wreg,f,c
  8539   002474  D7FE               	bra	i1u328_27
  8540   002476  D000               	nop2	
  8541   002478                     
  8542                           ;lcd.c: 101:     LATAbits.LA5 = 0;
  8543   002478  9A89               	bcf	137,5,c	;volatile
  8544   00247A  0012               	return		;funcret
  8545   00247C                     __end_ofi1_Lcd_Write_Char:
  8546                           	callstack 0
  8547                           
  8548 ;; *************** function i1_Lcd_Set_Cursor *****************
  8549 ;; Defined at:
  8550 ;;		line 26 in file "lcd.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  a               1    wreg     unsigned char 
  8553 ;;  b               1    4[COMRAM] unsigned char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  a               1    5[COMRAM] unsigned char 
  8556 ;;  temp            1    8[COMRAM] unsigned char 
  8557 ;;  y               1    7[COMRAM] unsigned char 
  8558 ;;  z               1    6[COMRAM] unsigned char 
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      void 
  8561 ;; Registers used:
  8562 ;;		wreg, status,2, status,0, cstack
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8568 ;;      Params:         1       0       0       0       0       0       0       0       0
  8569 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8571 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8572 ;;Total ram usage:        5 bytes
  8573 ;; Hardware stack levels used: 1
  8574 ;; Hardware stack levels required when called: 3
  8575 ;; This function calls:
  8576 ;;		i1_Lcd_Cmd
  8577 ;; This function is called by:
  8578 ;;		_LOW_PRIORITY
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text38
  8583   001ADC                     __ptext38:
  8584                           	callstack 0
  8585   001ADC                     i1_Lcd_Set_Cursor:
  8586                           	callstack 21
  8587                           
  8588                           ;incstack = 0
  8589                           ;i1Lcd_Set_Cursor@a stored from wreg
  8590   001ADC  6E06               	movwf	i1Lcd_Set_Cursor@a^0,c
  8591   001ADE                     
  8592                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  8593   001ADE  0406               	decf	i1Lcd_Set_Cursor@a^0,w,c
  8594   001AE0  A4D8               	btfss	status,2,c
  8595   001AE2  EF75  F00D         	goto	i1u239_21
  8596   001AE6  EF77  F00D         	goto	i1u239_20
  8597   001AEA                     i1u239_21:
  8598   001AEA  EF88  F00D         	goto	i1l3471
  8599   001AEE                     i1u239_20:
  8600   001AEE                     
  8601                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  8602   001AEE  5005               	movf	i1Lcd_Set_Cursor@b^0,w,c
  8603   001AF0  0F7F               	addlw	127
  8604   001AF2  6E09               	movwf	i1Lcd_Set_Cursor@temp^0,c
  8605                           
  8606                           ;lcd.c: 32:         z = temp>>4;
  8607   001AF4  3809               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  8608   001AF6  0B0F               	andlw	15
  8609   001AF8  6E07               	movwf	i1Lcd_Set_Cursor@z^0,c
  8610                           
  8611                           ;lcd.c: 33:         y = temp & 0x0F;
  8612   001AFA  5009               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  8613   001AFC  0B0F               	andlw	15
  8614   001AFE  6E08               	movwf	i1Lcd_Set_Cursor@y^0,c
  8615   001B00                     
  8616                           ;lcd.c: 34:         Lcd_Cmd(z);
  8617   001B00  5007               	movf	i1Lcd_Set_Cursor@z^0,w,c
  8618   001B02  ECAA  F012         	call	i1_Lcd_Cmd
  8619   001B06                     
  8620                           ;lcd.c: 35:         Lcd_Cmd(y);
  8621   001B06  5008               	movf	i1Lcd_Set_Cursor@y^0,w,c
  8622   001B08  ECAA  F012         	call	i1_Lcd_Cmd
  8623                           
  8624                           ;lcd.c: 36:     }
  8625   001B0C  EFD6  F00D         	goto	i1l255
  8626   001B10                     i1l3471:
  8627   001B10  0E02               	movlw	2
  8628   001B12  1806               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  8629   001B14  A4D8               	btfss	status,2,c
  8630   001B16  EF8F  F00D         	goto	i1u240_21
  8631   001B1A  EF91  F00D         	goto	i1u240_20
  8632   001B1E                     i1u240_21:
  8633   001B1E  EFA2  F00D         	goto	i1l3479
  8634   001B22                     i1u240_20:
  8635   001B22                     
  8636                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  8637   001B22  5005               	movf	i1Lcd_Set_Cursor@b^0,w,c
  8638   001B24  0FBF               	addlw	191
  8639   001B26  6E09               	movwf	i1Lcd_Set_Cursor@temp^0,c
  8640                           
  8641                           ;lcd.c: 40:         z = temp>>4;
  8642   001B28  3809               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  8643   001B2A  0B0F               	andlw	15
  8644   001B2C  6E07               	movwf	i1Lcd_Set_Cursor@z^0,c
  8645                           
  8646                           ;lcd.c: 41:         y = temp & 0x0F;
  8647   001B2E  5009               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  8648   001B30  0B0F               	andlw	15
  8649   001B32  6E08               	movwf	i1Lcd_Set_Cursor@y^0,c
  8650   001B34                     
  8651                           ;lcd.c: 42:         Lcd_Cmd(z);
  8652   001B34  5007               	movf	i1Lcd_Set_Cursor@z^0,w,c
  8653   001B36  ECAA  F012         	call	i1_Lcd_Cmd
  8654   001B3A                     
  8655                           ;lcd.c: 43:         Lcd_Cmd(y);
  8656   001B3A  5008               	movf	i1Lcd_Set_Cursor@y^0,w,c
  8657   001B3C  ECAA  F012         	call	i1_Lcd_Cmd
  8658                           
  8659                           ;lcd.c: 44:     }
  8660   001B40  EFD6  F00D         	goto	i1l255
  8661   001B44                     i1l3479:
  8662   001B44  0E03               	movlw	3
  8663   001B46  1806               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  8664   001B48  A4D8               	btfss	status,2,c
  8665   001B4A  EFA9  F00D         	goto	i1u241_21
  8666   001B4E  EFAB  F00D         	goto	i1u241_20
  8667   001B52                     i1u241_21:
  8668   001B52  EFBC  F00D         	goto	i1l3487
  8669   001B56                     i1u241_20:
  8670   001B56                     
  8671                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  8672   001B56  5005               	movf	i1Lcd_Set_Cursor@b^0,w,c
  8673   001B58  0F93               	addlw	147
  8674   001B5A  6E09               	movwf	i1Lcd_Set_Cursor@temp^0,c
  8675                           
  8676                           ;lcd.c: 48:         z = temp>>4;
  8677   001B5C  3809               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  8678   001B5E  0B0F               	andlw	15
  8679   001B60  6E07               	movwf	i1Lcd_Set_Cursor@z^0,c
  8680                           
  8681                           ;lcd.c: 49:         y = temp & 0x0F;
  8682   001B62  5009               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  8683   001B64  0B0F               	andlw	15
  8684   001B66  6E08               	movwf	i1Lcd_Set_Cursor@y^0,c
  8685   001B68                     
  8686                           ;lcd.c: 50:         Lcd_Cmd(z);
  8687   001B68  5007               	movf	i1Lcd_Set_Cursor@z^0,w,c
  8688   001B6A  ECAA  F012         	call	i1_Lcd_Cmd
  8689   001B6E                     
  8690                           ;lcd.c: 51:         Lcd_Cmd(y);
  8691   001B6E  5008               	movf	i1Lcd_Set_Cursor@y^0,w,c
  8692   001B70  ECAA  F012         	call	i1_Lcd_Cmd
  8693                           
  8694                           ;lcd.c: 52:     }
  8695   001B74  EFD6  F00D         	goto	i1l255
  8696   001B78                     i1l3487:
  8697   001B78  0E04               	movlw	4
  8698   001B7A  1806               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  8699   001B7C  A4D8               	btfss	status,2,c
  8700   001B7E  EFC3  F00D         	goto	i1u242_21
  8701   001B82  EFC5  F00D         	goto	i1u242_20
  8702   001B86                     i1u242_21:
  8703   001B86  EFD6  F00D         	goto	i1l251
  8704   001B8A                     i1u242_20:
  8705   001B8A                     
  8706                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  8707   001B8A  5005               	movf	i1Lcd_Set_Cursor@b^0,w,c
  8708   001B8C  0FD3               	addlw	211
  8709   001B8E  6E09               	movwf	i1Lcd_Set_Cursor@temp^0,c
  8710                           
  8711                           ;lcd.c: 56:         z = temp>>4;
  8712   001B90  3809               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  8713   001B92  0B0F               	andlw	15
  8714   001B94  6E07               	movwf	i1Lcd_Set_Cursor@z^0,c
  8715                           
  8716                           ;lcd.c: 57:         y = temp & 0x0F;
  8717   001B96  5009               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  8718   001B98  0B0F               	andlw	15
  8719   001B9A  6E08               	movwf	i1Lcd_Set_Cursor@y^0,c
  8720   001B9C                     
  8721                           ;lcd.c: 58:         Lcd_Cmd(z);
  8722   001B9C  5007               	movf	i1Lcd_Set_Cursor@z^0,w,c
  8723   001B9E  ECAA  F012         	call	i1_Lcd_Cmd
  8724   001BA2                     
  8725                           ;lcd.c: 59:         Lcd_Cmd(y);
  8726   001BA2  5008               	movf	i1Lcd_Set_Cursor@y^0,w,c
  8727   001BA4  ECAA  F012         	call	i1_Lcd_Cmd
  8728   001BA8  EFD6  F00D         	goto	i1l255
  8729   001BAC                     i1l251:
  8730   001BAC                     i1l255:
  8731   001BAC  0012               	return		;funcret
  8732   001BAE                     __end_ofi1_Lcd_Set_Cursor:
  8733                           	callstack 0
  8734                           
  8735 ;; *************** function i1_Lcd_Clear *****************
  8736 ;; Defined at:
  8737 ;;		line 20 in file "lcd.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;		None
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;		None
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  1    wreg      void 
  8744 ;; Registers used:
  8745 ;;		wreg, status,2, cstack
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8751 ;;      Params:         0       0       0       0       0       0       0       0       0
  8752 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8754 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8755 ;;Total ram usage:        0 bytes
  8756 ;; Hardware stack levels used: 1
  8757 ;; Hardware stack levels required when called: 3
  8758 ;; This function calls:
  8759 ;;		i1_Lcd_Cmd
  8760 ;; This function is called by:
  8761 ;;		_LOW_PRIORITY
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text39
  8766   0025D6                     __ptext39:
  8767                           	callstack 0
  8768   0025D6                     i1_Lcd_Clear:
  8769                           	callstack 21
  8770   0025D6                     
  8771                           ;lcd.c: 22:     Lcd_Cmd(0);
  8772   0025D6  0E00               	movlw	0
  8773   0025D8  ECAA  F012         	call	i1_Lcd_Cmd
  8774                           
  8775                           ;lcd.c: 23:     Lcd_Cmd(1);
  8776   0025DC  0E01               	movlw	1
  8777   0025DE  ECAA  F012         	call	i1_Lcd_Cmd
  8778   0025E2  0012               	return		;funcret
  8779   0025E4                     __end_ofi1_Lcd_Clear:
  8780                           	callstack 0
  8781                           
  8782 ;; *************** function i1_Lcd_Blink *****************
  8783 ;; Defined at:
  8784 ;;		line 123 in file "lcd.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;		None
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      void 
  8791 ;; Registers used:
  8792 ;;		wreg, status,2, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8798 ;;      Params:         0       0       0       0       0       0       0       0       0
  8799 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8801 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8802 ;;Total ram usage:        0 bytes
  8803 ;; Hardware stack levels used: 1
  8804 ;; Hardware stack levels required when called: 3
  8805 ;; This function calls:
  8806 ;;		i1_Lcd_Cmd
  8807 ;; This function is called by:
  8808 ;;		_LOW_PRIORITY
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           	psect	text40
  8813   0025E4                     __ptext40:
  8814                           	callstack 0
  8815   0025E4                     i1_Lcd_Blink:
  8816                           	callstack 21
  8817   0025E4                     
  8818                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  8819   0025E4  0E00               	movlw	0
  8820   0025E6  ECAA  F012         	call	i1_Lcd_Cmd
  8821                           
  8822                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  8823   0025EA  0E0F               	movlw	15
  8824   0025EC  ECAA  F012         	call	i1_Lcd_Cmd
  8825   0025F0  0012               	return		;funcret
  8826   0025F2                     __end_ofi1_Lcd_Blink:
  8827                           	callstack 0
  8828                           
  8829 ;; *************** function i1_Lcd_Cmd *****************
  8830 ;; Defined at:
  8831 ;;		line 11 in file "lcd.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;  a               1    wreg     unsigned char 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;  a               1    3[COMRAM] unsigned char 
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, status,2, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8845 ;;      Params:         0       0       0       0       0       0       0       0       0
  8846 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8847 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8848 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8849 ;;Total ram usage:        2 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; Hardware stack levels required when called: 2
  8852 ;; This function calls:
  8853 ;;		i1_Lcd_Port
  8854 ;; This function is called by:
  8855 ;;		i1_Lcd_Clear
  8856 ;;		i1_Lcd_Set_Cursor
  8857 ;;		i1_Lcd_Blink
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text41
  8862   002554                     __ptext41:
  8863                           	callstack 0
  8864   002554                     i1_Lcd_Cmd:
  8865                           	callstack 21
  8866                           
  8867                           ;incstack = 0
  8868                           ;i1Lcd_Cmd@a stored from wreg
  8869   002554  6E04               	movwf	i1Lcd_Cmd@a^0,c
  8870   002556                     
  8871                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATAbits.LA4 = 0;
  8872   002556  9889               	bcf	137,4,c	;volatile
  8873   002558                     
  8874                           ;lcd.c: 14:     Lcd_Port(a);
  8875   002558  5004               	movf	i1Lcd_Cmd@a^0,w,c
  8876   00255A  EC2F  F011         	call	i1_Lcd_Port
  8877   00255E                     
  8878                           ;lcd.c: 15:     LATAbits.LA5 = 1;
  8879   00255E  8A89               	bsf	137,5,c	;volatile
  8880   002560                     
  8881                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  8882   002560  0E0B               	movlw	11
  8883   002562  6E03               	movwf	??i1_Lcd_Cmd^0,c
  8884   002564  0E62               	movlw	98
  8885   002566                     i1u329_27:
  8886   002566  2EE8               	decfsz	wreg,f,c
  8887   002568  D7FE               	bra	i1u329_27
  8888   00256A  2E03               	decfsz	??i1_Lcd_Cmd^0,f,c
  8889   00256C  D7FC               	bra	i1u329_27
  8890   00256E  D000               	nop2	
  8891   002570                     
  8892                           ;lcd.c: 17:     LATAbits.LA5 = 0;
  8893   002570  9A89               	bcf	137,5,c	;volatile
  8894   002572  0012               	return		;funcret
  8895   002574                     __end_ofi1_Lcd_Cmd:
  8896                           	callstack 0
  8897                           
  8898 ;; *************** function i1_Lcd_Port *****************
  8899 ;; Defined at:
  8900 ;;		line 3 in file "lcd.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  a               1    wreg     unsigned char 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  a               1    1[COMRAM] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		wreg
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0
  8915 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8917 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8918 ;;Total ram usage:        1 bytes
  8919 ;; Hardware stack levels used: 1
  8920 ;; Hardware stack levels required when called: 1
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		i1_Lcd_Cmd
  8925 ;;		i1_Lcd_Write_Char
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           	psect	text42
  8930   00225E                     __ptext42:
  8931                           	callstack 0
  8932   00225E                     i1_Lcd_Port:
  8933                           	callstack 21
  8934                           
  8935                           ;incstack = 0
  8936                           ;i1Lcd_Port@a stored from wreg
  8937   00225E  6E02               	movwf	i1Lcd_Port@a^0,c
  8938   002260                     
  8939                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  8940   002260  A002               	btfss	i1Lcd_Port@a^0,0,c
  8941   002262  EF35  F011         	goto	i1u199_21
  8942   002266  EF37  F011         	goto	i1u199_20
  8943   00226A                     i1u199_21:
  8944   00226A  EF3A  F011         	goto	i1l224
  8945   00226E                     i1u199_20:
  8946   00226E  888C               	bsf	140,4,c	;volatile
  8947   002270  EF3B  F011         	goto	i1l2905
  8948   002274                     i1l224:
  8949   002274  988C               	bcf	140,4,c	;volatile
  8950   002276                     i1l2905:
  8951                           
  8952                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  8953   002276  A202               	btfss	i1Lcd_Port@a^0,1,c
  8954   002278  EF40  F011         	goto	i1u200_21
  8955   00227C  EF42  F011         	goto	i1u200_20
  8956   002280                     i1u200_21:
  8957   002280  EF45  F011         	goto	i1l228
  8958   002284                     i1u200_20:
  8959   002284  8A8C               	bsf	140,5,c	;volatile
  8960   002286  EF46  F011         	goto	i1l2909
  8961   00228A                     i1l228:
  8962   00228A  9A8C               	bcf	140,5,c	;volatile
  8963   00228C                     i1l2909:
  8964                           
  8965                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  8966   00228C  A402               	btfss	i1Lcd_Port@a^0,2,c
  8967   00228E  EF4B  F011         	goto	i1u201_21
  8968   002292  EF4D  F011         	goto	i1u201_20
  8969   002296                     i1u201_21:
  8970   002296  EF50  F011         	goto	i1l232
  8971   00229A                     i1u201_20:
  8972   00229A  8C8C               	bsf	140,6,c	;volatile
  8973   00229C  EF51  F011         	goto	i1l2913
  8974   0022A0                     i1l232:
  8975   0022A0  9C8C               	bcf	140,6,c	;volatile
  8976   0022A2                     i1l2913:
  8977                           
  8978                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  8979   0022A2  A602               	btfss	i1Lcd_Port@a^0,3,c
  8980   0022A4  EF56  F011         	goto	i1u202_21
  8981   0022A8  EF58  F011         	goto	i1u202_20
  8982   0022AC                     i1u202_21:
  8983   0022AC  EF5B  F011         	goto	i1l236
  8984   0022B0                     i1u202_20:
  8985   0022B0  8E8C               	bsf	140,7,c	;volatile
  8986   0022B2  EF5C  F011         	goto	i1l239
  8987   0022B6                     i1l236:
  8988   0022B6  9E8C               	bcf	140,7,c	;volatile
  8989   0022B8                     i1l239:
  8990   0022B8  0012               	return		;funcret
  8991   0022BA                     __end_ofi1_Lcd_Port:
  8992                           	callstack 0
  8993                           
  8994 ;; *************** function _HIGH_PRIORITY_i *****************
  8995 ;; Defined at:
  8996 ;;		line 35 in file "blinky.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;		None
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;		None
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  1    wreg      void 
  9003 ;; Registers used:
  9004 ;;		wreg, status,2, status,0
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9010 ;;      Params:         0       0       0       0       0       0       0       0       0
  9011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9012 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9013 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9014 ;;Total ram usage:        1 bytes
  9015 ;; Hardware stack levels used: 1
  9016 ;; This function calls:
  9017 ;;		Nothing
  9018 ;; This function is called by:
  9019 ;;		Interrupt level 2
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	intcode
  9024   000008                     __pintcode:
  9025                           	callstack 0
  9026   000008                     _HIGH_PRIORITY_i:
  9027                           	callstack 19
  9028                           
  9029                           ;incstack = 0
  9030   000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9031   00000A  EDE3  F011         	call	int_func,f	;refresh shadow registers
  9032                           
  9033                           	psect	intcode_body
  9034   0023C6                     __pintcode_body:
  9035                           	callstack 19
  9036   0023C6                     int_func:
  9037                           	callstack 19
  9038   0023C6  0006               	pop		; remove dummy address from shadow register refresh
  9039   0023C8                     
  9040                           ;blinky.c: 37:     if(INTCONbits.TMR0IF==1)
  9041   0023C8  A4F2               	btfss	242,2,c	;volatile
  9042   0023CA  EFE9  F011         	goto	i2u149_41
  9043   0023CE  EFEB  F011         	goto	i2u149_40
  9044   0023D2                     i2u149_41:
  9045   0023D2  EF01  F012         	goto	i2l432
  9046   0023D6                     i2u149_40:
  9047   0023D6                     
  9048                           ;blinky.c: 38:     {;blinky.c: 39:       LATAbits.LATA1=~LATAbits.LATA1;
  9049   0023D6  B289               	btfsc	137,1,c	;volatile
  9050   0023D8  EFF0  F011         	goto	i2u150_41
  9051   0023DC  EFF3  F011         	goto	i2u150_40
  9052   0023E0                     i2u150_41:
  9053   0023E0  0E01               	movlw	1
  9054   0023E2  EFF4  F011         	goto	i2u150_46
  9055   0023E6                     i2u150_40:
  9056   0023E6  0E00               	movlw	0
  9057   0023E8                     i2u150_46:
  9058   0023E8  0AFF               	xorlw	255
  9059   0023EA  6E01               	movwf	??_HIGH_PRIORITY_i^0,c
  9060   0023EC  4601               	rlncf	??_HIGH_PRIORITY_i^0,f,c
  9061   0023EE  5089               	movf	137,w,c	;volatile
  9062   0023F0  1801               	xorwf	??_HIGH_PRIORITY_i^0,w,c
  9063   0023F2  0BFD               	andlw	-3
  9064   0023F4  1801               	xorwf	??_HIGH_PRIORITY_i^0,w,c
  9065   0023F6  6E89               	movwf	137,c	;volatile
  9066   0023F8                     
  9067                           ;blinky.c: 41:       TMR0H=0b10000101;
  9068   0023F8  0E85               	movlw	133
  9069   0023FA  6ED7               	movwf	215,c	;volatile
  9070   0023FC                     
  9071                           ;blinky.c: 42:       TMR0L=0b11101101;
  9072   0023FC  0EED               	movlw	237
  9073   0023FE  6ED6               	movwf	214,c	;volatile
  9074   002400                     
  9075                           ;blinky.c: 43:       INTCONbits.TMR0IF=0;
  9076   002400  94F2               	bcf	242,2,c	;volatile
  9077   002402                     i2l432:
  9078   002402  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9079   002404  0011               	retfie		f
  9080   002406                     __end_of_HIGH_PRIORITY_i:
  9081                           	callstack 0
  9082                           
  9083                           	psect	rparam
  9084   000000                     
  9085                           	psect	temp
  9086   00004D                     btemp:
  9087                           	callstack 0
  9088   00004D                     	ds	1
  9089   000000                     int$flags	set	btemp
  9090   000000                     wtemp8	set	btemp+1
  9091   000000                     ttemp5	set	btemp+1
  9092   000000                     ttemp6	set	btemp+4
  9093   000000                     ttemp7	set	btemp+8
  9094                           tosu	equ	0xFFF
  9095                           tosh	equ	0xFFE
  9096                           tosl	equ	0xFFD
  9097                           stkptr	equ	0xFFC
  9098                           pclatu	equ	0xFFB
  9099                           pclath	equ	0xFFA
  9100                           pcl	equ	0xFF9
  9101                           tblptru	equ	0xFF8
  9102                           tblptrh	equ	0xFF7
  9103                           tblptrl	equ	0xFF6
  9104                           tablat	equ	0xFF5
  9105                           prodh	equ	0xFF4
  9106                           prodl	equ	0xFF3
  9107                           indf0	equ	0xFEF
  9108                           postinc0	equ	0xFEE
  9109                           postdec0	equ	0xFED
  9110                           preinc0	equ	0xFEC
  9111                           plusw0	equ	0xFEB
  9112                           fsr0h	equ	0xFEA
  9113                           fsr0l	equ	0xFE9
  9114                           wreg	equ	0xFE8
  9115                           indf1	equ	0xFE7
  9116                           postinc1	equ	0xFE6
  9117                           postdec1	equ	0xFE5
  9118                           preinc1	equ	0xFE4
  9119                           plusw1	equ	0xFE3
  9120                           fsr1h	equ	0xFE2
  9121                           fsr1l	equ	0xFE1
  9122                           bsr	equ	0xFE0
  9123                           indf2	equ	0xFDF
  9124                           postinc2	equ	0xFDE
  9125                           postdec2	equ	0xFDD
  9126                           preinc2	equ	0xFDC
  9127                           plusw2	equ	0xFDB
  9128                           fsr2h	equ	0xFDA
  9129                           fsr2l	equ	0xFD9
  9130                           status	equ	0xFD8

Data Sizes:
    Strings     217
    Constant    72
    Data        7
    BSS         129
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      76
    BANK0           160     72     142
    BANK1           256      0      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i1sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    i1sprintf@f$.$source	PTR const unsigned char  size(2) Largest target is 0

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(2) Largest target is 8
		 -> figura_1(CODE[8]), figura_2(CODE[8]), figura_3(CODE[8]), figura_4(CODE[8]), 
		 -> figura_5(CODE[8]), figura_6(CODE[8]), figura_7(CODE[8]), figura_8(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> counted_pcs_str(BANK1[20]), main@countdown(BANK0[20]), num_str(BANK0[10]), re_pcs_str(BANK0[20]), 
		 -> STR_1(CODE[15]), STR_10(CODE[14]), STR_11(CODE[15]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[10]), STR_15(CODE[10]), STR_17(CODE[17]), 
		 -> STR_18(CODE[17]), STR_19(CODE[17]), STR_2(CODE[16]), STR_20(CODE[2]), 
		 -> STR_21(CODE[2]), STR_22(CODE[2]), STR_23(CODE[2]), STR_24(CODE[2]), 
		 -> STR_25(CODE[2]), STR_26(CODE[2]), STR_3(CODE[11]), STR_4(CODE[17]), 
		 -> STR_8(CODE[7]), STR_9(CODE[10]), 

    RGB_BCD@contador	PTR int  size(1) Largest target is 2
		 -> contador(BANK0[2]), 

    RGB_BCD@contador_dec	PTR int  size(1) Largest target is 2
		 -> contador_dec(BANK0[2]), 

    RGB_BCD@re_pcs	PTR int  size(1) Largest target is 2
		 -> re_pcs(BANK0[2]), 

    S1505$buffer	PTR unsigned char  size(2) Largest target is 0

    S1505$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_16(CODE[3]), STR_5(CODE[16]), STR_6(CODE[12]), STR_7(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> counted_pcs_str(BANK1[20]), main@countdown(BANK0[20]), num_str(BANK0[10]), re_pcs_str(BANK0[20]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_16(CODE[3]), STR_5(CODE[16]), STR_6(CODE[12]), STR_7(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_16(CODE[3]), STR_5(CODE[16]), STR_6(CODE[12]), STR_7(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_16(CODE[3]), STR_5(CODE[16]), STR_6(CODE[12]), STR_7(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LOW_PRIORITY in COMRAM

    _LOW_PRIORITY->i1_sprintf
    i1_sprintf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt
    i1_vfpfcnvrt->i1_abs
    i1_abs->i1___awmod
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Blink->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _HIGH_PRIORITY_i in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Welcome->_Lcd_CGRAM_CreateChar
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Blink->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _LOW_PRIORITY in BANK0

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LOW_PRIORITY in BANK1

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LOW_PRIORITY in BANK2

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LOW_PRIORITY in BANK3

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LOW_PRIORITY in BANK4

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LOW_PRIORITY in BANK5

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LOW_PRIORITY in BANK6

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LOW_PRIORITY in BANK7

    None.

Critical Paths under _HIGH_PRIORITY_i in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   20876
                                             48 BANK0     24    24      0
                          _Lcd_Blink
                          _Lcd_Clear
                           _Lcd_Init
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _RGB_BCD
                            _Welcome
                             ___wmul
                             _blinky
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    3711
                                             29 BANK0     19    13      6
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4    2947
                                             23 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3    2586
                                             10 BANK0     13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _blinky                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     463
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Welcome                                              7     7      0    9380
                                             19 BANK0      7     7      0
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    2216
                                              4 BANK0      6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    3864
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     308
                                              3 BANK0      1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_CGRAM_Init                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_CGRAM_CreateChar                                15    13      2    1528
                                              4 BANK0     15    13      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_CGRAM_Close                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _RGB_BCD                                              7     2      5     480
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_NoBlink                                          0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Blink                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _LOW_PRIORITY                                        13    13      0    3557
                                             49 COMRAM    13    13      0
                        i1_Lcd_Blink
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (7) i1_sprintf                                           21    15      6    2185
                                             30 COMRAM    19    13      6
                         i1_vfprintf
 ---------------------------------------------------------------------------------
 (8) i1_vfprintf                                           6     2      4    1934
                                             24 COMRAM     6     2      4
                        i1_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (9) i1_vfpfcnvrt                                         13    10      3    1734
                                             11 COMRAM    13    10      3
                          i1___awdiv
                          i1___awmod
                              i1_abs
                            i1_fputc
 ---------------------------------------------------------------------------------
 (10) i1_fputc                                             8     5      3     330
                                              1 COMRAM     8     5      3
                            i1_putch
 ---------------------------------------------------------------------------------
 (11) i1_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (10) i1_abs                                               4     2      2      92
                                              7 COMRAM     4     2      2
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i1___awdiv                                           8     4      4     352
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_String                                   6     4      2     372
                                              5 COMRAM     6     4      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Write_Char                                     3     3      0     178
                                              2 COMRAM     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Set_Cursor                                     5     4      1     780
                                              4 COMRAM     5     4      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Blink                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Cmd                                            2     2      0     110
                                              2 COMRAM     2     2      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (9) i1_Lcd_Port                                           1     1      0      88
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HIGH_PRIORITY_i                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Blink
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_NoBlink
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _RGB_BCD
   _Welcome
     _Lcd_CGRAM_Close
       _Lcd_Cmd
     _Lcd_CGRAM_CreateChar
       _Lcd_Write_Char
     _Lcd_CGRAM_Init
       _Lcd_Cmd
     _Lcd_Clear
     _Lcd_Init
     _Lcd_Set_Cursor
     _Lcd_Shift_Left
       _Lcd_Cmd
     _Lcd_Shift_Right
       _Lcd_Cmd
     _Lcd_Write_Char
     _Lcd_Write_String
   ___wmul
   _blinky
   _sprintf
     ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _LOW_PRIORITY (ROOT)
   i1_Lcd_Blink
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Clear
     i1_Lcd_Cmd
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port
   i1_sprintf
     i1_vfprintf
       i1_vfpfcnvrt
         i1___awdiv
         i1___awmod
         i1_abs
           i1___awmod (ARG)
         i1_fputc
           i1_putch

 _HIGH_PRIORITY_i (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      34       7       20.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      4C       1       80.9%
BITBIGSFRhhl        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFRhhhlhh     19      0       0      21        0.0%
BITBIGSFRhhhll       E      0       0      24        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRllh         6      0       0      28        0.0%
BITBIGSFRlhh         4      0       0      26        0.0%
BITBIGSFRhhhlhl      2      0       0      23        0.0%
BITBIGSFRhhhlhh      1      0       0      22        0.0%
BITBIGSFRlhl         1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10E      30        0.0%
DATA                 0      0     10E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jul 06 12:54:23 2024

                ___awdiv@sign 0065                            bsr 0FE0           __end_ofi1_vfpfcnvrt 18C0  
         ___wmul@multiplicand 0062                           l109 0E16                           l311 25AA  
                         l232 2244                           l224 2218                           l242 2532  
                         l314 25B8                           l251 1ADA                           l236 225A  
                         l228 222E                           l308 14F2                           l261 2442  
                         l245 259C                           l270 2580                           l239 225C  
                         l255 1ADA                           l409 19FC                           l273 258E  
                         l258 2096                           l426 2552                           l267 211A  
                         l435 250C                           l276 25D4                           l279 25C6  
                         l367 0DCA                           l666 1C72                           l679 1F5E  
                         _abs 247C                           _num 00E2                  ___awmod@sign 0065  
                         wreg 0FE8           __end_of_Lcd_NoBlink 25C8         Lcd_CGRAM_CreateChar@i 006B  
                        l1113 2342                          ?_abs 0066                          l1151 16DC  
                        l3001 1A14                          l1161 2498                          l3011 1A5C  
                        l3003 1A26                          l1164 24B0                          l3101 13C6  
                        l3021 1A98                          l3013 1A62                          l3005 1A2C  
                        l1157 22FE                          l3111 13E2                          l3103 13CA  
                        l3023 1AA4                          l3015 1A6E                          l3007 1A38  
                        l3031 2098                          l1176 1DF2                          l3113 140A  
                        l3105 13DE                          l3025 1AB6                          l3017 1A80  
                        l3009 1A4A                          l3041 2582                          l3033 20A6  
                        l3201 2546                          l3123 1426                          l3115 140E  
                        l3051 129A                          l3043 1292                          l3027 1AC8  
                        l3019 1A92                          l3035 20D8                          l3211 0908  
                        l3203 254E                          l1187 25F8                          l3125 144E  
                        l3117 1422                          l3053 12B6                          l3045 1296  
                        l3029 1ACE                          l3037 20DE                          l3301 0B30  
                        l3221 0958                          l3213 0918                          l3205 2550  
                        l3135 146A                          l3127 1452                          l3063 12D2  
                        l3055 12BA                          l3143 14AA                          l3039 2574  
                        l3303 0B4A                          l3231 09AA                          l3223 0968  
                        l3215 0928                          l3151 22C6                          l3137 1492  
                        l3129 1466                          l3081 1356                          l3065 12FA  
                        l3057 12CE                          l3145 259E                          l3321 0BAE  
                        l3305 0B62                          l3241 09CE                          l3233 09C4  
                        l3225 0978                          l3217 0938                          l3209 0900  
                        l3153 22D8                          l3401 230E                          l4041 1264  
                        l2611 221A                          l4043 19BE                          l3411 18C0  
                        l3147 25AC                          l3139 1496                          l3091 1386  
                        l3075 1316                          l3067 12FE                          l3331 0C08  
                        l3323 0BB4                          l3315 0B7A                          l3307 0B66  
                        l3243 09E8                          l3227 0990                          l3219 0948  
                        l3155 22F4                          l3403 2316                          l2621 2254  
                        l2613 2228                          l3421 1902                          l3413 18CC  
                        l3093 139A                          l3077 133E                          l3069 1312  
                        l3333 0C2C                          l3325 0BDE                          l3317 0B8A  
                        l3309 0B76                          l3261 0A32                          l3253 0A00  
                        l3245 09EC                          l3229 099C                          l2701 1F32  
                        l3149 22BA                          l3405 231E                          l2615 2230  
                        l2607 2202                          l2631 2530                          l2623 2512  
                        l3431 1972                          l3423 1910                          l3415 18DA  
                        l3087 135A                          l3079 1342                          l3351 0C9A  
                        l3335 0C3A                          l3327 0BF8                          l3319 0BA4  
                        l3271 0A6A                          l3263 0A36                          l3255 0A04  
                        l3247 09FC                          l3239 09CA                          l2703 1F38  
                        l3407 2332                          l4039 0FD6                          l2617 223E  
                        l2609 2212                          l2625 2514                          l3441 199A  
                        l3433 197A                          l3425 1950                          l3089 1382  
                        l3361 0CE6                          l3353 0CA0                          l3345 0C52  
                        l3337 0C3E                          l3329 0C02                          l3281 0A9A  
                        l3273 0A84                          l3265 0A42                          l3257 0A1E  
                        l2641 1BCE                          l2633 1BAE                          l2705 1F3E  
                        l2721 1D80                          l2713 1D38                          l3601 0F14  
                        l3521 0DD4                          l2619 2246                          l2627 251C  
                        l3435 1982                          l3427 195A                          l3419 18F0  
                        l3099 139E                          l3371 0D3A                          l3363 0D02  
                        l3355 0CAE                          l3347 0C76                          l3339 0C4E  
                        l3291 0AF6                          l3283 0AB4                          l3267 0A50  
                        l3259 0A22                          l2651 1C02                          l2643 1BDC  
                        l2635 1BB4                          l2707 1F4E                          l2723 1DB2  
                        l2715 1D4A                          l3611 0F5C                          l3531 0DE6  
                        l3523 0DD8                          l2629 251E                          l3437 198A  
                        l3429 196A                          l3381 0D64                          l3373 0D40  
                        l3365 0D0C                          l3357 0CB4                          l3349 0C90  
                        l3293 0B00                          l3285 0ABE                          l3269 0A5C  
                        l2661 1C3C                          l2653 1C0A                          l2645 1BE4  
                        l2637 1BC2                          l2709 1F56                          l2717 1D5A  
                        l3701 11DA                          l3621 0F9E                          l3613 0F7A  
                        l3605 0F34                          l3541 0DF4                          l3533 0DEA  
                        l3525 0DDC                          l3517 0DCC                          l3439 1992  
                        l3447 19A2                          l2831 240A                          l3391 0DB6  
                        l3383 0D7E                          l3375 0D4A                          l3367 0D12  
                        l3359 0CD8                          l3295 0B06                          l3287 0AC4  
                        l3279 0A8A                          l3455 24E6                          l3199 2534  
                        l2671 1C62                          l2663 1C44                          l2655 1C12  
                        l2647 1BE8                          l2639 1BCA                          l2727 247C  
                        l2719 1D64                          l3711 122C                          l3703 11F4  
                        l3623 0FAC                          l3615 0F84                          l3607 0F46  
                        l3631 0FC0                          l3551 0E06                          l3543 0DFC  
                        l3535 0DEC                          l3527 0DE0                          l3519 0DD0  
                        l2841 242C                          l2833 2418                          l3393 0DC6  
                        l3385 0D88                          l3377 0D50                          l3369 0D2C  
                        l3297 0B20                          l3289 0AE8                          l3457 2504  
                        l2673 1C6A                          l2665 1C46                          l2657 1C20  
                        l2649 1BF0                          l2681 1EC2                          l2729 248C  
                        l3713 123A                          l3705 11F8                          l3641 1026  
                        l3625 0FB4                          l3617 0F8E                          l3609 0F50  
                        l3633 0FEC                          l3561 0E18                          l3553 0E08  
                        l3545 0DFE                          l3537 0DEE                          l3529 0DE2  
                        l3395 25C8                          l2843 242E                          l2835 241A  
                        l3387 0DA4                          l3379 0D5E                          l3299 0B2A  
                        l2667 1C4C                          l2659 1C26                          l2691 1EF6  
                        l2683 1ECA                          l2851 14F4                          l3715 1242  
                        l3707 1212                          l3651 104E                          l3635 0FF8  
                        l3619 0F9A                          l3571 0E52                          l3563 0E1C  
                        l3555 0E0A                          l3547 0E00                          l3539 0DF0  
                        l3397 25BA                          l2845 2436                          l2837 2422  
                        l2829 2590                          l3389 0DB2                          l2669 1C52  
                        l2693 1EFE                          l2685 1ECE                          l2677 1EAE  
                        l2861 1542                          l2853 1518                          l3709 1220  
                        l3661 1096                          l3653 105A                          l3637 1008  
                        l3581 0EA2                          l3573 0E60                          l3565 0E22  
                        l3557 0E0C                          l3549 0E02                          l2847 2438  
                        l2839 2424                          l2695 1F06                          l2687 1EDC  
                        l2679 1EB4                          l2871 15C4                          l2863 155E  
                        l2855 1524                          l3399 2300                          l3671 10D6  
                        l3663 109A                          l3655 1066                          l3647 1030  
                        l3639 1022                          l3591 0EDA                          l3583 0EAE  
                        l3575 0E7A                          l3567 0E2E                          l3719 124C  
                        l3559 0E0E                          l2849 2440                          l2697 1F14  
                        l2689 1EE4                          l2881 164A                          l2873 15FA  
                        l2865 157A                          l2857 1530                          l3681 1150  
                        l3673 110E                          l3657 1080                          l3649 104A  
                        l3665 10A0                          l3593 0EE4                          l3585 0EBC  
                        l3577 0E92                          l3569 0E48                          l2971 2022  
                        l2699 1F2A                          l2883 165A                          l2875 1616  
                        l2867 1592                          l2891 16A8                          l2859 1534  
                        l3691 1182                          l3683 115C                          l3675 112A  
                        l3667 10B8                          l3659 1088                          l3595 0EEC  
                        l3587 0EC8                          l3579 0E96                          l2981 2062  
                        l2973 2034                          l2885 1670                          l2877 162A  
                        l2869 15AC                          l3693 118E                          l3685 1170  
                        l3677 1136                          l3669 10D2                          l3589 0ED6  
                        l3597 0EF0                          l2991 2080                          l2983 2068  
                        l2975 203A                          l2967 2010                          l2887 168E  
                        l2879 163A                          l2895 16BA                          l3695 11A8  
                        l3687 1174                          l3679 1144                          l3599 0F02  
                        l2993 2086                          l2985 206E                          l2977 204C  
                        l2969 201C                          l2889 1692                          l3697 11B2  
                        l3689 117E                          l2995 208C                          l2987 2074  
                        l2979 2052                          l3699 11C0                          l2997 2092  
                        l2989 207A                          l2999 1A02                          STR_1 7F89  
                        STR_2 7F69                          STR_3 7FCE                          STR_4 7F58  
                        STR_5 7F79                          STR_6 7FC2                          STR_7 7FB5  
                        STR_8 7FF7                          STR_9 7FED               ?_Lcd_CGRAM_Init 0001  
             __end_of_RGB_BCD 19FE                          u2200 12CA                          u2201 12C6  
                        u2210 130E                          u2130 1A14                          u2211 130A  
                        u2131 1A10                          u2220 1352                          u2140 1A4A  
                        u2300 09FC                          u2221 134E                          u2141 1A46  
                        u2301 09F8                          u1510 2212                          u2230 1396  
                        u2150 1A80                          u2310 0A32                          _LATB 0F8A  
                        u1511 220E                          u2231 1392                          u2151 1A7C  
                        u2311 0A2E                          u3007 1072                          u1520 2228  
                        u2240 13DA                          u2160 1AB6                          u2320 0B76  
                        u1600 1C62                          _LATD 0F8C                          u1521 2224  
                        u2241 13D6                          u2161 1AB2                          u2321 0B72  
                        u1601 1C5E                          u3017 11E6                          _LATE 0F8D  
                        u1530 223E                          u2250 141E                          u2170 20D4  
                        u2330 0C4E                          u1610 1EC2                          u1531 223A  
                        u2251 141A                          u2331 0C4A                          u3107 0B3C  
                        u1611 1EBE                          u3027 1204                          u1540 2254  
                        u2260 1462                          u2180 210A                          u2340 0DC6  
                        u1620 1EDC                          u1700 1DB2                          u2500 0F46  
                        u1541 2250                          u2261 145E                          u2341 0DC2  
                        u3117 0B96                          u3037 09B6                          u1621 1ED8  
                        u1701 1DAE                          u2501 0F42                          u2350 18DA  
                        u2270 14A6                          u2190 211A                          u1550 1BC2  
                        u1630 1EF6                          u1710 248C                          u2510 1022  
                        u2351 18D6                          u2271 14A2                          u3207 2042  
                        u2191 2116                          u3127 0BC0                          u3047 09DA  
                        u1551 1BBE                          u1631 1EF2                          u1711 2488  
                        u2511 101E                          u2360 18EC                          u1560 1BDC  
                        u1640 1F14                          u2280 22F4                          u2520 1096  
                        u2361 18E8                          u3217 205A                          u2177 20CA  
                        u3137 0BEA                          u3057 0A10                          u1561 1BD8  
                        u1641 1F10                          u2281 22F0                          u2521 1092  
                        u2370 1910                          u1570 1C02                          u1650 1F2A  
                        u2530 10D2                          u2371 190C                          u3227 2426  
                        u2187 2100                          u3147 0C14                          u3067 0A76  
                        u1571 1BFE                          u1651 1F26                          u2531 10CE  
                        u2380 1950                          u1580 1C20                          u1660 1F4E  
                        u1900 155E                          u2540 1170                          u2460 0E48  
                        u2381 194C                          u3237 243A                          u3157 0C82  
                        u3077 0AA6                          u1581 1C1C                          u1661 1F4A  
                        u1901 155A                          u2541 116C                          u2461 0E44  
                        u1590 1C3C                          u1670 1D4A                          u1910 157A  
                        u2550 11A8                          u2470 0F02                          u3247 18F8  
                        u3167 0CC0                          u3087 0AD0                          u1591 1C38  
                        u1671 1D46                          u1911 1576                          u2551 11A4  
                        u2471 0EFE                          u1680 1D5A                          u1920 15C0  
                        u2480 0F14                          u3257 2526                          u3177 0D1E  
                        u3097 0B12                          u1681 1D56                          u1921 15BA  
                        u2481 0F10                          u1690 1D80                          u1930 15C2  
                        u2490 0F30                          u3187 0D70                          u1691 1D7C  
                        u2491 0F2C                          u1940 162A                          u3197 202A  
                        u1941 1626                          u1950 163A                          u1951 1636  
                        u1960 164A                          u1961 1646                          u1970 165A  
                        u1890 1518                          u1971 1656                          u1891 1514  
                        u1980 16A4                          u1981 16A0                          u2997 0E86  
             _HIGH_PRIORITY_i 0008                          abs@a 0066             ?_Lcd_Write_String 0064  
                        _dbuf 0100                          _cyan 00EA                          _main 0DCC  
                        _azul 00EB                          _prec 00AA                          _rojo 004C  
                        fsr1h 0FE2                          fsr2h 0FDA                          indf1 0FE7  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        btemp 004D                          prodh 0FF4                          prodl 0FF3  
                        start 08FC            ??_Lcd_Write_String 0066               __end_ofi1_fputc 1EAE  
             __end_ofi1_putch 25FC               __end_of_Lcd_Cmd 2534                  ___param_bank 0000  
                  i1_vfprintf 2344                         ??_abs 0068               __end_of_Welcome 0DCC  
               i1vfpfcnvrt@ap 000E                 i1vfpfcnvrt@cp 0012                 i1vfpfcnvrt@fp 000C  
                       ?_main 0001                i1___awdiv@sign 0007               __end_of___awdiv 1C74  
                       STR_10 7FA7                         STR_11 7F98                         STR_20 7F34  
                       STR_12 7F34                         STR_21 7F34                         STR_13 7F34  
                       STR_22 7F34                         STR_14 7FE3                         STR_23 7F34  
                       STR_15 7FD9                         STR_24 7F34                         STR_16 7F86  
                       STR_25 7F34                         STR_17 7F47                         STR_26 7F34  
                       STR_18 7F25                         STR_19 7F36               __end_of___awmod 1F60  
            ?_Lcd_CGRAM_Close 0001               ___awdiv@divisor 0062                         i1l140 00C6  
                       i1l150 0138                         i1l142 00DC                         i1l207 08CC  
                       i1l232 22A0                         i1l224 2274                         i1l209 08CA  
                       i1l137 008A                         i1l242 2572                         i1l162 01C4  
                       i1l154 0168                         i1l146 010C                         i1l138 00B0  
                       i1l251 1BAC                         i1l163 0206                         i1l236 22B6  
                       i1l228 228A                         i1l164 01DA                         i1l156 017E  
                       i1l148 0122                         i1l245 25E2                         i1l261 247A  
                       i1l166 01F0                         i1l158 0194                         i1l239 22B8  
                       i1l255 1BAC                         i1l267 2198                         i1l276 25F0  
                       i1l199 061C                         i2l432 2402                         i1l666 1D36  
           ?i1_Lcd_Set_Cursor 0005                         i1l679 200E               ___awdiv@counter 0064  
                vfpfcnvrt@fmt 006B                         _TMR0H 0FD7                         _TMR0L 0FD6  
                       _PORTB 0F81                         _TRISA 0F92                         _TRISB 0F93  
                       _TRISD 0F95                         _TRISE 0F96                         i1_abs 24B2  
                 ?i1_Lcd_Port 0001                         _Negro 00ED            ??i1_Lcd_Set_Cursor 0006  
                       _Tecla 004B                i1___awmod@sign 0007                    _Borrado_En 0047  
                       _check 00AC                         _flags 00C0                         _ok_en 003F  
                       _fputc 1D38                         _times 00B0                         _verde 00E9  
                       _width 00A8                         _state 00BE                         _putch 25F8  
                       main@i 00A6                         tablat 0FF5                         plusw2 0FDB  
                       ttemp5 004E                         ttemp6 0051                         ttemp7 0055  
                       status 0FD8                         wtemp8 004E               __end_of_sprintf 2344  
            __end_of_Lcd_Init 2098              __end_of_Lcd_Port 225E                   i1_vfpfcnvrt 16DE  
             __initialization 219A                  __end_of_main 128E                 i1vfprintf@fmt 001A  
                  i1sprintf@f 0026                    i1sprintf@s 001F                   _Lcd_NoBlink 25BA  
                      ??_main 0090                 __activetblptr 0002                        ?i1_abs 0008  
                   ??_RGB_BCD 0065       __end_of_HIGH_PRIORITY_i 2406       Lcd_CGRAM_CreateChar@add 006A  
              i1vfpfcnvrt@fmt 000D                        ?_fputc 0060              ___awdiv@dividend 0060  
                      ?_putch 0001                        i1l1113 23C4                        i1l1151 18BE  
                      i1l1161 24CC                        i1l1164 24E4                        i1l1157 2384  
                      i1l1176 1EAC                        i1l1187 25FA                        i1l3161 2558  
                      i1l3163 255E                        i1l3171 2452                        i1l3165 2560  
                      i1l3181 2468                        i1l3173 2454                        i1l3501 215C  
                      i1l3167 2570                        i1l3159 2556                        i1l3503 25E4  
                      i1l3183 246E                        i1l3175 245C                        i1l3191 2350  
                      i1l3511 23A2                        i1l3185 2470                        i1l3177 245E  
                      i1l3169 2446                        i1l2801 1FE8                        i1l3193 2360  
                      i1l3513 23B6                        i1l3505 2386                        i1l3187 2478  
                      i1l3179 2466                        i1l2731 1C74                        i1l2803 1FEE  
                      i1l2811 24B2                        i1l3195 237C                        i1l3507 2392  
                      i1l2901 2260                        i1l3461 25D6                        i1l2741 1CA0  
                      i1l2733 1C78                        i1l2805 1FFE                        i1l2813 24C0  
                      i1l2821 1E1E                        i1l3189 2344                        i1l3509 239A  
                      i1l2911 229A                        i1l2903 226E                        i1l3471 1B10  
                      i1l3463 1ADE                        i1l2751 1CCE                        i1l2743 1CA8  
                      i1l2735 1C86                        i1l2807 2006                        i1l2823 1E3A  
                      i1l2815 1DF4                        i1l2913 22A2                        i1l2905 2276  
                      i1l3481 1B56                        i1l3473 1B22                        i1l3465 1AEE  
                      i1l2761 1D08                        i1l2753 1CD6                        i1l2745 1CAC  
                      i1l2737 1C8E                        i1l2825 1E6C                        i1l2817 1E04  
                      i1l2921 170C                        i1l3801 02A2                        i1l2915 22B0  
                      i1l2907 2284                        i1l3491 1B9C                        i1l3483 1B68  
                      i1l3475 1B34                        i1l3467 1B00                        i1l2771 1D2E  
                      i1l2763 1D0A                        i1l2755 1CE4                        i1l2747 1CB4  
                      i1l2739 1C92                        i1l2819 1E14                        i1l2931 1764  
                      i1l2923 171A                        i1l3811 034A                        i1l3803 02CE  
                      i1l2909 228C                        i1l3493 1BA2                        i1l3485 1B6E  
                      i1l3477 1B3A                        i1l3469 1B06                        i1l2765 1D10  
                      i1l2757 1CEA                        i1l2749 1CC6                        i1l2781 1F7A  
                      i1l2941 17FE                        i1l2933 177C                        i1l2925 171E  
                      i1l2917 16DE                        i1l3901 069E                        i1l3821 03D8  
                      i1l3813 035C                        i1l3805 02E0                        i1l3741 009A  
                      i1l3733 0046                        i1l3487 1B78                        i1l3479 1B44  
                      i1l3495 211C                        i1l2759 1D00                        i1l2767 1D16  
                      i1l2791 1FAE                        i1l2783 1F7E                        i1l2775 1F60  
                      i1l2951 1856                        i1l2943 1810                        i1l2935 1796  
                      i1l2927 172C                        i1l2919 1700                        i1l3911 0736  
                      i1l3903 06A8                        i1l3831 0480                        i1l3823 0404  
                      i1l3815 0388                        i1l3807 030C                        i1l3751 00F2  
                      i1l3743 00A8                        i1l3735 0054                        i1l3489 1B8A  
                      i1l3497 2128                        i1l2769 1D26                        i1l2793 1FB6  
                      i1l2785 1F8C                        i1l2777 1F64                        i1l2953 1874  
                      i1l2945 1820                        i1l2937 17AE                        i1l2929 1748  
                      i1l2961 189C                        i1l3913 0738                        i1l3905 06B4  
                      i1l3841 04C8                        i1l3833 0492                        i1l3825 0416  
                      i1l3817 039A                        i1l3809 031E                        i1l3761 0146  
                      i1l3753 00F6                        i1l3745 00BE                        i1l3737 0066  
                      i1l3499 2158                        i1l2795 1FC4                        i1l2787 1F94  
                      i1l2779 1F72                        i1l2947 1830                        i1l2955 1876  
                      i1l2939 17E2                        i1l3931 0830                        i1l3915 073A  
                      i1l3907 06C0                        i1l3851 04EE                        i1l3843 04CC  
                      i1l3835 049C                        i1l3827 0442                        i1l3819 03C6  
                      i1l3923 0772                        i1l3771 018C                        i1l3763 014E  
                      i1l3755 0104                        i1l3747 00D4                        i1l3739 007A  
                      i1l2797 1FDA                        i1l2789 1FA6                        i1l2949 1840  
                      i1l2957 188C                        i1l3933 0842                        i1l3917 0740  
                      i1l3909 0734                        i1l3861 0540                        i1l3853 04F6  
                      i1l3845 04D6                        i1l3837 04A8                        i1l3829 0454  
                      i1l3925 07F8                        i1l3781 01D2                        i1l3773 01A2  
                      i1l3765 0152                        i1l3757 011A                        i1l3749 00EA  
                      i1l3941 0882                        i1l2799 1FE2                        i1l3943 0894  
                      i1l3935 085C                        i1l3927 080C                        i1l3919 0748  
                      i1l3871 0598                        i1l3863 055C                        i1l3855 0502  
                      i1l3847 04DE                        i1l3839 04BE                        i1l3791 021C  
                      i1l3783 01E8                        i1l3775 01AA                        i1l3767 0160  
                      i1l3759 0130                        i1l3945 0896                        i1l3929 081E  
                      i1l3937 0866                        i1l3881 0638                        i1l3873 0614  
                      i1l3865 0564                        i1l3857 0514                        i1l3849 04E6  
                      i1l3793 022E                        i1l3785 01FE                        i1l3777 01AE  
                      i1l3769 0176                        i2l2531 23F8                        i1l3947 08BC  
                      i1l3939 086A                        i1l3891 0654                        i1l3883 064C  
                      i1l3875 0616                        i1l3867 057C                        i1l3859 0526  
                      i1l3795 025A                        i1l3779 01BC                        i1l3787 0206  
                      i2l2533 23FC                        i1l3893 0670                        i1l3885 064E  
                      i1l3877 0618                        i1l3869 0584                        i1l3797 026C  
                      i2l2535 2400                        i2l2527 23C8                        i1l3895 0684  
                      i1l3887 0650                        i1l3879 061A                        i1l3799 0290  
                      i2l2529 23D6                        i1l3897 0688                        i1l3889 0652  
                      i1l3899 0692                     ??i1_fputc 0005                 main@countdown 0092  
           ?i1_Lcd_Write_Char 0001                     ??i1_putch 0002                     ??_Lcd_Cmd 0061  
               vfpfcnvrt@done 006F                  ?i1_Lcd_Clear 0001                  ?i1_Lcd_Blink 0001  
                      i1abs@a 0008            ??i1_Lcd_Write_Char 0003             __end_ofi1_Lcd_Cmd 2574  
                vfprintf@cfmt 007B              __end_of_figura_1 7F25              __end_of_figura_2 7F1D  
            __end_of_figura_3 7F15              __end_of_figura_4 7F0D              __end_of_figura_5 7F05  
            __end_of_figura_6 7EFD              __end_of_figura_7 7EF5              __end_of_figura_8 7EED  
            __end_of_figura_9 7EE5                     ??_Welcome 0073                   ?i1_vfprintf 0019  
           i1Lcd_Write_Char@a 0005  Lcd_CGRAM_CreateChar@chardata 0064             i1Lcd_Write_Char@y 0004  
                      ___wmul 24E6                     ??___awdiv 0064                     ??___awmod 0064  
                      _blanco 00C1                        _digito 00B2                        _blinky 2534  
                      _re_pcs 00E0                        clear_0 21D2                        clear_1 21DE  
                      clear_2 21EA              ___awdiv@quotient 0066               ___awmod@divisor 0062  
                      isa$std 0001                        _result 00B4               ___awmod@counter 0064  
           __end_ofi1___awdiv 1D38             __end_ofi1___awmod 2010                        fputc@c 0060  
                __pdataCOMRAM 004C                  __mediumconst 7EDC                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                        putch@c 0001  
            __end_of_vfprintf 2300                     ??_sprintf 0083               Lcd_Set_Cursor@a 0064  
             Lcd_Set_Cursor@b 0063               Lcd_Set_Cursor@y 0066               Lcd_Set_Cursor@z 0065  
   Lcd_CGRAM_CreateChar@i_770 0071     Lcd_CGRAM_CreateChar@i_771 0072     Lcd_CGRAM_CreateChar@i_765 006C  
   Lcd_CGRAM_CreateChar@i_766 006D     Lcd_CGRAM_CreateChar@i_767 006E     Lcd_CGRAM_CreateChar@i_768 006F  
   Lcd_CGRAM_CreateChar@i_769 0070                    __accesstop 0060       __end_of__initialization 21F0  
           __end_ofi1_sprintf 23C6             __end_of_Lcd_Clear 259E             __end_of_Lcd_Blink 25D6  
               ___rparam_used 0001                 __end_ofi1_abs 24E6                __pcstackCOMRAM 0001  
                __pidataBANK0 25F2                i1vfprintf@cfmt 001D                 __end_of_fputc 1DF4  
               __end_of_putch 25FA                _Lcd_Set_Cursor 19FE                       ??i1_abs 000A  
            ??_Lcd_CGRAM_Init 0063                   i1sprintf@ap 0025              ?_HIGH_PRIORITY_i 0001  
              _Lcd_Shift_Left 2582                     ?_Lcd_Init 0001                     ?_Lcd_Port 0001  
                     ??_fputc 0063                       ??_putch 0060                    __pbssBANK0 00A8  
                  __pbssBANK1 0100               i1vfpfcnvrt@done 0011                       ?___wmul 0060  
                     ?_blinky 0001        __end_of_Lcd_Set_Cursor 1ADC                 ?_LOW_PRIORITY 0001  
          i1___awdiv@dividend 0002        __end_of_Lcd_Shift_Left 2590             ??_Lcd_Shift_Right 0063  
                ??i1_Lcd_Port 0002                       _RGB_BCD 18C0                    ??_Lcd_Init 0063  
                  ??_Lcd_Port 0060                       i1_fputc 1DF4                _Lcd_Write_Char 2406  
                     i1_putch 25FA                       _Lcd_Cmd 250E                       _Borrado 00B8  
                     __Hparam 0000                  ?i1_vfpfcnvrt 000C                       __Lparam 0000  
          i1___awdiv@quotient 0008                       _Welcome 0900            __end_ofi1_Lcd_Port 22BA  
                     ___awdiv 1BAE                       ___awmod 1EAE                     ?_vfprintf 0077  
              ??_LOW_PRIORITY 0032                       __pcinit 219A                       __ramtop 0800  
             ?_Lcd_Set_Cursor 0063                  ?_Lcd_NoBlink 0001                       __ptext0 0DCC  
                     __ptext1 2300                       __ptext2 22BA                       __ptext3 14F4  
                     __ptext4 1D38                       __ptext5 25F8                       __ptext6 247C  
                     __ptext7 1EAE                       __ptext8 1BAE                       __ptext9 2534  
                   _T0CONbits 0FD5                       _magenta 00EC               ?_Lcd_Shift_Left 0001  
            ___awmod@dividend 0060                    _re_pcs_str 00C2                       _times_1 00AE  
                     _num_str 00D6    __end_ofi1_Lcd_Write_String 219A                       _sprintf 2300  
      __end_of_Lcd_Write_Char 2444                __pintcode_body 23C6          end_of_initialization 21F0  
                     fputc@fp 0062                 __Lmediumconst 7EDC                       int_func 23C6  
                ??i1_vfprintf 001D             __end_of_vfpfcnvrt 16DE                       postdec1 0FE5  
                     postdec2 0FDD                       postinc0 0FEE                       postinc1 0FE6  
                     postinc2 0FDE              vfpfcnvrt@convarg 0072                     Lcd_Port@a 0060  
                  ??_vfprintf 007B                     i1_Lcd_Cmd 2554                     _PORTBbits 0F81  
                   _PORTCbits 0F82                     _TRISAbits 0F92                     _TRISCbits 0F94  
                   _TRISDbits 0F95                     i1___awdiv 1C74                     i1___awmod 1F60  
             ?_Lcd_Write_Char 0001            __end_ofi1_vfprintf 2386                  _contador_dec 00E4  
           Lcd_Write_String@a 0064             Lcd_Write_String@i 0068                     _E_stop_En 0041  
                   i1_sprintf 2386                     _Lcd_Clear 2590                     _Lcd_Blink 25C8  
                i1vfpfcnvrt@c 0018                   vfpfcnvrt@ap 006C                   vfpfcnvrt@cp 0070  
                 vfpfcnvrt@fp 006A                __end_of___wmul 250E                    ?i1_Lcd_Cmd 0001  
                   i1fputc@fp 0004              _Lcd_Write_String 2098                 __pidataCOMRAM 25FC  
              __end_of_blinky 2554  __end_of_Lcd_CGRAM_CreateChar 14F4           start_initialization 219A  
                 __end_of_abs 24B2                  i1vfprintf@ap 001C                  i1vfprintf@fp 0019  
                  ?i1___awdiv 0002                    ?i1___awmod 0002                     _Keypad_en 0049  
        __end_of_LOW_PRIORITY 08FC              i1_Lcd_Set_Cursor 1ADC             ??_Lcd_CGRAM_Close 0063  
                i1sprintf@fmt 0021                   vfprintf@fmt 0078                    ?i1_sprintf 001F  
                  ?_Lcd_Clear 0001                    ?_Lcd_Blink 0001               _Lcd_Shift_Right 2574  
                    ??___wmul 0064                     _Numpad_en 00BA                      ??_blinky 0060  
                 __pdataBANK0 00E8            i1___awmod@dividend 0002               Lcd_Write_Char@a 0063  
             Lcd_Write_Char@y 0062               _counted_pcs_str 0120                   __pbssCOMRAM 003F  
                    ?_RGB_BCD 0060                 __pcstackBANK0 0060                     _back_l_En 0045  
        i1Lcd_Write_Char@temp 0003                      ?i1_fputc 0002                      ?i1_putch 0001  
                    ?_Lcd_Cmd 0001            i1vfpfcnvrt@convarg 0014              ??_Lcd_Set_Cursor 0064  
                    ?_Welcome 0001                     __pintcode 0008                 __pmediumconst 7EDC  
                    ?___awdiv 0060                      ?___awmod 0060               RGB_BCD@contador 0062  
             RGB_BCD@count_En 0060              i1_Lcd_Write_Char 2444                   ??i1_Lcd_Cmd 0003  
            ??_Lcd_Shift_Left 0063          i1Lcd_Set_Cursor@temp 0009             i1___awdiv@divisor 0004  
                 __pintcodelo 0018             i1___awdiv@counter 0006                   ??i1___awdiv 0006  
                 ??i1___awmod 0006                      ?_sprintf 007D                 ??i1_Lcd_Clear 0005  
               ??i1_Lcd_Blink 0005                ___wmul@product 0064                      _LATAbits 0F89  
                    _LATDbits 0F8C       __end_of_Lcd_Shift_Right 2582          _Lcd_CGRAM_CreateChar 128E  
                    i1u200_20 2284                      i1u200_21 2280                      i1u201_20 229A  
                    i1u201_21 2296                      i1u202_20 22B0                      i1u210_20 1830  
                    i1u202_21 22AC                      i1u210_21 182C                      i1u211_20 1840  
                    i1u203_20 1700                      i1u211_21 183C                      i1u203_21 16FC  
                    i1u212_20 1888                      i1u204_20 1748                      i1u212_21 1884  
                    i1u204_21 1744                      i1u205_20 1764                      i1u205_21 1760  
                    i1u206_20 17AA                      i1u206_21 17A4                      i1u207_20 17AC  
                    i1u240_20 1B22                      i1u208_20 1810                      i1u240_21 1B1E  
                    i1u208_21 180C                      i1u241_20 1B56                      i1u209_20 1820  
                    i1u241_21 1B52                      i1u209_21 181C                      i1u242_20 1B8A  
                    i1u242_21 1B86                      i1u243_20 2154                      i1u243_27 214A  
                    i1u244_20 2188                      i1u172_20 1C86                      i1u180_20 1FA6  
                    i1u260_20 00BE                      i1u172_21 1C82                      i1u180_21 1FA2  
                    i1u260_21 00BA                      i1u244_27 217E                      i1u245_20 2198  
                    i1u173_20 1CA0                      i1u181_20 1FC4                      i1u229_20 237C  
                    i1u261_20 00D4                      i1u245_21 2194                      i1u173_21 1C9C  
                    i1u181_21 1FC0                      i1u229_21 2378                      i1u261_21 00D0  
                    i1u174_20 1CC6                      i1u182_20 1FDA                      i1u270_20 01A2  
                    i1u262_20 00EA                      i1u174_21 1CC2                      i1u182_21 1FD6  
                    i1u270_21 019E                      i1u262_21 00E6                      i1u326_27 0874  
                    i1u239_20 1AEE                      i1u175_20 1CE4                      i1u183_20 1FFE  
                    i1u271_20 01BC                      i1u263_20 0104                      i1u239_21 1AEA  
                    i1u175_21 1CE0                      i1u183_21 1FFA                      i1u271_21 01B8  
                    i1u263_21 0100                      i1u327_27 2460                      i1u176_20 1D00  
                    i1u184_20 24C0                      i1u280_20 031E                      i1u272_20 01D2  
                    i1u264_20 011A                      i1u256_20 0054                      i1u176_21 1CFC  
                    i1u184_21 24BC                      i1u280_21 031A                      i1u272_21 01CE  
                    i1u264_21 0116                      i1u256_21 0050                      i1u328_27 2472  
                    i1u177_20 1D26                      i1u185_20 1E04                      i1u281_20 035C  
                    i1u273_20 01E8                      i1u265_20 0130                      i1u257_20 0066  
                    i1u177_21 1D22                      i1u185_21 1E00                      i1u281_21 0358  
                    i1u273_21 01E4                      i1u265_21 012C                      i1u257_21 0062  
                    i1u329_27 2566                      i1u178_20 1F72                      i1u186_20 1E14  
                    i1u290_20 055C                      i1u282_20 039A                      i1u274_20 01FE  
                    i1u266_20 0146                      i1u258_20 007A                      i1u178_21 1F6E  
                    i1u186_21 1E10                      i1u290_21 0558                      i1u282_21 0396  
                    i1u274_21 01FA                      i1u266_21 0142                      i1u258_21 0076  
                    i1u179_20 1F8C                      i1u187_20 1E3A                      i1u291_20 0598  
                    i1u283_20 03D8                      i1u275_20 0218                      i1u267_20 0160  
                    i1u259_20 00A8                      i1u179_21 1F88                      i1u187_21 1E36  
                    i1u291_21 0594                      i1u283_21 03D4                      i1u275_21 0214  
                    i1u267_21 015C                      i1u259_21 00A4                      i1u188_20 1E6C  
                    i1u292_20 0684                      i1u284_20 0416                      i1u276_20 022E  
                    i1u268_20 0176                      i1u188_21 1E68                      i1u292_21 0680  
                    i1u284_21 0412                      i1u276_21 022A                      i1u268_21 0172  
                    i1u293_20 0758                      i1u285_20 0454                      i1u277_20 026C  
                    i1u269_20 018C                      i1u293_21 0752                      i1u285_21 0450  
                    i1u277_21 0268                      i1u269_21 0188                      i1u293_26 075A  
                    i1u294_20 080C                      i1u286_20 0492                      i1u278_20 02A2  
                    i1u294_21 0808                      i1u286_21 048E                      i1u278_21 029E  
                    i2u150_40 23E6                      i2u150_41 23E0                      i1u199_20 226E  
                    i1u295_20 081E                      i1u287_20 0514                      i1u279_20 02E0  
                    i1u199_21 226A                      i1u295_21 081A                      i1u287_21 0510  
                    i1u279_21 02DC                      i2u150_46 23E8                      i1u296_20 0830  
                    i1u288_20 0526                      i1u296_21 082C                      i1u288_21 0522  
                    i1u297_20 0842                      i1u289_20 0540                      i1u297_21 083E  
                    i1u289_21 053C            i1_Lcd_Write_String 211C                      i1u298_20 0894  
                    i1u298_21 0890                      Lcd_Cmd@a 0062                      i2u149_40 23D6  
                    i2u149_41 23D2                   ??i1_sprintf 0025                   ??_Lcd_Clear 0063  
                    _RCONbits 0FD0                   ??_Lcd_Blink 0063           ?i1_Lcd_Write_String 0006  
                   _vfpfcnvrt 14F4                    _ADCON1bits 0FC1             ___wmul@multiplier 0060  
            ??_Lcd_Write_Char 0061                      _Lcd_Init 2010                      _Lcd_Port 21FE  
                  vfpfcnvrt@c 0076                      i1fputc@c 0002                   _INTCON2bits 0FF1  
                   copy_data0 21AE          ??i1_Lcd_Write_String 0008                      _Enter_en 00BC  
    __end_of_Lcd_Write_String 211C         ?_Lcd_CGRAM_CreateChar 0064                      __Hrparam 0000  
                  vfprintf@ap 007A                      __Lrparam 0000                    vfprintf@fp 0077  
         __end_ofi1_Lcd_Clear 25E4           __end_ofi1_Lcd_Blink 25F2             ??_HIGH_PRIORITY_i 0001  
                    Welcome@i 0075           RGB_BCD@contador_dec 0063             i1___awmod@divisor 0004  
           i1___awmod@counter 0006                    ?_vfpfcnvrt 006A                  _LOW_PRIORITY 0018  
    __end_ofi1_Lcd_Set_Cursor 1BAE                    sprintf@fmt 007F                      _amarillo 00E8  
           i1Lcd_Set_Cursor@a 0006             i1Lcd_Set_Cursor@b 0005             i1Lcd_Set_Cursor@y 0008  
           i1Lcd_Set_Cursor@z 0007               _Lcd_CGRAM_Close 25AC                      __ptext10 24E6  
                    __ptext11 0900                      __ptext20 2406                      __ptext12 2098  
                    __ptext21 25AC                      __ptext13 2574                      __ptext30 16DE  
                    __ptext22 18C0                      __ptext14 2582                      __ptext31 1DF4  
                    __ptext23 25BA                      __ptext15 19FE                      __ptext40 25E4  
                    __ptext32 25FA                      __ptext24 25C8                      __ptext16 2010  
                    __ptext41 2554                      __ptext33 24B2                      __ptext25 250E  
                    __ptext17 2590                      __ptext42 225E                      __ptext34 1F60  
                    __ptext26 21FE                      __ptext18 259E                      __ptext35 1C74  
                    __ptext19 128E                      __ptext36 211C                      __ptext28 2386  
                    __ptext37 2444                      __ptext29 2344                      __ptext38 1ADC  
                    __ptext39 25D6                      _figura_1 7F1D                      _figura_2 7F15  
                    _figura_3 7F0D                      _figura_4 7F05                      _figura_5 7EFD  
                    _figura_6 7EF5                      _figura_7 7EED                      _figura_8 7EE5  
                    _figura_9 7EDD                      _contador 00E6                      _count_En 00B6  
            ?_Lcd_Shift_Right 0001                   i1Lcd_Port@a 0002                      _reset_En 0043  
                Welcome@i_802 0076                  Welcome@i_811 0079                  Welcome@i_806 0078  
                Welcome@i_809 0077                      isa$xinst 0000                      int$flags 004D  
                    _vfprintf 22BA           i1Lcd_Write_String@a 0006           i1Lcd_Write_String@i 000A  
                  _INTCONbits 0FF2            Lcd_Write_Char@temp 0061                      intlevel1 0000  
                    intlevel2 0000                     sprintf@ap 0083      __end_ofi1_Lcd_Write_Char 247C  
      ??_Lcd_CGRAM_CreateChar 0066                _Lcd_CGRAM_Init 259E                   i1_Lcd_Clear 25D6  
                 i1_Lcd_Blink 25E4                 RGB_BCD@re_pcs 0064                    i1Lcd_Cmd@a 0004  
               ??i1_vfpfcnvrt 000F                    _OSCCONbits 0FD3                   ??_vfpfcnvrt 006D  
          Lcd_Set_Cursor@temp 0067                 ??_Lcd_NoBlink 0063       __end_of_Lcd_CGRAM_Close 25BA  
                    sprintf@f 0084                      sprintf@s 007D                    i1_Lcd_Port 225E  
      __end_of_Lcd_CGRAM_Init 25AC  
